{"version":3,"sources":["/source/encapsulate.begin.js","/source/ast.js","/source/parse.js","/source/utils.js","/source/parser.js","/source/process.js","/source/qml.js","/source/elements/Component.js","/source/elements/Item.js","/source/elements/PropertyChanges.js","/source/elements/QtQuick.Controls/Button.js","/source/elements/QtQuick/Column.js","/source/elements/QtQuick/Flow.js","/source/elements/QtQuick/Grid.js","/source/elements/QtQuick/Row.js","/source/QMLBaseObject.js","/source/QMLColor.js","/source/QMLInteger.js","/source/QMLList.js","/source/QMLPositioner.js","/source/QMLProperty.js","/source/QMLVariant.js","/source/QObject.js","/source/UpdateGeometry.js","/source/QMLBinding.js","/source/import.js","/source/qrc.js","/source/qt.js","/source/signal.js","/source/font.js","/source/easing.js","/source/AutoLoader.js","/source/elements/QtGraphicalEffects/FastBlur.js","/source/elements/QtMobility/GeoLocation.js","/source/elements/QtMultimedia/Video.js","/source/elements/QtQuick.Controls/Checkbox.js","/source/elements/QtQuick.Controls/TextArea.js","/source/elements/QtQuick/AnimatedImage.js","/source/elements/QtQuick/Animation.js","/source/elements/QtQuick/Behavior.js","/source/elements/QtQuick/BorderImage.js","/source/elements/QtQuick/DoubleValidator.js","/source/elements/QtQuick/Font.js","/source/elements/QtQuick/FontLoader.js","/source/elements/QtQuick/Image.js","/source/elements/QtQuick/IntValidator.js","/source/elements/QtQuick/ListElement.js","/source/elements/QtQuick/ListModel.js","/source/elements/QtQuick/ListView.js","/source/elements/QtQuick/Loader.js","/source/elements/QtQuick/MouseArea.js","/source/elements/QtQuick/NumberAnimation.js","/source/elements/QtQuick/ParallelAnimation.js","/source/elements/QtQuick/PropertyAnimation.js","/source/elements/QtQuick/Rectangle.js","/source/elements/QtQuick/RegExpValidator.js","/source/elements/QtQuick/Repeater.js","/source/elements/QtQuick/Rotation.js","/source/elements/QtQuick/Scale.js","/source/elements/QtQuick/SequentialAnimation.js","/source/elements/QtQuick/State.js","/source/elements/QtQuick/SystemPalette.js","/source/elements/QtQuick/Text.js","/source/elements/QtQuick/TextInput.js","/source/elements/QtQuick/Timer.js","/source/elements/QtQuick/Transition.js","/source/elements/QtQuick/Translate.js","/source/elements/QtWebSockets/WebSocket.js","/source/lib/jsparser.js","/source/QMLEngine.js","/source/QMLOperationState.js","/source/RestModel.js","/source/Settings.js","/source/encapsulate.end.js"],"names":["global","DEFNODE","type","props","methods","base","arguments","length","AST_Node","split","self_props","PROPS","concat","code","i","proto","initialize","ctor","Function","prototype","BASE","SUBCLASSES","push","CTOR","SELF_PROPS","TYPE","hasOwnProperty","test","substr","DEFMETHOD","name","method","this","walk_body","node","visitor","body","AST_Statement","_walk","forEach","stat","TreeWalker","callback","visit","stack","is_letter","UNICODE","letter","String","fromCharCode","is_digit","is_alphanumeric_char","is_unicode_digit","digit","is_unicode_combining_mark","ch","non_spacing_mark","space_combining_mark","is_unicode_connector_punctuation","connector_punctuation","is_identifier","RESERVED_WORDS","is_identifier_start","is_identifier_char","charCodeAt","is_identifier_string","str","parse_js_number","num","RE_HEX_NUMBER","parseInt","RE_OCT_NUMBER","RE_DEC_NUMBER","parseFloat","JS_Parse_Error","message","filename","line","col","pos","Error","js_error","is_token","token","val","value","tokenizer","$TEXT","html5_comments","peek","S","text","charAt","next","signal_eof","in_string","EX_EOF","indexOf","newline_before","forward","looking_at","find","what","start_token","tokline","tokcol","tokpos","is_comment","regex_allowed","UNARY_POSTFIX","KEYWORDS_BEFORE_EXPRESSION","PUNC_BEFORE_EXPRESSION","prev_was_dot","ret","endline","endcol","endpos","nlb","file","comments_before","len","AST_Token","skip_whitespace","WHITESPACE_CHARS","read_while","pred","parse_error","err","read_num","prefix","has_e","after_e","has_x","has_dot","valid","isNaN","read_escaped_char","hex_bytes","n","skip_line_comment","substring","next_token","read_name","hex","backslash","escaped","KEYWORDS","toString","toUpperCase","slice","read_operator","grow","op","bigger","OPERATORS","handle_slash","skip_multiline_comment","read_regexp","handle_dot","read_word","word","KEYWORDS_ATOM","with_eof_error","eof_error","cont","x","ex","force_regexp","read_string","PUNC_CHARS","OPERATOR_CHARS","quote_char","quote","octal_len","first","tok","a","regexp","prev_backslash","in_class","mods","RegExp","context","nc","parse","options","is","peeked","input","prev","in_directives","croak","msg","ctx","token_error","unexpected","expect_token","expect","punc","can_insert_semicolon","strict","semicolon","parenthesised","exp","expression","embed_tokens","parser","start","expr","end","handle_regexp","labeled_statement","label","as_symbol","AST_Label","find_if","l","labels","statement","pop","AST_IterationStatement","references","ref","AST_Continue","AST_LabeledStatement","simple_statement","tmp","AST_SimpleStatement","break_cont","ldef","AST_LabelRef","thedef","in_loop","for_","init","var_","AST_Var","definitions","for_in","regular_for","step","AST_For","condition","lhs","obj","AST_ForIn","object","if_","cond","belse","AST_If","alternative","block_","switch_body_","cur","branch","AST_Case","AST_Default","try_","bcatch","bfinally","AST_SymbolCatch","AST_Catch","argname","AST_Finally","AST_Try","vardefs","no_in","in_const","AST_VarDef","AST_SymbolConst","AST_SymbolVar","as_atom_node","_make_symbol","AST_SymbolRef","AST_Number","AST_String","AST_RegExp","AST_False","AST_True","AST_Null","expr_list","closing","allow_trailing_comma","allow_empty","AST_Hole","as_property_name","as_name","AST_This","noerror","sym","make_unary","is_assignable","operator","expr_ops","expr_op","maybe_unary","AST_PropAccess","AST_Symbol","defaults","toplevel","bare_returns","in_function","dir","AST_Directive","AST_BlockStatement","AST_EmptyStatement","AST_Break","AST_Debugger","AST_Do","AST_While","function_","AST_Defun","AST_Return","AST_Switch","AST_Throw","const_","AST_With","in_statement","AST_SymbolDefun","AST_SymbolLambda","argnames","AST_SymbolFunarg","loop","AST_Const","new_","args","newexp","expr_atom","subscripts","AST_New","allow_calls","array_","object_","func","AST_Function","ATOMIC_START_TOKEN","AST_Array","elements","AST_ObjectGetter","key","AST_Accessor","AST_ObjectSetter","AST_ObjectKeyVal","AST_Object","properties","AST_Dot","property","prop","AST_Sub","AST_Call","UNARY_PREFIX","AST_UnaryPrefix","AST_UnaryPostfix","left","min_prec","prec","PRECEDENCE","right","AST_Binary","maybe_conditional","yes","AST_Conditional","consequent","maybe_assign","ASSIGNMENT","AST_Assign","commas","AST_Seq","car","cdr","AST_Toplevel","array_to_hash","Object","create","Array","call","characters","member","array","repeat_string","d","DefaultsError","defs","merge","ext","count","noop","push_uniq","el","string_template","replace","p","remove","splice","mergeSort","cmp","b","r","ai","bi","apply","_ms","m","Math","floor","set_difference","filter","set_intersection","makePredicate","words","compareTo","arr","f","JSON","stringify","cats","out","j","sort","cat","all","predicate","Dictionary","_values","_size","clone","temp","comment","extractLinesForErrorDiag","lines","mark","HOP","read_line_comment","read_multiline_comment","warn","NodeWithToken","qmlparse","exigent_mode","eLine","as","add_tokens","maybe_embed_tokens","ast","STATEMENTS_WITH_LABELS","prog1","from","to","curry","tag","maybe_qmlelem","undefined","qmlblock","qml_is_element","qmlstatement","qmlpropdef","objName","propName","qmldefaultprop","qmlsignaldef","propname","onProp","subname","todo","qmlimport","moduleName","isDottedNotation","version","namespace","qmldocument","imports","root","amIn","s","console","log","switch_block_","atom","QMLMethod","src","QMLPropertyDefinition","QMLAliasDefinition","objectName","propertyName","QMLSignalDefinition","params","parameters","QMLMetaPropertyGroup","QMLMetaElement","$class","$children","$on","convertToEngine","tree","walk","walker","walkers","bindout","binding","QMLBinding","item","$imports","qmlelem","elem","statements","$defaultProperty","qmlprop","qmlobjdef","qmlobj","qmlmethod","qmlaliasdef","string","isList","hasBinding","TypeError","parseQML","parsetree","ast_walker","_vardefs","MAP","def","_block","gen","user","with_walkers","save","block","var","const","try","t","c","throw","new","switch","break","continue","conditional","e","assign","lvalue","rvalue","dot","function","defun","if","for","for-in","vvar","hash","while","do","return","binary","unary-prefix","unary-postfix","sub","subscript","rx","seq","with","parent","Scope","names","mangled","rev_mangled","cname","refs","uses_with","uses_eval","children","level","ast_add_scope","with_new_scope","current_scope","scope","define","reference","_lambda","is_defun","w","having_eval","fixrefs","origin","has","ast_mangle","get_mangled","newMangle","except","get_define","defines","extra","next_mangled","with_scope","_scope","set_mangle","at_top","self","best_of","ast1","ast2","gen_code","last_stat","aborts","boolean_expr","make_conditional","make_real_conditional","when_constant","warn_unreachable","empty","is_string","prepare_ifs","redo_if","fi","e_body","redo_if_lambda","redo_if_block","for_side_effects","handler","stop","$stop","restart","$restart","found","unary","ast_lift_variables","do_body","env","skip","unshift","_toplevel","ast_squeeze","negate","not_c","keep_comps","rmblock","tighten","block_type","reduce","dead_code","has_quit","st","no_warnings","make_seqs","make_if","make_real_if","_do_while","last","make_string","ascii_only","dq","sq","to_ascii","encode_string","inline_script","make_name","indent","beautify","indent_start","indentation","indent_level","with_indent","incr","add_spaces","join","add_commas","space","parenthesize","make","needs_parens","DOT_CALL_NO_PARENS","make_num","toLowerCase","exec","make_then","th","make_block","make_function","keyword","must_has_semicolon","make_block_statements","noindent","make_switch_block","newline","has_body","make_1vardef","quote_keys","space_colon","SPLICE_NEEDS_BRACKETS","tr","ca","has_call","co","jsp","stmt","split_lines","max_line_length","splits","current_length","last_split","split_here","custom","prev_token","map","construct","meta","component","constructors","qdirInfo","engine","qmldirs","Qt","createComponent","url","createObject","dom","className","id","$context","$basePath","applyProperties","createSimpleProperty","getter","setter","QMLProperty","default","changed","$properties","set","get","readOnly","newVal","$canEditReadOnlyProperties","setupGetterSetter","$isComponentRoot","metaObject","objectScope","componentScope","Signal","compile","eval","fromAnimation","$setCustomData","signalName","connect","completed","completedAlreadyCalled","unboundMethod","QMLContext","nameForObject","QMLComponent","$metaObject","jsImports","finalizeImports","js","importDesc","qmlEngine","qrc","jsparse","getUrlContents","importJavascriptInContext","bind","moduleImports","loadImport","loadImports","QMLItem","QMLBaseObject","$parent","rootElement","document","innerHTML","style","position","top","overflow","createElement","pointerEvents","qml","css","boxSizing","resources","parentChanged","newParent","oldParent","childrenChanged","removeChild","appendChild","updateHGeometry","updateVGeometry","dataChanged","newData","child","xChanged","yChanged","widthChanged","heightChanged","implicitWidthChanged","implicitHeightChanged","focus","setupFocusOnDom","element","updateFocus","hasFocus","activeElement","firstChild","addEventListener","focusChanged","qmlFocus","activeFocus","getElementsByTagName","rootContext","$isUsingImplicitWidth","$isUsingImplicitHeight","anchors","QObject","leftChanged","rightChanged","topChanged","bottomChanged","horizontalCenterChanged","verticalCenterChanged","fillChanged","centerInChanged","leftMarginChanged","rightMarginChanged","topMarginChanged","bottomMarginChanged","marginsChanged","stateChanged","oldVal","oldState","newState","k","states","actions","$revertActions","action","target","changes","$getAllChanges","change","$actions","origValue","explicit","restoreEntryValues","transition","rating","transitions","curTransition","curRating","reversible","$start","QMLRotation","getConstructor","QMLScale","QMLTranslate","$updateTransform","transform","rotation","scale","transformStyle","axis","y","z","angle","xScale","yScale","transformType","operation","MozTransform","webkitTransform","webkitTransformStyle","OTransform","msTransform","msFilter","webkitFilter","MozFilter","rotationChanged","scaleChanged","transformChanged","visibleChanged","visibility","opacityChanged","opacity","clipChanged","zChanged","width","height","implicitHeight","implicitWidth","spacing","margins","visible","state","window","onresize","innerHeight","innerWidth","offsetHeight","offsetWidth","$draw","$drawItem","rotRad","PI","rotOffsetX","sin","rotOffsetY","globalAlpha","translate","rotate","restore","QMLPropertyChanges","QMLButton","clicked","Component","textChanged","onclick","QMLColumn","QMLPositioner","QMLFlow","Flow","LeftToRight","TopToBottom","flowChanged","layoutChildren","layoutDirectionChanged","flow","layoutDirection","QMLGrid","Grid","columnsChanged","rowsChanged","QMLRow","isComponentRoot","completedSignals","destruction","attributes","__proto__","constructor","Keys","asteriskPresed","backPressed","backtabPressed","callPressed","cancelPressed","deletePressed","escapePressed","flipPressed","hangupPressed","leftPressed","menuPressed","noPressed","pressed","released","returnPressed","rightPressed","selectPressed","spacePressed","tabPressed","upPressed","volumeDownPressed","volumeUpPressed","yesPressed","getAttributes","QMLColor","QMLInteger","QMLList","list","spacingChanged","slotChildrenChanged","animation","$tidyupList","QMLVariant","objectId","objectIds","$delete","$Component","disconnect","$updatingGeometry","hC","lM","leftMargin","rM","rightMargin","fill","isConnected","centerIn","horizontalCenter","u","vC","bottom","tM","topMargin","bM","bottomMargin","verticalCenter","toJSON","deps","$documentation","$propdoc","_visit","warn_function","txt","AST_Block","AST_StatementWithBody","AST_DWLoop","AST_Scope","directives","variables","functions","parent_scope","enclosed","globals","wrap_enclose","arg_parameter_pairs","pair","splitAt","lastIndexOf","wrapped_tl","TreeTransformer","wrap_commonjs","export_all","to_export","figure_out_scope","AST_SymbolDeclaration","definition","getValue","AST_Lambda","uses_arguments","arg","AST_Jump","AST_Exit","AST_LoopControl","AST_SwitchBranch","AST_Definitions","$cons","$from_array","cons","to_array","add","cell","AST_Unary","AST_ObjectProperty","AST_SymbolAccessor","AST_Constant","AST_Atom","AST_NaN","AST_Undefined","AST_Infinity","AST_Boolean","descend","find_parent","has_directive","in_boolean_context","loopcontrol_target","REGEXP_MODIFIERS","backwards","doit","is_last","Last","v","AtTop","Splice","reverse","del","each","size","toObject","fromObject","dict","=","base54","DIGITS","has_mangled","mname","prior","evaluate","$NOT_CONSTANT","no","lval","ex2","o","readExports","eatUntil","recursive","matches","semi","matcher","exports","match","skipExceptions","urlContentCache","xhr","XMLHttpRequest","open","send","status","responseText","readQmlDir","makeurl","path","qmldirFileUrl","qmldir","internals","externals","importJs","includesFile","rgba","g","round","openUrlExternally","page","executionContext","components","nameIsUrl","moredirs","importPathList","error","extractBasePath","$file","resolvedUrl","removeDotSegments","detectedBasePath","currentCaller","caller","maxcount","LeftButton","RightButton","MiddleButton","NoModifier","ShiftModifier","ControlModifier","AltModifier","MetaModifier","KeypadModifier","RightToLeft","Vertical","Horizontal","Key_Escape","Key_Tab","Key_Backtab","Key_Backspace","Key_Return","Key_Enter","Key_Insert","Key_Delete","Key_Pause","Key_Print","Key_SysReq","Key_Clear","Key_Home","Key_End","Key_Left","Key_Up","Key_Right","Key_Down","Key_PageUp","Key_PageDown","Key_Shift","Key_Control","Key_Meta","Key_Alt","Key_AltGr","Key_CapsLock","Key_NumLock","Key_ScrollLock","Key_F1","Key_F2","Key_F3","Key_F4","Key_F5","Key_F6","Key_F7","Key_F8","Key_F9","Key_F10","Key_F11","Key_F12","Key_F13","Key_F14","Key_F15","Key_F16","Key_F17","Key_F18","Key_F19","Key_F20","Key_F21","Key_F22","Key_F23","Key_F24","Key_F25","Key_F26","Key_F27","Key_F28","Key_F29","Key_F30","Key_F31","Key_F32","Key_F33","Key_F34","Key_F35","Key_Super_L","Key_Super_R","Key_Menu","Key_Hyper_L","Key_Hyper_R","Key_Help","Key_Direction_L","Key_Direction_R","Key_Space","Key_Any","Key_Exclam","Key_QuoteDbl","Key_NumberSign","Key_Dollar","Key_Percent","Key_Ampersant","Key_Apostrophe","Key_ParenLeft","Key_ParenRight","Key_Asterisk","Key_Plus","Key_Comma","Key_Minus","Key_Period","Key_Slash","Key_0","Key_1","Key_2","Key_3","Key_4","Key_5","Key_6","Key_7","Key_8","Key_9","Key_Colon","Key_Semicolon","Key_Less","Key_Equal","Key_Greater","Key_Question","Key_At","Key_A","Key_B","Key_C","Key_D","Key_E","Key_F","Key_G","Key_H","Key_I","Key_J","Key_K","Key_L","Key_M","Key_N","Key_O","Key_P","Key_Q","Key_R","Key_S","Key_T","Key_U","Key_V","Key_W","Key_X","Key_Y","Key_Z","Key_BracketLeft","Key_Backslash","Key_BracketRight","Key_AsciiCircum","Key_Underscore","Key_QuoteLeft","Key_BraceLeft","Key_Bar","Key_BraceRight","Key_AsciiTilde","Key_Back","Key_Forward","Key_Stop","Key_VolumeDown","Key_VolumeUp","Key_VolumeMute","Key_Yes","Key_multiply","Key_add","Key_substract","Key_divide","Key_News","Key_OfficeHome","Key_Option","Key_Paste","Key_Phone","Key_Calendar","Key_Reply","Key_Reload","Key_RotateWindows","Key_RotationPB","Key_RotationKB","Key_Save","Key_Send","Key_Spell","Key_SplitScreen","Key_Support","Key_TaskPane","Key_Terminal","Key_Tools","Key_Travel","Key_Video","Key_Word","Key_Xfer","Key_ZoomIn","Key_ZoomOut","Key_Away","Key_Messenger","Key_WebCam","Key_MailForward","Key_Pictures","Key_Music","Key_Battery","Key_Bluetooth","Key_WLAN","Key_UWB","Key_AudioForward","Key_AudioRepeat","Key_AudioRandomPlay","Key_Subtitle","Key_AudioCycleTrack","Key_Time","Key_Hibernate","Key_View","Key_TopMenu","Key_PowerDown","Key_Suspend","Key_ContrastAdjust","Key_MediaLast","Key_unknown","Key_Call","Key_Camera","Key_CameraFocus","Key_Context1","Key_Context2","Key_Context3","Key_Context4","Key_Flip","Key_Hangup","Key_No","Key_Select","Key_ToggleCallHangup","Key_VoiceDial","Key_LastNumberRedial","Key_Execute","Key_Printer","Key_Play","Key_Sleep","Key_Zoom","Key_Cancel","connectedSlots","signal","slot","thisObj","$connectNotify","callType","$disconnectNotify","Font","MixedCase","AllUppercase","AllLowercase","SmallCaps","Capitalize","Light","Normal","DemiBold","Bold","Black","Easing","Linear","InQuad","OutQuad","InOutQuad","OutInQuad","InCubic","OutCubic","InOutCubic","OutInCubic","InQuart","OutQuart","InOutQuart","OutInQuart","InQuint","OutQuint","InOutQuint","OutInQuint","InSine","OutSine","InOutSine","OutInSine","InExpo","OutExpo","InOutExpo","OutInExpo","InCirc","OutCirc","InOutCirc","OutInCirc","InElastic","OutElastic","InOutElastic","OutInElastic","InBack","OutBack","InOutBack","OutInBack","InBounce","OutBounce","InOutBounce","OutInBounce","GETTER","SETTER","evaluatingProperty","int","real","Number","double","bool","Boolean","color","enum","variant","QMLDocument","modules","Main","registerGlobalQmlType","registerQmlType","moduleDescriptor","versions","module","collectConstructorsForModule","mergeObjects","obj1","obj2","mergedObject","perContextConstructors","moduleVersion","moduleAlias","moduleConstructors","setupGetter","setupSetter","useDefineProperty","defineProperty","configurable","enumerable","JSItemModel","roleNames","setRoleNames","rowsInserted","rowsMoved","rowsRemoved","modelReset","metaTags","metaTag","source","getAttribute","QMLEngine","loadFile","operationState","QMLOperationState","Init","bp","stripEffectFromSource","previousSource","index","filterObject","updateEffect","updateFilterObject","radius","radiusChanged","sourceChanged","navigator","geolocation","getCurrentPosition","updatePosition","accuracy","coords","altitude","altitudeAccuracy","heading","latitude","longitude","speed","timestamp","watchPosition","MediaPlayer","NoError","ResourceError","FormatError","NetworkError","AccessDenied","ServiceMissing","StoppedState","PlayingState","PausedState","NoMedia","Loading","Loaded","Buffering","Stalled","EndOfMedia","InvalidMedia","UnknownStatus","VideoOutput","PreserveAspectFit","PreserveAspectCrop","Stretch","domVideo","volumeBackup","runningEventListener","margin","fillMode","volume","duration","playbackState","muted","paused","playing","stopped","autoPlayChanged","autoplay","currentTime","buffered","progress","Buffered","demoVideo","playbackRate","pause","play","seek","offset","mimetypeFromExtension","extension","mimetypes","ogg","ogv","ogm","mp4","webm","parts","canPlayType","positionChanged","volumeChanged","playbackRateChanged","mutedChanged","newValue","volulmeBackup","fillModeChanged","objectFit","QMLFont","font","verticalAlign","colorChanged","onchange","checked","updateValue","oninput","onpropertychanged","QMLImage","Animation","Infinite","alwaysRunToEnd","loops","running","resume","complete","animationChanged","enabledChanged","updateBorder","MozBorderImageSource","$resolvePath","MozBorderImageSlice","border","MozBorderImageRepeat","horizontalTileMode","verticalTileMode","MozBorderImageWidth","webkitBorderImageSource","webkitBorderImageSlice","webkitBorderImageRepeat","webkitBorderImageWidth","OBorderImageSource","OBorderImageSlice","OBorderImageRepeat","OBorderImageWidth","borderImageSlice","borderImageRepeat","borderImageWidth","BorderImage","Repeat","Round","Null","Ready","borderImageSource","horizontalTileModeChanged","verticalTileModeChanged","curPos","maxWidth","DoubleValidator","StandardNotation","ScientificNotation","getDecimalsForNumber","number","Infinity","decimals","notation","standardRegExp","scientificRegExp","getRegExpForNotation","validate","regExp","acceptable","trim","curHPos","curVPos","rowSize","pointSizeChanged","fontSize","boldChanged","fontWeight","weight","capitalizationChanged","fontVariant","textTransform","familyChanged","fontFamily","italicChanged","fontStyle","letterSpacingChanged","letterSpacing","pixelSizeChanged","pointSize","pixelSize","strikeoutChanged","textDecoration","underline","underlineChanged","strikeout","weightChanged","bold","wordSpacingChanged","wordSpacing","cycleTouchName","fontName","lastName","inTouchName","timeouts","setTimeout","loadFont","FontLoader","fontLoader","fontsLoaded","notLoadedFontFamilies","fontLoaded","testDiv","loadFonts","domStyle","font_src","Date","getTime","random","nameChanged","visibleItems","colWidth","rowHeight","gridWidth","gridHeight","columns","rows","ceil","startingPoint","endPoint","img","Image","Tile","TileVertically","TileHorizontally","sourceSize","asynchronous","cache","smooth","mirror","onload","naturalWidth","h","naturalHeight","onerror","updateFillMode","backgroundRepeat","backgroundSize","backgroundPosition","updateMirroring","transformRule","backgroundImage","mirrorChanged","drawImage","firstItem","QMLListElement","$items","$model","$itemsChanged","data","role","rowCount","append","insert","clear","move","vals","setProperty","applyStyleOnItem","$item","orientation","display","styleChanged","QMLRepeater","container","modelChanged","delegateChanged","orientationChanged","_childrenInserted","active","sourceComponent","loaded","sourceUrl","qmlSource","setSource","eventToMouse","accepted","button","modifiers","ctrlKey","CtrlModifier","altKey","shiftKey","metaKey","offsetX","layerX","offsetY","layerY","handleClick","mouse","enabled","acceptedButtons","backgroundColor","entered","exited","hoverEnabled","containsMouse","oncontextmenu","onmousedown","mouseX","mouseY","onmouseup","onmouseover","onmouseout","onmousemove","ticker","now","elapsed","at","$redoActions","easing","$valueForProgress","startLoop","QMLPropertyAnimation","$addTicker","runningChanged","animationFinished","$runningAnimations","QMLAnimation","animations","animationsChanged","$registerStart","$registerStop","redoProperties","$props","redoTargets","$targets","targets","pow","cos","sqrt","amplitude","period","asin","overshoot","targetChanged","targetsChanged","propertyChanged","propertiesChanged","borderRadius","borderColor","borderWidth","borderStyle","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","lineTo","quadraticCurveTo","stroke","fillRect","strokeRect","callOnCompleted","insertChildren","startIndex","endIndex","newItem","delegate","model","QMLListModel","Idle","$initializePropertyBindings","applyModel","roles","sourceStartIndex","sourceEndIndex","destinationIndex","smallestChangedIndex","removeChildren","removed","removeChildProperties","$completed","itemAt","updateOrigin","transformOrigin","MozTransformOrigin","webkitTransformOrigin","angleChanged","maxHeight","xScaleChanged","yScaleChanged","nextAnimation","proceed","anim","curIndex","passedLoops","whenChanged","extend","SystemPalette","Active","Inactive","Disabled","platformsDetectors","systemPalettes","attrs","platform","colorGroupChanged","userAgent","platforms","alternateBase","buttonText","dark","highlight","highlightText","light","mid","midlight","shadow","windowText","inactive","disabled","fontCss","italic","capitalization","lineHeight","family","updateImplicitHeight","updateImplicitWidth","Text","NoWrap","WordWrap","WrapAnywhere","Wrap","WrapAtWordBoundaryOrAnywhere","AlignLeft","AlignRight","AlignHCenter","AlignJustify","Outline","Raised","Sunken","lineHeightChanged","wrapModeChanged","whiteSpace","wordBreak","wordWrap","horizontalAlignment","horizontalAlignmentChanged","textAlign","textShadow","styleColor","styleColorChanged","wrapMode","textBaseline","fillText","TextInput","Password","NoEcho","PasswordEchoOnEdit","testValidator","validator","padding","maximumLength","echoModeChanged","maximumLengthChanged","maxLength","readOnlyChanged","prevTrigger","interval","trigger","repeat","triggered","triggeredOnStart","connectSocket","reconnect","WebSocket","Connecting","socket","onopen","Open","onclose","Closed","errorString","onmessage","textMessageReceived","reconnectSocket","Closing","close","sendTextMessage","statusChanged","activeChanged","urlChanged","uglify_parse","require","jsData","symbolName","AST_Tree","keyCodeToQt","keyCode","keypad","eventToKeyboard","isAutoRepeat","charCode","touchHandler","preventDefault","touches","pageX","offsetLeft","pageY","offsetTop","mousemoveHandler","mouseAreas","oldMousePos","tick","lastTick","tickers","fps","$interval","bindedProperties","rootObject","Running","tickerId","setInterval","whenStart","removeEventListener","clearInterval","whenStop","ensureFileIsLoadedInQrc","basePath","loadQMLTree","loadQML","debugTree","leadingSlash","segments","segment","importsArray","currentFileDir","qmldirsContents","QtQuick","QtQuick.Controls","entry","nameIsQualifiedModuleName","nameIsDir","content","userAddedModulePaths","probableDirs","diredName","attrname","addImportPath","focusedElement","keyboardSignals","onkeypress","event","eventName","backup","onkeyup","registerProperty","dependantProperties","update","dirpath","userAddedImportPaths","setImportPathList","arrayOfDirs","addModulePath","dirPath","loadComponent","$getTextMetrics","canvas","metrics","measureText","$removeTicker","getWidth","getHeight","$perfDraw","debugConsole","$syncPropertyToRemote","sendToServer","generateBodyForPostQuery","ajax","mimeType","queryMimeType","success","xhrReadResponse","saved","objectToUrlEncoded","myEncodeURIComponent","encodeURIComponent","overrideMimeType","onreadystatechange","readyState","DONE","failure","runningRequests","isLoading","setRequestHeader","responseObject","updatePropertiesFromResponseObject","$hasProperty","fetched","fetch","mimetype","destroy","localStorage","getKey","attrName","category","loadProperties","getItem","initializeProperties","emitter","setItem"],"mappings":"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ACA,MAAA1gC,MAAAyY,OAEAsR,IAAA,SAAAlS,GACA,GAAA5S,KACA,KAAA,GAAAnG,KAAAkB,MAAAwY,QACAvT,EAAA3F,KAAAuY,EAAA7X,KAAAwY,QAAA1Z,GAAAA,EAAAc,OAAA,IACA,OAAAqF,IAEA07B,SAAA,WAAA,MAAA3gC,MAAAwY,UAEAD,WAAAqoB,WAAA,SAAAxzB,GACA,GAAAyzB,GAAA,GAAAtoB,WAEA,OADAsoB,GAAApoB,MAAAzC,MAAA6qB,EAAAroB,QAAApL,GACAyzB,ECtOA,IAAA35B,UAAAkO,eACA,QACA,OACA,QACA,QACA,WACA,UACA,SACA,KACA,OACA,UACA,MACA,WACA,KACA,KACA,aACA,MACA,SACA,SACA,QACA,MACA,SACA,MACA,OACA,QACA,SAGAvT,eAAAuT,eACA,WACA,UACA,OACA,OACA,QACA,WACA,SACA,OACA,SACA,UACA,QACA,QACA,OACA,aACA,SACA,MACA,YACA,OACA,SACA,UACA,UACA,YACA,SACA,QACA,SACA,QACA,eACA,SACA,YACA,aAGAtQ,2BAAAsQ,eACA,SACA,MACA,SACA,QACA,OACA,SAGAnN,cAAAmN,eACA,QACA,OACA,OACA,cAGA1M,eAAA0M,cAAAK,WAAA,kBAEApT,cAAA,iBACAE,cAAA,YACAC,cAAA,+CAEAkF,UAAA0N,eACA,KACA,aACA,SACA,MACA,OACA,SACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,MACA,IACA,IACA,KACA,KACA,KACA,MACA,KACA,MACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,OACA,KACA,KACA,KACA,KACA,OAGAzP,iBAAAyP,cAAAK,WAAA,YAEA1Q,uBAAAqQ,cAAAK,WAAA,aAEAhN,WAAA2M,cAAAK,WAAA,cAEAsqB,iBAAA3qB,cAAAK,WAAA,UAKA3U,SACAC,OAAA,GAAAsI,QAAA,0xIACA7H,iBAAA,GAAA6H,QAAA,2kEACA5H,qBAAA,GAAA4H,QAAA,msCACA1H,sBAAA,GAAA0H,QAAA,sE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","file":"qt.min.js","sourcesContent":["(function(global){\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction DEFNODE(type, props, methods, base) {\n    if (arguments.length < 4) base = AST_Node;\n    if (!props) props = [];\n    else props = props.split(/\\s+/);\n    var self_props = props;\n    if (base && base.PROPS)\n        props = props.concat(base.PROPS);\n    var code = \"return function AST_\" + type + \"(props){ if (props) { \";\n    for (var i = props.length; --i >= 0;) {\n        code += \"this.\" + props[i] + \" = props.\" + props[i] + \";\";\n    }\n    var proto = base && new base;\n    if (proto && proto.initialize || (methods && methods.initialize))\n        code += \"this.initialize();\";\n    code += \"}}\";\n    var ctor = new Function(code)();\n    if (proto) {\n        ctor.prototype = proto;\n        ctor.BASE = base;\n    }\n    if (base) base.SUBCLASSES.push(ctor);\n    ctor.prototype.CTOR = ctor;\n    ctor.PROPS = props || null;\n    ctor.SELF_PROPS = self_props;\n    ctor.SUBCLASSES = [];\n    if (type) {\n        ctor.prototype.TYPE = ctor.TYPE = type;\n    }\n    if (methods) for (i in methods) if (methods.hasOwnProperty(i)) {\n        if (/^\\$/.test(i)) {\n            ctor[i.substr(1)] = methods[i];\n        } else {\n            ctor.prototype[i] = methods[i];\n        }\n    }\n    ctor.DEFMETHOD = function(name, method) {\n        this.prototype[name] = method;\n    };\n    return ctor;\n};\n\nvar AST_Token = DEFNODE(\"Token\", \"type value line col pos endline endcol endpos nlb comments_before file\", {\n}, null);\n\nvar AST_Node = DEFNODE(\"Node\", \"start end\", {\n    clone: function() {\n        return new this.CTOR(this);\n    },\n    $documentation: \"Base class of all AST nodes\",\n    $propdoc: {\n        start: \"[AST_Token] The first token of this node\",\n        end: \"[AST_Token] The last token of this node\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this);\n    },\n    walk: function(visitor) {\n        return this._walk(visitor); // not sure the indirection will be any help\n    }\n}, null);\n\nAST_Node.warn_function = null;\nAST_Node.warn = function(txt, props) {\n    if (AST_Node.warn_function)\n        AST_Node.warn_function(string_template(txt, props));\n};\n\n/* -----[ statements ]----- */\n\nvar AST_Statement = DEFNODE(\"Statement\", null, {\n    $documentation: \"Base class of all statements\",\n});\n\nvar AST_Debugger = DEFNODE(\"Debugger\", null, {\n    $documentation: \"Represents a debugger statement\",\n}, AST_Statement);\n\nvar AST_Directive = DEFNODE(\"Directive\", \"value scope quote\", {\n    $documentation: \"Represents a directive, like \\\"use strict\\\";\",\n    $propdoc: {\n        value: \"[string] The value of this directive as a plain string (it's not an AST_String!)\",\n        scope: \"[AST_Scope/S] The scope that this directive affects\",\n        quote: \"[string] the original quote character\"\n    },\n}, AST_Statement);\n\nvar AST_SimpleStatement = DEFNODE(\"SimpleStatement\", \"body\", {\n    $documentation: \"A statement consisting of an expression, i.e. a = 1 + 2\",\n    $propdoc: {\n        body: \"[AST_Node] an expression node (should not be instanceof AST_Statement)\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.body._walk(visitor);\n        });\n    }\n}, AST_Statement);\n\nfunction walk_body(node, visitor) {\n    if (node.body instanceof AST_Statement) {\n        node.body._walk(visitor);\n    }\n    else node.body.forEach(function(stat){\n        stat._walk(visitor);\n    });\n};\n\nvar AST_Block = DEFNODE(\"Block\", \"body\", {\n    $documentation: \"A body of statements (usually bracketed)\",\n    $propdoc: {\n        body: \"[AST_Statement*] an array of statements\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Statement);\n\nvar AST_BlockStatement = DEFNODE(\"BlockStatement\", null, {\n    $documentation: \"A block statement\",\n}, AST_Block);\n\nvar AST_EmptyStatement = DEFNODE(\"EmptyStatement\", null, {\n    $documentation: \"The empty statement (empty block or simply a semicolon)\",\n    _walk: function(visitor) {\n        return visitor._visit(this);\n    }\n}, AST_Statement);\n\nvar AST_StatementWithBody = DEFNODE(\"StatementWithBody\", \"body\", {\n    $documentation: \"Base class for all statements that contain one nested body: `For`, `ForIn`, `Do`, `While`, `With`\",\n    $propdoc: {\n        body: \"[AST_Statement] the body; this should always be present, even if it's an AST_EmptyStatement\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.body._walk(visitor);\n        });\n    }\n}, AST_Statement);\n\nvar AST_LabeledStatement = DEFNODE(\"LabeledStatement\", \"label\", {\n    $documentation: \"Statement with a label\",\n    $propdoc: {\n        label: \"[AST_Label] a label definition\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.label._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_StatementWithBody);\n\nvar AST_IterationStatement = DEFNODE(\"IterationStatement\", null, {\n    $documentation: \"Internal class.  All loops inherit from it.\"\n}, AST_StatementWithBody);\n\nvar AST_DWLoop = DEFNODE(\"DWLoop\", \"condition\", {\n    $documentation: \"Base class for do/while statements\",\n    $propdoc: {\n        condition: \"[AST_Node] the loop condition.  Should not be instanceof AST_Statement\"\n    }\n}, AST_IterationStatement);\n\nvar AST_Do = DEFNODE(\"Do\", null, {\n    $documentation: \"A `do` statement\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.body._walk(visitor);\n            this.condition._walk(visitor);\n        });\n    }\n}, AST_DWLoop);\n\nvar AST_While = DEFNODE(\"While\", null, {\n    $documentation: \"A `while` statement\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.condition._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_DWLoop);\n\nvar AST_For = DEFNODE(\"For\", \"init condition step\", {\n    $documentation: \"A `for` statement\",\n    $propdoc: {\n        init: \"[AST_Node?] the `for` initialization code, or null if empty\",\n        condition: \"[AST_Node?] the `for` termination clause, or null if empty\",\n        step: \"[AST_Node?] the `for` update clause, or null if empty\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            if (this.init) this.init._walk(visitor);\n            if (this.condition) this.condition._walk(visitor);\n            if (this.step) this.step._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_IterationStatement);\n\nvar AST_ForIn = DEFNODE(\"ForIn\", \"init name object\", {\n    $documentation: \"A `for ... in` statement\",\n    $propdoc: {\n        init: \"[AST_Node] the `for/in` initialization code\",\n        name: \"[AST_SymbolRef?] the loop variable, only if `init` is AST_Var\",\n        object: \"[AST_Node] the object that we're looping through\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.init._walk(visitor);\n            this.object._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_IterationStatement);\n\nvar AST_With = DEFNODE(\"With\", \"expression\", {\n    $documentation: \"A `with` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the `with` expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_StatementWithBody);\n\n/* -----[ scope and functions ]----- */\n\nvar AST_Scope = DEFNODE(\"Scope\", \"directives variables functions uses_with uses_eval parent_scope enclosed cname\", {\n    $documentation: \"Base class for all statements introducing a lexical scope\",\n    $propdoc: {\n        directives: \"[string*/S] an array of directives declared in this scope\",\n        variables: \"[Object/S] a map of name -> SymbolDef for all variables/functions defined in this scope\",\n        functions: \"[Object/S] like `variables`, but only lists function declarations\",\n        uses_with: \"[boolean/S] tells whether this scope uses the `with` statement\",\n        uses_eval: \"[boolean/S] tells whether this scope contains a direct call to the global `eval`\",\n        parent_scope: \"[AST_Scope?/S] link to the parent scope\",\n        enclosed: \"[SymbolDef*/S] a list of all symbol definitions that are accessed from this scope or any subscopes\",\n        cname: \"[integer/S] current index for mangling variables (used internally by the mangler)\",\n    },\n}, AST_Block);\n\nvar AST_Toplevel = DEFNODE(\"Toplevel\", \"globals\", {\n    $documentation: \"The toplevel scope\",\n    $propdoc: {\n        globals: \"[Object/S] a map of name -> SymbolDef for all undeclared names\",\n    },\n    wrap_enclose: function(arg_parameter_pairs) {\n        var self = this;\n        var args = [];\n        var parameters = [];\n\n        arg_parameter_pairs.forEach(function(pair) {\n            var splitAt = pair.lastIndexOf(\":\");\n\n            args.push(pair.substr(0, splitAt));\n            parameters.push(pair.substr(splitAt + 1));\n        });\n\n        var wrapped_tl = \"(function(\" + parameters.join(\",\") + \"){ '$ORIG'; })(\" + args.join(\",\") + \")\";\n        wrapped_tl = parse(wrapped_tl);\n        wrapped_tl = wrapped_tl.transform(new TreeTransformer(function before(node){\n            if (node instanceof AST_Directive && node.value == \"$ORIG\") {\n                return MAP.splice(self.body);\n            }\n        }));\n        return wrapped_tl;\n    },\n    wrap_commonjs: function(name, export_all) {\n        var self = this;\n        var to_export = [];\n        if (export_all) {\n            self.figure_out_scope();\n            self.walk(new TreeWalker(function(node){\n                if (node instanceof AST_SymbolDeclaration && node.definition().global) {\n                    if (!find_if(function(n){ return n.name == node.name }, to_export))\n                        to_export.push(node);\n                }\n            }));\n        }\n        var wrapped_tl = \"(function(exports, global){ global['\" + name + \"'] = exports; '$ORIG'; '$EXPORTS'; }({}, (function(){return this}())))\";\n        wrapped_tl = parse(wrapped_tl);\n        wrapped_tl = wrapped_tl.transform(new TreeTransformer(function before(node){\n            if (node instanceof AST_SimpleStatement) {\n                node = node.body;\n                if (node instanceof AST_String) switch (node.getValue()) {\n                  case \"$ORIG\":\n                    return MAP.splice(self.body);\n                  case \"$EXPORTS\":\n                    var body = [];\n                    to_export.forEach(function(sym){\n                        body.push(new AST_SimpleStatement({\n                            body: new AST_Assign({\n                                left: new AST_Sub({\n                                    expression: new AST_SymbolRef({ name: \"exports\" }),\n                                    property: new AST_String({ value: sym.name }),\n                                }),\n                                operator: \"=\",\n                                right: new AST_SymbolRef(sym),\n                            }),\n                        }));\n                    });\n                    return MAP.splice(body);\n                }\n            }\n        }));\n        return wrapped_tl;\n    }\n}, AST_Scope);\n\nvar AST_Lambda = DEFNODE(\"Lambda\", \"name argnames uses_arguments\", {\n    $documentation: \"Base class for functions\",\n    $propdoc: {\n        name: \"[AST_SymbolDeclaration?] the name of this function\",\n        argnames: \"[AST_SymbolFunarg*] array of function arguments\",\n        uses_arguments: \"[boolean/S] tells whether this function accesses the arguments array\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            if (this.name) this.name._walk(visitor);\n            this.argnames.forEach(function(arg){\n                arg._walk(visitor);\n            });\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Scope);\n\nvar AST_Accessor = DEFNODE(\"Accessor\", null, {\n    $documentation: \"A setter/getter function.  The `name` property is always null.\"\n}, AST_Lambda);\n\nvar AST_Function = DEFNODE(\"Function\", null, {\n    $documentation: \"A function expression\"\n}, AST_Lambda);\n\nvar AST_Defun = DEFNODE(\"Defun\", null, {\n    $documentation: \"A function definition\"\n}, AST_Lambda);\n\n/* -----[ JUMPS ]----- */\n\nvar AST_Jump = DEFNODE(\"Jump\", null, {\n    $documentation: \"Base class for “jumps” (for now that's `return`, `throw`, `break` and `continue`)\"\n}, AST_Statement);\n\nvar AST_Exit = DEFNODE(\"Exit\", \"value\", {\n    $documentation: \"Base class for “exits” (`return` and `throw`)\",\n    $propdoc: {\n        value: \"[AST_Node?] the value returned or thrown by this statement; could be null for AST_Return\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.value && function(){\n            this.value._walk(visitor);\n        });\n    }\n}, AST_Jump);\n\nvar AST_Return = DEFNODE(\"Return\", null, {\n    $documentation: \"A `return` statement\"\n}, AST_Exit);\n\nvar AST_Throw = DEFNODE(\"Throw\", null, {\n    $documentation: \"A `throw` statement\"\n}, AST_Exit);\n\nvar AST_LoopControl = DEFNODE(\"LoopControl\", \"label\", {\n    $documentation: \"Base class for loop control statements (`break` and `continue`)\",\n    $propdoc: {\n        label: \"[AST_LabelRef?] the label, or null if none\",\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.label && function(){\n            this.label._walk(visitor);\n        });\n    }\n}, AST_Jump);\n\nvar AST_Break = DEFNODE(\"Break\", null, {\n    $documentation: \"A `break` statement\"\n}, AST_LoopControl);\n\nvar AST_Continue = DEFNODE(\"Continue\", null, {\n    $documentation: \"A `continue` statement\"\n}, AST_LoopControl);\n\n/* -----[ IF ]----- */\n\nvar AST_If = DEFNODE(\"If\", \"condition alternative\", {\n    $documentation: \"A `if` statement\",\n    $propdoc: {\n        condition: \"[AST_Node] the `if` condition\",\n        alternative: \"[AST_Statement?] the `else` part, or null if not present\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.condition._walk(visitor);\n            this.body._walk(visitor);\n            if (this.alternative) this.alternative._walk(visitor);\n        });\n    }\n}, AST_StatementWithBody);\n\n/* -----[ SWITCH ]----- */\n\nvar AST_Switch = DEFNODE(\"Switch\", \"expression\", {\n    $documentation: \"A `switch` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the `switch` “discriminant”\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Block);\n\nvar AST_SwitchBranch = DEFNODE(\"SwitchBranch\", null, {\n    $documentation: \"Base class for `switch` branches\",\n}, AST_Block);\n\nvar AST_Default = DEFNODE(\"Default\", null, {\n    $documentation: \"A `default` switch branch\",\n}, AST_SwitchBranch);\n\nvar AST_Case = DEFNODE(\"Case\", \"expression\", {\n    $documentation: \"A `case` switch branch\",\n    $propdoc: {\n        expression: \"[AST_Node] the `case` expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            walk_body(this, visitor);\n        });\n    }\n}, AST_SwitchBranch);\n\n/* -----[ EXCEPTIONS ]----- */\n\nvar AST_Try = DEFNODE(\"Try\", \"bcatch bfinally\", {\n    $documentation: \"A `try` statement\",\n    $propdoc: {\n        bcatch: \"[AST_Catch?] the catch block, or null if not present\",\n        bfinally: \"[AST_Finally?] the finally block, or null if not present\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            walk_body(this, visitor);\n            if (this.bcatch) this.bcatch._walk(visitor);\n            if (this.bfinally) this.bfinally._walk(visitor);\n        });\n    }\n}, AST_Block);\n\nvar AST_Catch = DEFNODE(\"Catch\", \"argname\", {\n    $documentation: \"A `catch` node; only makes sense as part of a `try` statement\",\n    $propdoc: {\n        argname: \"[AST_SymbolCatch] symbol for the exception\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.argname._walk(visitor);\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Block);\n\nvar AST_Finally = DEFNODE(\"Finally\", null, {\n    $documentation: \"A `finally` node; only makes sense as part of a `try` statement\"\n}, AST_Block);\n\n/* -----[ VAR/CONST ]----- */\n\nvar AST_Definitions = DEFNODE(\"Definitions\", \"definitions\", {\n    $documentation: \"Base class for `var` or `const` nodes (variable declarations/initializations)\",\n    $propdoc: {\n        definitions: \"[AST_VarDef*] array of variable definitions\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.definitions.forEach(function(def){\n                def._walk(visitor);\n            });\n        });\n    }\n}, AST_Statement);\n\nvar AST_Var = DEFNODE(\"Var\", null, {\n    $documentation: \"A `var` statement\"\n}, AST_Definitions);\n\nvar AST_Const = DEFNODE(\"Const\", null, {\n    $documentation: \"A `const` statement\"\n}, AST_Definitions);\n\nvar AST_VarDef = DEFNODE(\"VarDef\", \"name value\", {\n    $documentation: \"A variable declaration; only appears in a AST_Definitions node\",\n    $propdoc: {\n        name: \"[AST_SymbolVar|AST_SymbolConst] name of the variable\",\n        value: \"[AST_Node?] initializer, or null of there's no initializer\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.name._walk(visitor);\n            if (this.value) this.value._walk(visitor);\n        });\n    }\n});\n\n/* -----[ OTHER ]----- */\n\nvar AST_Call = DEFNODE(\"Call\", \"expression args\", {\n    $documentation: \"A function call expression\",\n    $propdoc: {\n        expression: \"[AST_Node] expression to invoke as function\",\n        args: \"[AST_Node*] array of arguments\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            this.args.forEach(function(arg){\n                arg._walk(visitor);\n            });\n        });\n    }\n});\n\nvar AST_New = DEFNODE(\"New\", null, {\n    $documentation: \"An object instantiation.  Derives from a function call since it has exactly the same properties\"\n}, AST_Call);\n\nvar AST_Seq = DEFNODE(\"Seq\", \"car cdr\", {\n    $documentation: \"A sequence expression (two comma-separated expressions)\",\n    $propdoc: {\n        car: \"[AST_Node] first element in sequence\",\n        cdr: \"[AST_Node] second element in sequence\"\n    },\n    $cons: function(x, y) {\n        var seq = new AST_Seq(x);\n        seq.car = x;\n        seq.cdr = y;\n        return seq;\n    },\n    $from_array: function(array) {\n        if (array.length == 0) return null;\n        if (array.length == 1) return array[0].clone();\n        var list = null;\n        for (var i = array.length; --i >= 0;) {\n            list = AST_Seq.cons(array[i], list);\n        }\n        var p = list;\n        while (p) {\n            if (p.cdr && !p.cdr.cdr) {\n                p.cdr = p.cdr.car;\n                break;\n            }\n            p = p.cdr;\n        }\n        return list;\n    },\n    to_array: function() {\n        var p = this, a = [];\n        while (p) {\n            a.push(p.car);\n            if (p.cdr && !(p.cdr instanceof AST_Seq)) {\n                a.push(p.cdr);\n                break;\n            }\n            p = p.cdr;\n        }\n        return a;\n    },\n    add: function(node) {\n        var p = this;\n        while (p) {\n            if (!(p.cdr instanceof AST_Seq)) {\n                var cell = AST_Seq.cons(p.cdr, node);\n                return p.cdr = cell;\n            }\n            p = p.cdr;\n        }\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.car._walk(visitor);\n            if (this.cdr) this.cdr._walk(visitor);\n        });\n    }\n});\n\nvar AST_PropAccess = DEFNODE(\"PropAccess\", \"expression property\", {\n    $documentation: \"Base class for property access expressions, i.e. `a.foo` or `a[\\\"foo\\\"]`\",\n    $propdoc: {\n        expression: \"[AST_Node] the “container” expression\",\n        property: \"[AST_Node|string] the property to access.  For AST_Dot this is always a plain string, while for AST_Sub it's an arbitrary AST_Node\"\n    }\n});\n\nvar AST_Dot = DEFNODE(\"Dot\", null, {\n    $documentation: \"A dotted property access expression\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n        });\n    }\n}, AST_PropAccess);\n\nvar AST_Sub = DEFNODE(\"Sub\", null, {\n    $documentation: \"Index-style property access, i.e. `a[\\\"foo\\\"]`\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            this.property._walk(visitor);\n        });\n    }\n}, AST_PropAccess);\n\nvar AST_Unary = DEFNODE(\"Unary\", \"operator expression\", {\n    $documentation: \"Base class for unary expressions\",\n    $propdoc: {\n        operator: \"[string] the operator\",\n        expression: \"[AST_Node] expression that this unary operator applies to\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n        });\n    }\n});\n\nvar AST_UnaryPrefix = DEFNODE(\"UnaryPrefix\", null, {\n    $documentation: \"Unary prefix expression, i.e. `typeof i` or `++i`\"\n}, AST_Unary);\n\nvar AST_UnaryPostfix = DEFNODE(\"UnaryPostfix\", null, {\n    $documentation: \"Unary postfix expression, i.e. `i++`\"\n}, AST_Unary);\n\nvar AST_Binary = DEFNODE(\"Binary\", \"left operator right\", {\n    $documentation: \"Binary expression, i.e. `a + b`\",\n    $propdoc: {\n        left: \"[AST_Node] left-hand side expression\",\n        operator: \"[string] the operator\",\n        right: \"[AST_Node] right-hand side expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.left._walk(visitor);\n            this.right._walk(visitor);\n        });\n    }\n});\n\nvar AST_Conditional = DEFNODE(\"Conditional\", \"condition consequent alternative\", {\n    $documentation: \"Conditional expression using the ternary operator, i.e. `a ? b : c`\",\n    $propdoc: {\n        condition: \"[AST_Node]\",\n        consequent: \"[AST_Node]\",\n        alternative: \"[AST_Node]\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.condition._walk(visitor);\n            this.consequent._walk(visitor);\n            this.alternative._walk(visitor);\n        });\n    }\n});\n\nvar AST_Assign = DEFNODE(\"Assign\", null, {\n    $documentation: \"An assignment expression — `a = b + 5`\",\n}, AST_Binary);\n\n/* -----[ LITERALS ]----- */\n\nvar AST_Array = DEFNODE(\"Array\", \"elements\", {\n    $documentation: \"An array literal\",\n    $propdoc: {\n        elements: \"[AST_Node*] array of elements\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.elements.forEach(function(el){\n                el._walk(visitor);\n            });\n        });\n    }\n});\n\nvar AST_Object = DEFNODE(\"Object\", \"properties\", {\n    $documentation: \"An object literal\",\n    $propdoc: {\n        properties: \"[AST_ObjectProperty*] array of properties\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.properties.forEach(function(prop){\n                prop._walk(visitor);\n            });\n        });\n    }\n});\n\nvar AST_ObjectProperty = DEFNODE(\"ObjectProperty\", \"key value\", {\n    $documentation: \"Base class for literal object properties\",\n    $propdoc: {\n        key: \"[string] the property name converted to a string for ObjectKeyVal.  For setters and getters this is an arbitrary AST_Node.\",\n        value: \"[AST_Node] property value.  For setters and getters this is an AST_Function.\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.value._walk(visitor);\n        });\n    }\n});\n\nvar AST_ObjectKeyVal = DEFNODE(\"ObjectKeyVal\", \"quote\", {\n    $documentation: \"A key: value object property\",\n    $propdoc: {\n        quote: \"[string] the original quote character\"\n    }\n}, AST_ObjectProperty);\n\nvar AST_ObjectSetter = DEFNODE(\"ObjectSetter\", null, {\n    $documentation: \"An object setter property\",\n}, AST_ObjectProperty);\n\nvar AST_ObjectGetter = DEFNODE(\"ObjectGetter\", null, {\n    $documentation: \"An object getter property\",\n}, AST_ObjectProperty);\n\nvar AST_Symbol = DEFNODE(\"Symbol\", \"scope name thedef\", {\n    $propdoc: {\n        name: \"[string] name of this symbol\",\n        scope: \"[AST_Scope/S] the current scope (not necessarily the definition scope)\",\n        thedef: \"[SymbolDef/S] the definition of this symbol\"\n    },\n    $documentation: \"Base class for all symbols\",\n});\n\nvar AST_SymbolAccessor = DEFNODE(\"SymbolAccessor\", null, {\n    $documentation: \"The name of a property accessor (setter/getter function)\"\n}, AST_Symbol);\n\nvar AST_SymbolDeclaration = DEFNODE(\"SymbolDeclaration\", \"init\", {\n    $documentation: \"A declaration symbol (symbol in var/const, function name or argument, symbol in catch)\",\n    $propdoc: {\n        init: \"[AST_Node*/S] array of initializers for this declaration.\"\n    }\n}, AST_Symbol);\n\nvar AST_SymbolVar = DEFNODE(\"SymbolVar\", null, {\n    $documentation: \"Symbol defining a variable\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolConst = DEFNODE(\"SymbolConst\", null, {\n    $documentation: \"A constant declaration\"\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolFunarg = DEFNODE(\"SymbolFunarg\", null, {\n    $documentation: \"Symbol naming a function argument\",\n}, AST_SymbolVar);\n\nvar AST_SymbolDefun = DEFNODE(\"SymbolDefun\", null, {\n    $documentation: \"Symbol defining a function\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolLambda = DEFNODE(\"SymbolLambda\", null, {\n    $documentation: \"Symbol naming a function expression\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolCatch = DEFNODE(\"SymbolCatch\", null, {\n    $documentation: \"Symbol naming the exception in catch\",\n}, AST_SymbolDeclaration);\n\nvar AST_Label = DEFNODE(\"Label\", \"references\", {\n    $documentation: \"Symbol naming a label (declaration)\",\n    $propdoc: {\n        references: \"[AST_LoopControl*] a list of nodes referring to this label\"\n    },\n    initialize: function() {\n        this.references = [];\n        this.thedef = this;\n    }\n}, AST_Symbol);\n\nvar AST_SymbolRef = DEFNODE(\"SymbolRef\", null, {\n    $documentation: \"Reference to some symbol (not definition/declaration)\",\n}, AST_Symbol);\n\nvar AST_LabelRef = DEFNODE(\"LabelRef\", null, {\n    $documentation: \"Reference to a label symbol\",\n}, AST_Symbol);\n\nvar AST_This = DEFNODE(\"This\", null, {\n    $documentation: \"The `this` symbol\",\n}, AST_Symbol);\n\nvar AST_Constant = DEFNODE(\"Constant\", null, {\n    $documentation: \"Base class for all constants\",\n    getValue: function() {\n        return this.value;\n    }\n});\n\nvar AST_String = DEFNODE(\"String\", \"value quote\", {\n    $documentation: \"A string literal\",\n    $propdoc: {\n        value: \"[string] the contents of this string\",\n        quote: \"[string] the original quote character\"\n    }\n}, AST_Constant);\n\nvar AST_Number = DEFNODE(\"Number\", \"value\", {\n    $documentation: \"A number literal\",\n    $propdoc: {\n        value: \"[number] the numeric value\"\n    }\n}, AST_Constant);\n\nvar AST_RegExp = DEFNODE(\"RegExp\", \"value\", {\n    $documentation: \"A regexp literal\",\n    $propdoc: {\n        value: \"[RegExp] the actual regexp\"\n    }\n}, AST_Constant);\n\nvar AST_Atom = DEFNODE(\"Atom\", null, {\n    $documentation: \"Base class for atoms\",\n}, AST_Constant);\n\nvar AST_Null = DEFNODE(\"Null\", null, {\n    $documentation: \"The `null` atom\",\n    value: null\n}, AST_Atom);\n\nvar AST_NaN = DEFNODE(\"NaN\", null, {\n    $documentation: \"The impossible value\",\n    value: 0/0\n}, AST_Atom);\n\nvar AST_Undefined = DEFNODE(\"Undefined\", null, {\n    $documentation: \"The `undefined` value\",\n    value: (function(){}())\n}, AST_Atom);\n\nvar AST_Hole = DEFNODE(\"Hole\", null, {\n    $documentation: \"A hole in an array\",\n    value: (function(){}())\n}, AST_Atom);\n\nvar AST_Infinity = DEFNODE(\"Infinity\", null, {\n    $documentation: \"The `Infinity` value\",\n    value: 1/0\n}, AST_Atom);\n\nvar AST_Boolean = DEFNODE(\"Boolean\", null, {\n    $documentation: \"Base class for booleans\",\n}, AST_Atom);\n\nvar AST_False = DEFNODE(\"False\", null, {\n    $documentation: \"The `false` atom\",\n    value: false\n}, AST_Boolean);\n\nvar AST_True = DEFNODE(\"True\", null, {\n    $documentation: \"The `true` atom\",\n    value: true\n}, AST_Boolean);\n\n/* -----[ TreeWalker ]----- */\n\nfunction TreeWalker(callback) {\n    this.visit = callback;\n    this.stack = [];\n};\nTreeWalker.prototype = {\n    _visit: function(node, descend) {\n        this.stack.push(node);\n        var ret = this.visit(node, descend ? function(){\n            descend.call(node);\n        } : noop);\n        if (!ret && descend) {\n            descend.call(node);\n        }\n        this.stack.pop();\n        return ret;\n    },\n    parent: function(n) {\n        return this.stack[this.stack.length - 2 - (n || 0)];\n    },\n    push: function (node) {\n        this.stack.push(node);\n    },\n    pop: function() {\n        return this.stack.pop();\n    },\n    self: function() {\n        return this.stack[this.stack.length - 1];\n    },\n    find_parent: function(type) {\n        var stack = this.stack;\n        for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof type) return x;\n        }\n    },\n    has_directive: function(type) {\n        return this.find_parent(AST_Scope).has_directive(type);\n    },\n    in_boolean_context: function() {\n        var stack = this.stack;\n        var i = stack.length, self = stack[--i];\n        while (i > 0) {\n            var p = stack[--i];\n            if ((p instanceof AST_If           && p.condition === self) ||\n                (p instanceof AST_Conditional  && p.condition === self) ||\n                (p instanceof AST_DWLoop       && p.condition === self) ||\n                (p instanceof AST_For          && p.condition === self) ||\n                (p instanceof AST_UnaryPrefix  && p.operator == \"!\" && p.expression === self))\n            {\n                return true;\n            }\n            if (!(p instanceof AST_Binary && (p.operator == \"&&\" || p.operator == \"||\")))\n                return false;\n            self = p;\n        }\n    },\n    loopcontrol_target: function(label) {\n        var stack = this.stack;\n        if (label) for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_LabeledStatement && x.label.name == label.name) {\n                return x.body;\n            }\n        } else for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_Switch || x instanceof AST_IterationStatement)\n                return x;\n        }\n    }\n};\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n    Parser based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nvar KEYWORDS = 'break case catch const continue debugger default delete do else finally for function if in instanceof new return switch throw try typeof var void while with';\nvar KEYWORDS_ATOM = 'false null true';\nvar RESERVED_WORDS = 'abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized this throws transient volatile yield'\n    + \" \" + KEYWORDS_ATOM + \" \" + KEYWORDS;\nvar KEYWORDS_BEFORE_EXPRESSION = 'return new delete throw else case';\n\nKEYWORDS = makePredicate(KEYWORDS);\nRESERVED_WORDS = makePredicate(RESERVED_WORDS);\nKEYWORDS_BEFORE_EXPRESSION = makePredicate(KEYWORDS_BEFORE_EXPRESSION);\nKEYWORDS_ATOM = makePredicate(KEYWORDS_ATOM);\n\nvar OPERATOR_CHARS = makePredicate(characters(\"+-*&%=<>!?|~^\"));\n\nvar RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;\nvar RE_OCT_NUMBER = /^0[0-7]+$/;\nvar RE_DEC_NUMBER = /^\\d*\\.?\\d*(?:e[+-]?\\d*(?:\\d\\.?|\\.?\\d)\\d*)?$/i;\n\nvar OPERATORS = makePredicate([\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"new\",\n    \"void\",\n    \"delete\",\n    \"++\",\n    \"--\",\n    \"+\",\n    \"-\",\n    \"!\",\n    \"~\",\n    \"&\",\n    \"|\",\n    \"^\",\n    \"*\",\n    \"/\",\n    \"%\",\n    \">>\",\n    \"<<\",\n    \">>>\",\n    \"<\",\n    \">\",\n    \"<=\",\n    \">=\",\n    \"==\",\n    \"===\",\n    \"!=\",\n    \"!==\",\n    \"?\",\n    \"=\",\n    \"+=\",\n    \"-=\",\n    \"/=\",\n    \"*=\",\n    \"%=\",\n    \">>=\",\n    \"<<=\",\n    \">>>=\",\n    \"|=\",\n    \"^=\",\n    \"&=\",\n    \"&&\",\n    \"||\"\n]);\n\nvar WHITESPACE_CHARS = makePredicate(characters(\" \\u00a0\\n\\r\\t\\f\\u000b\\u200b\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\uFEFF\"));\n\nvar PUNC_BEFORE_EXPRESSION = makePredicate(characters(\"[{(,.;:\"));\n\nvar PUNC_CHARS = makePredicate(characters(\"[]{}(),;:\"));\n\nvar REGEXP_MODIFIERS = makePredicate(characters(\"gmsiy\"));\n\n/* -----[ Tokenizer ]----- */\n\n// regexps adapted from http://xregexp.com/plugins/#unicode\nvar UNICODE = {\n    letter: new RegExp(\"[\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0-\\\\u08B2\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]\"),\n    digit: new RegExp(\"[\\\\u0030-\\\\u0039\\\\u0660-\\\\u0669\\\\u06F0-\\\\u06F9\\\\u07C0-\\\\u07C9\\\\u0966-\\\\u096F\\\\u09E6-\\\\u09EF\\\\u0A66-\\\\u0A6F\\\\u0AE6-\\\\u0AEF\\\\u0B66-\\\\u0B6F\\\\u0BE6-\\\\u0BEF\\\\u0C66-\\\\u0C6F\\\\u0CE6-\\\\u0CEF\\\\u0D66-\\\\u0D6F\\\\u0DE6-\\\\u0DEF\\\\u0E50-\\\\u0E59\\\\u0ED0-\\\\u0ED9\\\\u0F20-\\\\u0F29\\\\u1040-\\\\u1049\\\\u1090-\\\\u1099\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194F\\\\u19D0-\\\\u19D9\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1B50-\\\\u1B59\\\\u1BB0-\\\\u1BB9\\\\u1C40-\\\\u1C49\\\\u1C50-\\\\u1C59\\\\uA620-\\\\uA629\\\\uA8D0-\\\\uA8D9\\\\uA900-\\\\uA909\\\\uA9D0-\\\\uA9D9\\\\uA9F0-\\\\uA9F9\\\\uAA50-\\\\uAA59\\\\uABF0-\\\\uABF9\\\\uFF10-\\\\uFF19]\"),\n    non_spacing_mark: new RegExp(\"[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0487\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065E\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0900-\\\\u0902\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0955\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0CBC\\\\u0CBF\\\\u0CC6\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EB9\\\\u0EBB\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F90-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1DC0-\\\\u1DE6\\\\u1DFD-\\\\u1DFF\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F\\\\uA67C\\\\uA67D\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8E0-\\\\uA8F1\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE26]\"),\n    space_combining_mark: new RegExp(\"[\\\\u0903\\\\u093E-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E\\\\u0982\\\\u0983\\\\u09BE-\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u09D7\\\\u0A03\\\\u0A3E-\\\\u0A40\\\\u0A83\\\\u0ABE-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0B02\\\\u0B03\\\\u0B3E\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0B57\\\\u0BBE\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0BD7\\\\u0C01-\\\\u0C03\\\\u0C41-\\\\u0C44\\\\u0C82\\\\u0C83\\\\u0CBE\\\\u0CC0-\\\\u0CC4\\\\u0CC7\\\\u0CC8\\\\u0CCA\\\\u0CCB\\\\u0CD5\\\\u0CD6\\\\u0D02\\\\u0D03\\\\u0D3E-\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D57\\\\u0D82\\\\u0D83\\\\u0DCF-\\\\u0DD1\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0F3E\\\\u0F3F\\\\u0F7F\\\\u102B\\\\u102C\\\\u1031\\\\u1038\\\\u103B\\\\u103C\\\\u1056\\\\u1057\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1083\\\\u1084\\\\u1087-\\\\u108C\\\\u108F\\\\u109A-\\\\u109C\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u19B0-\\\\u19C0\\\\u19C8\\\\u19C9\\\\u1A19-\\\\u1A1B\\\\u1A55\\\\u1A57\\\\u1A61\\\\u1A63\\\\u1A64\\\\u1A6D-\\\\u1A72\\\\u1B04\\\\u1B35\\\\u1B3B\\\\u1B3D-\\\\u1B41\\\\u1B43\\\\u1B44\\\\u1B82\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BAA\\\\u1C24-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1CE1\\\\u1CF2\\\\uA823\\\\uA824\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C3\\\\uA952\\\\uA953\\\\uA983\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BD-\\\\uA9C0\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA4D\\\\uAA7B\\\\uABE3\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9\\\\uABEA\\\\uABEC]\"),\n    connector_punctuation: new RegExp(\"[\\\\u005F\\\\u203F\\\\u2040\\\\u2054\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFF3F]\")\n};\n\nfunction is_letter(code) {\n    return (code >= 97 && code <= 122)\n        || (code >= 65 && code <= 90)\n        || (code >= 0xaa && UNICODE.letter.test(String.fromCharCode(code)));\n};\n\nfunction is_digit(code) {\n    return code >= 48 && code <= 57;\n};\n\nfunction is_alphanumeric_char(code) {\n    return is_digit(code) || is_letter(code);\n};\n\nfunction is_unicode_digit(code) {\n    return UNICODE.digit.test(String.fromCharCode(code));\n}\n\nfunction is_unicode_combining_mark(ch) {\n    return UNICODE.non_spacing_mark.test(ch) || UNICODE.space_combining_mark.test(ch);\n};\n\nfunction is_unicode_connector_punctuation(ch) {\n    return UNICODE.connector_punctuation.test(ch);\n};\n\nfunction is_identifier(name) {\n    return !RESERVED_WORDS(name) && /^[a-z_$][a-z0-9_$]*$/i.test(name);\n};\n\nfunction is_identifier_start(code) {\n    return code == 36 || code == 95 || is_letter(code);\n};\n\nfunction is_identifier_char(ch) {\n    var code = ch.charCodeAt(0);\n    return is_identifier_start(code)\n        || is_digit(code)\n        || code == 8204 // \\u200c: zero-width non-joiner <ZWNJ>\n        || code == 8205 // \\u200d: zero-width joiner <ZWJ> (in my ECMA-262 PDF, this is also 200c)\n        || is_unicode_combining_mark(ch)\n        || is_unicode_connector_punctuation(ch)\n        || is_unicode_digit(code)\n    ;\n};\n\nfunction is_identifier_string(str){\n    return /^[a-z_$][a-z0-9_$]*$/i.test(str);\n};\n\nfunction parse_js_number(num) {\n    if (RE_HEX_NUMBER.test(num)) {\n        return parseInt(num.substr(2), 16);\n    } else if (RE_OCT_NUMBER.test(num)) {\n        return parseInt(num.substr(1), 8);\n    } else if (RE_DEC_NUMBER.test(num)) {\n        return parseFloat(num);\n    }\n};\n\nfunction JS_Parse_Error(message, filename, line, col, pos) {\n    this.message = message;\n    this.filename = filename;\n    this.line = line;\n    this.col = col;\n    this.pos = pos;\n    this.stack = new Error().stack;\n};\n\nJS_Parse_Error.prototype.toString = function() {\n    return this.message + \" (line: \" + this.line + \", col: \" + this.col + \", pos: \" + this.pos + \")\" + \"\\n\\n\" + this.stack;\n};\n\nfunction js_error(message, filename, line, col, pos) {\n    throw new JS_Parse_Error(message, filename, line, col, pos);\n};\n\nfunction is_token(token, type, val) {\n    return token.type == type && (val == null || token.value == val);\n};\n\nvar EX_EOF = {};\n\nfunction tokenizer($TEXT, filename, html5_comments) {\n\n    var S = {\n        text            : $TEXT,\n        filename        : filename,\n        pos             : 0,\n        tokpos          : 0,\n        line            : 1,\n        tokline         : 0,\n        col             : 0,\n        tokcol          : 0,\n        newline_before  : false,\n        regex_allowed   : false,\n        comments_before : []\n    };\n\n    function peek() { return S.text.charAt(S.pos); };\n\n    function next(signal_eof, in_string) {\n        var ch = S.text.charAt(S.pos++);\n        if (signal_eof && !ch)\n            throw EX_EOF;\n        if (\"\\r\\n\\u2028\\u2029\".indexOf(ch) >= 0) {\n            S.newline_before = S.newline_before || !in_string;\n            ++S.line;\n            S.col = 0;\n            if (!in_string && ch == \"\\r\" && peek() == \"\\n\") {\n                // treat a \\r\\n sequence as a single \\n\n                ++S.pos;\n                ch = \"\\n\";\n            }\n        } else {\n            ++S.col;\n        }\n        return ch;\n    };\n\n    function forward(i) {\n        while (i-- > 0) next();\n    };\n\n    function looking_at(str) {\n        return S.text.substr(S.pos, str.length) == str;\n    };\n\n    function find(what, signal_eof) {\n        var pos = S.text.indexOf(what, S.pos);\n        if (signal_eof && pos == -1) throw EX_EOF;\n        return pos;\n    };\n\n    function start_token() {\n        S.tokline = S.line;\n        S.tokcol = S.col;\n        S.tokpos = S.pos;\n    };\n\n    var prev_was_dot = false;\n    function token(type, value, is_comment) {\n        S.regex_allowed = ((type == \"operator\" && !UNARY_POSTFIX(value)) ||\n                           (type == \"keyword\" && KEYWORDS_BEFORE_EXPRESSION(value)) ||\n                           (type == \"punc\" && PUNC_BEFORE_EXPRESSION(value)));\n        prev_was_dot = (type == \"punc\" && value == \".\");\n        var ret = {\n            type    : type,\n            value   : value,\n            line    : S.tokline,\n            col     : S.tokcol,\n            pos     : S.tokpos,\n            endline : S.line,\n            endcol  : S.col,\n            endpos  : S.pos,\n            nlb     : S.newline_before,\n            file    : filename\n        };\n        if (!is_comment) {\n            ret.comments_before = S.comments_before;\n            S.comments_before = [];\n            // make note of any newlines in the comments that came before\n            for (var i = 0, len = ret.comments_before.length; i < len; i++) {\n                ret.nlb = ret.nlb || ret.comments_before[i].nlb;\n            }\n        }\n        S.newline_before = false;\n        return new AST_Token(ret);\n    };\n\n    function skip_whitespace() {\n        var ch;\n        while (WHITESPACE_CHARS(ch = peek()) || ch == \"\\u2028\" || ch == \"\\u2029\")\n            next();\n    };\n\n    function read_while(pred) {\n        var ret = \"\", ch, i = 0;\n        while ((ch = peek()) && pred(ch, i++))\n            ret += next();\n        return ret;\n    };\n\n    function parse_error(err) {\n        js_error(err, filename, S.tokline, S.tokcol, S.tokpos);\n    };\n\n    function read_num(prefix) {\n        var has_e = false, after_e = false, has_x = false, has_dot = prefix == \".\";\n        var num = read_while(function(ch, i){\n            var code = ch.charCodeAt(0);\n            switch (code) {\n              case 120: case 88: // xX\n                return has_x ? false : (has_x = true);\n              case 101: case 69: // eE\n                return has_x ? true : has_e ? false : (has_e = after_e = true);\n              case 45: // -\n                return after_e || (i == 0 && !prefix);\n              case 43: // +\n                return after_e;\n              case (after_e = false, 46): // .\n                return (!has_dot && !has_x && !has_e) ? (has_dot = true) : false;\n            }\n            return is_alphanumeric_char(code);\n        });\n        if (prefix) num = prefix + num;\n        var valid = parse_js_number(num);\n        if (!isNaN(valid)) {\n            return token(\"num\", valid);\n        } else {\n            parse_error(\"Invalid syntax: \" + num);\n        }\n    };\n\n    function read_escaped_char(in_string) {\n        var ch = next(true, in_string);\n        switch (ch.charCodeAt(0)) {\n          case 110 : return \"\\n\";\n          case 114 : return \"\\r\";\n          case 116 : return \"\\t\";\n          case 98  : return \"\\b\";\n          case 118 : return \"\\u000b\"; // \\v\n          case 102 : return \"\\f\";\n          case 48  : return \"\\0\";\n          case 120 : return String.fromCharCode(hex_bytes(2)); // \\x\n          case 117 : return String.fromCharCode(hex_bytes(4)); // \\u\n          case 10  : return \"\"; // newline\n          case 13  :            // \\r\n            if (peek() == \"\\n\") { // DOS newline\n                next(true, in_string);\n                return \"\";\n            }\n        }\n        return ch;\n    };\n\n    function hex_bytes(n) {\n        var num = 0;\n        for (; n > 0; --n) {\n            var digit = parseInt(next(true), 16);\n            if (isNaN(digit))\n                parse_error(\"Invalid hex-character pattern in string\");\n            num = (num << 4) | digit;\n        }\n        return num;\n    };\n\n    var read_string = with_eof_error(\"Unterminated string constant\", function(quote_char){\n        var quote = next(), ret = \"\";\n        for (;;) {\n            var ch = next(true, true);\n            if (ch == \"\\\\\") {\n                // read OctalEscapeSequence (XXX: deprecated if \"strict mode\")\n                // https://github.com/mishoo/UglifyJS/issues/178\n                var octal_len = 0, first = null;\n                ch = read_while(function(ch){\n                    if (ch >= \"0\" && ch <= \"7\") {\n                        if (!first) {\n                            first = ch;\n                            return ++octal_len;\n                        }\n                        else if (first <= \"3\" && octal_len <= 2) return ++octal_len;\n                        else if (first >= \"4\" && octal_len <= 1) return ++octal_len;\n                    }\n                    return false;\n                });\n                if (octal_len > 0) ch = String.fromCharCode(parseInt(ch, 8));\n                else ch = read_escaped_char(true);\n            }\n            else if (ch == quote) break;\n            ret += ch;\n        }\n        var tok = token(\"string\", ret);\n        tok.quote = quote_char;\n        return tok;\n    });\n\n    function skip_line_comment(type) {\n        var regex_allowed = S.regex_allowed;\n        var i = find(\"\\n\"), ret;\n        if (i == -1) {\n            ret = S.text.substr(S.pos);\n            S.pos = S.text.length;\n        } else {\n            ret = S.text.substring(S.pos, i);\n            S.pos = i;\n        }\n        S.col = S.tokcol + (S.pos - S.tokpos);\n        S.comments_before.push(token(type, ret, true));\n        S.regex_allowed = regex_allowed;\n        return next_token();\n    };\n\n    var skip_multiline_comment = with_eof_error(\"Unterminated multiline comment\", function(){\n        var regex_allowed = S.regex_allowed;\n        var i = find(\"*/\", true);\n        var text = S.text.substring(S.pos, i);\n        var a = text.split(\"\\n\"), n = a.length;\n        // update stream position\n        S.pos = i + 2;\n        S.line += n - 1;\n        if (n > 1) S.col = a[n - 1].length;\n        else S.col += a[n - 1].length;\n        S.col += 2;\n        var nlb = S.newline_before = S.newline_before || text.indexOf(\"\\n\") >= 0;\n        S.comments_before.push(token(\"comment2\", text, true));\n        S.regex_allowed = regex_allowed;\n        S.newline_before = nlb;\n        return next_token();\n    });\n\n    function read_name() {\n        var backslash = false, name = \"\", ch, escaped = false, hex;\n        while ((ch = peek()) != null) {\n            if (!backslash) {\n                if (ch == \"\\\\\") escaped = backslash = true, next();\n                else if (is_identifier_char(ch)) name += next();\n                else break;\n            }\n            else {\n                if (ch != \"u\") parse_error(\"Expecting UnicodeEscapeSequence -- uXXXX\");\n                ch = read_escaped_char();\n                if (!is_identifier_char(ch)) parse_error(\"Unicode char: \" + ch.charCodeAt(0) + \" is not valid in identifier\");\n                name += ch;\n                backslash = false;\n            }\n        }\n        if (KEYWORDS(name) && escaped) {\n            hex = name.charCodeAt(0).toString(16).toUpperCase();\n            name = \"\\\\u\" + \"0000\".substr(hex.length) + hex + name.slice(1);\n        }\n        return name;\n    };\n\n    var read_regexp = with_eof_error(\"Unterminated regular expression\", function(regexp){\n        var prev_backslash = false, ch, in_class = false;\n        while ((ch = next(true))) if (prev_backslash) {\n            regexp += \"\\\\\" + ch;\n            prev_backslash = false;\n        } else if (ch == \"[\") {\n            in_class = true;\n            regexp += ch;\n        } else if (ch == \"]\" && in_class) {\n            in_class = false;\n            regexp += ch;\n        } else if (ch == \"/\" && !in_class) {\n            break;\n        } else if (ch == \"\\\\\") {\n            prev_backslash = true;\n        } else {\n            regexp += ch;\n        }\n        var mods = read_name();\n        return token(\"regexp\", new RegExp(regexp, mods));\n    });\n\n    function read_operator(prefix) {\n        function grow(op) {\n            if (!peek()) return op;\n            var bigger = op + peek();\n            if (OPERATORS(bigger)) {\n                next();\n                return grow(bigger);\n            } else {\n                return op;\n            }\n        };\n        return token(\"operator\", grow(prefix || next()));\n    };\n\n    function handle_slash() {\n        next();\n        switch (peek()) {\n          case \"/\":\n            next();\n            return skip_line_comment(\"comment1\");\n          case \"*\":\n            next();\n            return skip_multiline_comment();\n        }\n        return S.regex_allowed ? read_regexp(\"\") : read_operator(\"/\");\n    };\n\n    function handle_dot() {\n        next();\n        return is_digit(peek().charCodeAt(0))\n            ? read_num(\".\")\n            : token(\"punc\", \".\");\n    };\n\n    function read_word() {\n        var word = read_name();\n        if (prev_was_dot) return token(\"name\", word);\n        return KEYWORDS_ATOM(word) ? token(\"atom\", word)\n            : !KEYWORDS(word) ? token(\"name\", word)\n            : OPERATORS(word) ? token(\"operator\", word)\n            : token(\"keyword\", word);\n    };\n\n    function with_eof_error(eof_error, cont) {\n        return function(x) {\n            try {\n                return cont(x);\n            } catch(ex) {\n                if (ex === EX_EOF) parse_error(eof_error);\n                else throw ex;\n            }\n        };\n    };\n\n    function next_token(force_regexp) {\n        if (force_regexp != null)\n            return read_regexp(force_regexp);\n        skip_whitespace();\n        start_token();\n        if (html5_comments) {\n            if (looking_at(\"<!--\")) {\n                forward(4);\n                return skip_line_comment(\"comment3\");\n            }\n            if (looking_at(\"-->\") && S.newline_before) {\n                forward(3);\n                return skip_line_comment(\"comment4\");\n            }\n        }\n        var ch = peek();\n        if (!ch) return token(\"eof\");\n        var code = ch.charCodeAt(0);\n        switch (code) {\n          case 34: case 39: return read_string(ch);\n          case 46: return handle_dot();\n          case 47: return handle_slash();\n        }\n        if (is_digit(code)) return read_num();\n        if (PUNC_CHARS(ch)) return token(\"punc\", next());\n        if (OPERATOR_CHARS(ch)) return read_operator();\n        if (code == 92 || is_identifier_start(code)) return read_word();\n        parse_error(\"Unexpected character '\" + ch + \"'\");\n    };\n\n    next_token.context = function(nc) {\n        if (nc) S = nc;\n        return S;\n    };\n\n    return next_token;\n\n};\n\n/* -----[ Parser (constants) ]----- */\n\nvar UNARY_PREFIX = makePredicate([\n    \"typeof\",\n    \"void\",\n    \"delete\",\n    \"--\",\n    \"++\",\n    \"!\",\n    \"~\",\n    \"-\",\n    \"+\"\n]);\n\nvar UNARY_POSTFIX = makePredicate([ \"--\", \"++\" ]);\n\nvar ASSIGNMENT = makePredicate([ \"=\", \"+=\", \"-=\", \"/=\", \"*=\", \"%=\", \">>=\", \"<<=\", \">>>=\", \"|=\", \"^=\", \"&=\" ]);\n\nvar PRECEDENCE = (function(a, ret){\n    for (var i = 0; i < a.length; ++i) {\n        var b = a[i];\n        for (var j = 0; j < b.length; ++j) {\n            ret[b[j]] = i + 1;\n        }\n    }\n    return ret;\n})(\n    [\n        [\"||\"],\n        [\"&&\"],\n        [\"|\"],\n        [\"^\"],\n        [\"&\"],\n        [\"==\", \"===\", \"!=\", \"!==\"],\n        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n        [\">>\", \"<<\", \">>>\"],\n        [\"+\", \"-\"],\n        [\"*\", \"/\", \"%\"]\n    ],\n    {}\n);\n\nvar STATEMENTS_WITH_LABELS = array_to_hash([ \"for\", \"do\", \"while\", \"switch\" ]);\n\nvar ATOMIC_START_TOKEN = array_to_hash([ \"atom\", \"num\", \"string\", \"regexp\", \"name\" ]);\n\n/* -----[ Parser ]----- */\n\nfunction parse($TEXT, options) {\n\n    options = defaults(options, {\n        strict         : false,\n        filename       : null,\n        toplevel       : null,\n        expression     : false,\n        html5_comments : true,\n        bare_returns   : false,\n    });\n\n    var S = {\n        input         : (typeof $TEXT == \"string\"\n                         ? tokenizer($TEXT, options.filename,\n                                     options.html5_comments)\n                         : $TEXT),\n        token         : null,\n        prev          : null,\n        peeked        : null,\n        in_function   : 0,\n        in_directives : true,\n        in_loop       : 0,\n        labels        : []\n    };\n\n    S.token = next();\n\n    function is(type, value) {\n        return is_token(S.token, type, value);\n    };\n\n    function peek() { return S.peeked || (S.peeked = S.input()); };\n\n    function next() {\n        S.prev = S.token;\n        if (S.peeked) {\n            S.token = S.peeked;\n            S.peeked = null;\n        } else {\n            S.token = S.input();\n        }\n        S.in_directives = S.in_directives && (\n            S.token.type == \"string\" || is(\"punc\", \";\")\n        );\n        return S.token;\n    };\n\n    function prev() {\n        return S.prev;\n    };\n\n    function croak(msg, line, col, pos) {\n        var ctx = S.input.context();\n        js_error(msg,\n                 ctx.filename,\n                 line != null ? line : ctx.tokline,\n                 col != null ? col : ctx.tokcol,\n                 pos != null ? pos : ctx.tokpos);\n    };\n\n    function token_error(token, msg) {\n        croak(msg, token.line, token.col);\n    };\n\n    function unexpected(token) {\n        if (token == null)\n            token = S.token;\n        token_error(token, \"Unexpected token: \" + token.type + \" (\" + token.value + \")\");\n    };\n\n    function expect_token(type, val) {\n        if (is(type, val)) {\n            return next();\n        }\n        token_error(S.token, \"Unexpected token \" + S.token.type + \" «\" + S.token.value + \"»\" + \", expected \" + type + \" «\" + val + \"»\");\n    };\n\n    function expect(punc) { return expect_token(\"punc\", punc); };\n\n    function can_insert_semicolon() {\n        return !options.strict && (\n            S.token.nlb || is(\"eof\") || is(\"punc\", \"}\")\n        );\n    };\n\n    function semicolon() {\n        if (is(\"punc\", \";\")) next();\n        else if (!can_insert_semicolon()) unexpected();\n    };\n\n    function parenthesised() {\n        expect(\"(\");\n        var exp = expression(true);\n        expect(\")\");\n        return exp;\n    };\n\n    function embed_tokens(parser) {\n        return function() {\n            var start = S.token;\n            var expr = parser();\n            var end = prev();\n            expr.start = start;\n            expr.end = end;\n            return expr;\n        };\n    };\n\n    function handle_regexp() {\n        if (is(\"operator\", \"/\") || is(\"operator\", \"/=\")) {\n            S.peeked = null;\n            S.token = S.input(S.token.value.substr(1)); // force regexp\n        }\n    };\n\n    var statement = embed_tokens(function() {\n        var tmp;\n        handle_regexp();\n        switch (S.token.type) {\n          case \"string\":\n            var dir = S.in_directives, stat = simple_statement();\n            // XXXv2: decide how to fix directives\n            if (dir && stat.body instanceof AST_String && !is(\"punc\", \",\")) {\n                return new AST_Directive({\n                    start : stat.body.start,\n                    end   : stat.body.end,\n                    quote : stat.body.quote,\n                    value : stat.body.value,\n                });\n            }\n            return stat;\n          case \"num\":\n          case \"regexp\":\n          case \"operator\":\n          case \"atom\":\n            return simple_statement();\n\n          case \"name\":\n            return is_token(peek(), \"punc\", \":\")\n                ? labeled_statement()\n                : simple_statement();\n\n          case \"punc\":\n            switch (S.token.value) {\n              case \"{\":\n                return new AST_BlockStatement({\n                    start : S.token,\n                    body  : block_(),\n                    end   : prev()\n                });\n              case \"[\":\n              case \"(\":\n                return simple_statement();\n              case \";\":\n                next();\n                return new AST_EmptyStatement();\n              default:\n                unexpected();\n            }\n\n          case \"keyword\":\n            switch (tmp = S.token.value, next(), tmp) {\n              case \"break\":\n                return break_cont(AST_Break);\n\n              case \"continue\":\n                return break_cont(AST_Continue);\n\n              case \"debugger\":\n                semicolon();\n                return new AST_Debugger();\n\n              case \"do\":\n                return new AST_Do({\n                    body      : in_loop(statement),\n                    condition : (expect_token(\"keyword\", \"while\"), tmp = parenthesised(), semicolon(), tmp)\n                });\n\n              case \"while\":\n                return new AST_While({\n                    condition : parenthesised(),\n                    body      : in_loop(statement)\n                });\n\n              case \"for\":\n                return for_();\n\n              case \"function\":\n                return function_(AST_Defun);\n\n              case \"if\":\n                return if_();\n\n              case \"return\":\n                if (S.in_function == 0 && !options.bare_returns)\n                    croak(\"'return' outside of function\");\n                return new AST_Return({\n                    value: ( is(\"punc\", \";\")\n                             ? (next(), null)\n                             : can_insert_semicolon()\n                             ? null\n                             : (tmp = expression(true), semicolon(), tmp) )\n                });\n\n              case \"switch\":\n                return new AST_Switch({\n                    expression : parenthesised(),\n                    body       : in_loop(switch_body_)\n                });\n\n              case \"throw\":\n                if (S.token.nlb)\n                    croak(\"Illegal newline after 'throw'\");\n                return new AST_Throw({\n                    value: (tmp = expression(true), semicolon(), tmp)\n                });\n\n              case \"try\":\n                return try_();\n\n              case \"var\":\n                return tmp = var_(), semicolon(), tmp;\n\n              case \"const\":\n                return tmp = const_(), semicolon(), tmp;\n\n              case \"with\":\n                return new AST_With({\n                    expression : parenthesised(),\n                    body       : statement()\n                });\n\n              default:\n                unexpected();\n            }\n        }\n    });\n\n    function labeled_statement() {\n        var label = as_symbol(AST_Label);\n        if (find_if(function(l){ return l.name == label.name }, S.labels)) {\n            // ECMA-262, 12.12: An ECMAScript program is considered\n            // syntactically incorrect if it contains a\n            // LabelledStatement that is enclosed by a\n            // LabelledStatement with the same Identifier as label.\n            croak(\"Label \" + label.name + \" defined twice\");\n        }\n        expect(\":\");\n        S.labels.push(label);\n        var stat = statement();\n        S.labels.pop();\n        if (!(stat instanceof AST_IterationStatement)) {\n            // check for `continue` that refers to this label.\n            // those should be reported as syntax errors.\n            // https://github.com/mishoo/UglifyJS2/issues/287\n            label.references.forEach(function(ref){\n                if (ref instanceof AST_Continue) {\n                    ref = ref.label.start;\n                    croak(\"Continue label `\" + label.name + \"` refers to non-IterationStatement.\",\n                          ref.line, ref.col, ref.pos);\n                }\n            });\n        }\n        return new AST_LabeledStatement({ body: stat, label: label });\n    };\n\n    function simple_statement(tmp) {\n        return new AST_SimpleStatement({ body: (tmp = expression(true), semicolon(), tmp) });\n    };\n\n    function break_cont(type) {\n        var label = null, ldef;\n        if (!can_insert_semicolon()) {\n            label = as_symbol(AST_LabelRef, true);\n        }\n        if (label != null) {\n            ldef = find_if(function(l){ return l.name == label.name }, S.labels);\n            if (!ldef)\n                croak(\"Undefined label \" + label.name);\n            label.thedef = ldef;\n        }\n        else if (S.in_loop == 0)\n            croak(type.TYPE + \" not inside a loop or switch\");\n        semicolon();\n        var stat = new type({ label: label });\n        if (ldef) ldef.references.push(stat);\n        return stat;\n    };\n\n    function for_() {\n        expect(\"(\");\n        var init = null;\n        if (!is(\"punc\", \";\")) {\n            init = is(\"keyword\", \"var\")\n                ? (next(), var_(true))\n                : expression(true, true);\n            if (is(\"operator\", \"in\")) {\n                if (init instanceof AST_Var && init.definitions.length > 1)\n                    croak(\"Only one variable declaration allowed in for..in loop\");\n                next();\n                return for_in(init);\n            }\n        }\n        return regular_for(init);\n    };\n\n    function regular_for(init) {\n        expect(\";\");\n        var test = is(\"punc\", \";\") ? null : expression(true);\n        expect(\";\");\n        var step = is(\"punc\", \")\") ? null : expression(true);\n        expect(\")\");\n        return new AST_For({\n            init      : init,\n            condition : test,\n            step      : step,\n            body      : in_loop(statement)\n        });\n    };\n\n    function for_in(init) {\n        var lhs = init instanceof AST_Var ? init.definitions[0].name : null;\n        var obj = expression(true);\n        expect(\")\");\n        return new AST_ForIn({\n            init   : init,\n            name   : lhs,\n            object : obj,\n            body   : in_loop(statement)\n        });\n    };\n\n    var function_ = function(ctor) {\n        var in_statement = ctor === AST_Defun;\n        var name = is(\"name\") ? as_symbol(in_statement ? AST_SymbolDefun : AST_SymbolLambda) : null;\n        if (in_statement && !name)\n            unexpected();\n        expect(\"(\");\n        return new ctor({\n            name: name,\n            argnames: (function(first, a){\n                while (!is(\"punc\", \")\")) {\n                    if (first) first = false; else expect(\",\");\n                    a.push(as_symbol(AST_SymbolFunarg));\n                }\n                next();\n                return a;\n            })(true, []),\n            body: (function(loop, labels){\n                ++S.in_function;\n                S.in_directives = true;\n                S.in_loop = 0;\n                S.labels = [];\n                var a = block_();\n                --S.in_function;\n                S.in_loop = loop;\n                S.labels = labels;\n                return a;\n            })(S.in_loop, S.labels)\n        });\n    };\n\n    function if_() {\n        var cond = parenthesised(), body = statement(), belse = null;\n        if (is(\"keyword\", \"else\")) {\n            next();\n            belse = statement();\n        }\n        return new AST_If({\n            condition   : cond,\n            body        : body,\n            alternative : belse\n        });\n    };\n\n    function block_() {\n        expect(\"{\");\n        var a = [];\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            a.push(statement());\n        }\n        next();\n        return a;\n    };\n\n    function switch_body_() {\n        expect(\"{\");\n        var a = [], cur = null, branch = null, tmp;\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            if (is(\"keyword\", \"case\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Case({\n                    start      : (tmp = S.token, next(), tmp),\n                    expression : expression(true),\n                    body       : cur\n                });\n                a.push(branch);\n                expect(\":\");\n            }\n            else if (is(\"keyword\", \"default\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Default({\n                    start : (tmp = S.token, next(), expect(\":\"), tmp),\n                    body  : cur\n                });\n                a.push(branch);\n            }\n            else {\n                if (!cur) unexpected();\n                cur.push(statement());\n            }\n        }\n        if (branch) branch.end = prev();\n        next();\n        return a;\n    };\n\n    function try_() {\n        var body = block_(), bcatch = null, bfinally = null;\n        if (is(\"keyword\", \"catch\")) {\n            var start = S.token;\n            next();\n            expect(\"(\");\n            var name = as_symbol(AST_SymbolCatch);\n            expect(\")\");\n            bcatch = new AST_Catch({\n                start   : start,\n                argname : name,\n                body    : block_(),\n                end     : prev()\n            });\n        }\n        if (is(\"keyword\", \"finally\")) {\n            var start = S.token;\n            next();\n            bfinally = new AST_Finally({\n                start : start,\n                body  : block_(),\n                end   : prev()\n            });\n        }\n        if (!bcatch && !bfinally)\n            croak(\"Missing catch/finally blocks\");\n        return new AST_Try({\n            body     : body,\n            bcatch   : bcatch,\n            bfinally : bfinally\n        });\n    };\n\n    function vardefs(no_in, in_const) {\n        var a = [];\n        for (;;) {\n            a.push(new AST_VarDef({\n                start : S.token,\n                name  : as_symbol(in_const ? AST_SymbolConst : AST_SymbolVar),\n                value : is(\"operator\", \"=\") ? (next(), expression(false, no_in)) : null,\n                end   : prev()\n            }));\n            if (!is(\"punc\", \",\"))\n                break;\n            next();\n        }\n        return a;\n    };\n\n    var var_ = function(no_in) {\n        return new AST_Var({\n            start       : prev(),\n            definitions : vardefs(no_in, false),\n            end         : prev()\n        });\n    };\n\n    var const_ = function() {\n        return new AST_Const({\n            start       : prev(),\n            definitions : vardefs(false, true),\n            end         : prev()\n        });\n    };\n\n    var new_ = function() {\n        var start = S.token;\n        expect_token(\"operator\", \"new\");\n        var newexp = expr_atom(false), args;\n        if (is(\"punc\", \"(\")) {\n            next();\n            args = expr_list(\")\");\n        } else {\n            args = [];\n        }\n        return subscripts(new AST_New({\n            start      : start,\n            expression : newexp,\n            args       : args,\n            end        : prev()\n        }), true);\n    };\n\n    function as_atom_node() {\n        var tok = S.token, ret;\n        switch (tok.type) {\n          case \"name\":\n          case \"keyword\":\n            ret = _make_symbol(AST_SymbolRef);\n            break;\n          case \"num\":\n            ret = new AST_Number({ start: tok, end: tok, value: tok.value });\n            break;\n          case \"string\":\n            ret = new AST_String({\n                start : tok,\n                end   : tok,\n                value : tok.value,\n                quote : tok.quote\n            });\n            break;\n          case \"regexp\":\n            ret = new AST_RegExp({ start: tok, end: tok, value: tok.value });\n            break;\n          case \"atom\":\n            switch (tok.value) {\n              case \"false\":\n                ret = new AST_False({ start: tok, end: tok });\n                break;\n              case \"true\":\n                ret = new AST_True({ start: tok, end: tok });\n                break;\n              case \"null\":\n                ret = new AST_Null({ start: tok, end: tok });\n                break;\n            }\n            break;\n        }\n        next();\n        return ret;\n    };\n\n    var expr_atom = function(allow_calls) {\n        if (is(\"operator\", \"new\")) {\n            return new_();\n        }\n        var start = S.token;\n        if (is(\"punc\")) {\n            switch (start.value) {\n              case \"(\":\n                next();\n                var ex = expression(true);\n                ex.start = start;\n                ex.end = S.token;\n                expect(\")\");\n                return subscripts(ex, allow_calls);\n              case \"[\":\n                return subscripts(array_(), allow_calls);\n              case \"{\":\n                return subscripts(object_(), allow_calls);\n            }\n            unexpected();\n        }\n        if (is(\"keyword\", \"function\")) {\n            next();\n            var func = function_(AST_Function);\n            func.start = start;\n            func.end = prev();\n            return subscripts(func, allow_calls);\n        }\n        if (ATOMIC_START_TOKEN[S.token.type]) {\n            return subscripts(as_atom_node(), allow_calls);\n        }\n        unexpected();\n    };\n\n    function expr_list(closing, allow_trailing_comma, allow_empty) {\n        var first = true, a = [];\n        while (!is(\"punc\", closing)) {\n            if (first) first = false; else expect(\",\");\n            if (allow_trailing_comma && is(\"punc\", closing)) break;\n            if (is(\"punc\", \",\") && allow_empty) {\n                a.push(new AST_Hole({ start: S.token, end: S.token }));\n            } else {\n                a.push(expression(false));\n            }\n        }\n        next();\n        return a;\n    };\n\n    var array_ = embed_tokens(function() {\n        expect(\"[\");\n        return new AST_Array({\n            elements: expr_list(\"]\", !options.strict, true)\n        });\n    });\n\n    var object_ = embed_tokens(function() {\n        expect(\"{\");\n        var first = true, a = [];\n        while (!is(\"punc\", \"}\")) {\n            if (first) first = false; else expect(\",\");\n            if (!options.strict && is(\"punc\", \"}\"))\n                // allow trailing comma\n                break;\n            var start = S.token;\n            var type = start.type;\n            var name = as_property_name();\n            if (type == \"name\" && !is(\"punc\", \":\")) {\n                if (name == \"get\") {\n                    a.push(new AST_ObjectGetter({\n                        start : start,\n                        key   : as_atom_node(),\n                        value : function_(AST_Accessor),\n                        end   : prev()\n                    }));\n                    continue;\n                }\n                if (name == \"set\") {\n                    a.push(new AST_ObjectSetter({\n                        start : start,\n                        key   : as_atom_node(),\n                        value : function_(AST_Accessor),\n                        end   : prev()\n                    }));\n                    continue;\n                }\n            }\n            expect(\":\");\n            a.push(new AST_ObjectKeyVal({\n                start : start,\n                quote : start.quote,\n                key   : name,\n                value : expression(false),\n                end   : prev()\n            }));\n        }\n        next();\n        return new AST_Object({ properties: a });\n    });\n\n    function as_property_name() {\n        var tmp = S.token;\n        next();\n        switch (tmp.type) {\n          case \"num\":\n          case \"string\":\n          case \"name\":\n          case \"operator\":\n          case \"keyword\":\n          case \"atom\":\n            return tmp.value;\n          default:\n            unexpected();\n        }\n    };\n\n    function as_name() {\n        var tmp = S.token;\n        next();\n        switch (tmp.type) {\n          case \"name\":\n          case \"operator\":\n          case \"keyword\":\n          case \"atom\":\n            return tmp.value;\n          default:\n            unexpected();\n        }\n    };\n\n    function _make_symbol(type) {\n        var name = S.token.value;\n        return new (name == \"this\" ? AST_This : type)({\n            name  : String(name),\n            start : S.token,\n            end   : S.token\n        });\n    };\n\n    function as_symbol(type, noerror) {\n        if (!is(\"name\")) {\n            if (!noerror) croak(\"Name expected\");\n            return null;\n        }\n        var sym = _make_symbol(type);\n        next();\n        return sym;\n    };\n\n    var subscripts = function(expr, allow_calls) {\n        var start = expr.start;\n        if (is(\"punc\", \".\")) {\n            next();\n            return subscripts(new AST_Dot({\n                start      : start,\n                expression : expr,\n                property   : as_name(),\n                end        : prev()\n            }), allow_calls);\n        }\n        if (is(\"punc\", \"[\")) {\n            next();\n            var prop = expression(true);\n            expect(\"]\");\n            return subscripts(new AST_Sub({\n                start      : start,\n                expression : expr,\n                property   : prop,\n                end        : prev()\n            }), allow_calls);\n        }\n        if (allow_calls && is(\"punc\", \"(\")) {\n            next();\n            return subscripts(new AST_Call({\n                start      : start,\n                expression : expr,\n                args       : expr_list(\")\"),\n                end        : prev()\n            }), true);\n        }\n        return expr;\n    };\n\n    var maybe_unary = function(allow_calls) {\n        var start = S.token;\n        if (is(\"operator\") && UNARY_PREFIX(start.value)) {\n            next();\n            handle_regexp();\n            var ex = make_unary(AST_UnaryPrefix, start.value, maybe_unary(allow_calls));\n            ex.start = start;\n            ex.end = prev();\n            return ex;\n        }\n        var val = expr_atom(allow_calls);\n        while (is(\"operator\") && UNARY_POSTFIX(S.token.value) && !S.token.nlb) {\n            val = make_unary(AST_UnaryPostfix, S.token.value, val);\n            val.start = start;\n            val.end = S.token;\n            next();\n        }\n        return val;\n    };\n\n    function make_unary(ctor, op, expr) {\n        if ((op == \"++\" || op == \"--\") && !is_assignable(expr))\n            croak(\"Invalid use of \" + op + \" operator\");\n        return new ctor({ operator: op, expression: expr });\n    };\n\n    var expr_op = function(left, min_prec, no_in) {\n        var op = is(\"operator\") ? S.token.value : null;\n        if (op == \"in\" && no_in) op = null;\n        var prec = op != null ? PRECEDENCE[op] : null;\n        if (prec != null && prec > min_prec) {\n            next();\n            var right = expr_op(maybe_unary(true), prec, no_in);\n            return expr_op(new AST_Binary({\n                start    : left.start,\n                left     : left,\n                operator : op,\n                right    : right,\n                end      : right.end\n            }), min_prec, no_in);\n        }\n        return left;\n    };\n\n    function expr_ops(no_in) {\n        return expr_op(maybe_unary(true), 0, no_in);\n    };\n\n    var maybe_conditional = function(no_in) {\n        var start = S.token;\n        var expr = expr_ops(no_in);\n        if (is(\"operator\", \"?\")) {\n            next();\n            var yes = expression(false);\n            expect(\":\");\n            return new AST_Conditional({\n                start       : start,\n                condition   : expr,\n                consequent  : yes,\n                alternative : expression(false, no_in),\n                end         : prev()\n            });\n        }\n        return expr;\n    };\n\n    function is_assignable(expr) {\n        if (!options.strict) return true;\n        if (expr instanceof AST_This) return false;\n        return (expr instanceof AST_PropAccess || expr instanceof AST_Symbol);\n    };\n\n    var maybe_assign = function(no_in) {\n        var start = S.token;\n        var left = maybe_conditional(no_in), val = S.token.value;\n        if (is(\"operator\") && ASSIGNMENT(val)) {\n            if (is_assignable(left)) {\n                next();\n                return new AST_Assign({\n                    start    : start,\n                    left     : left,\n                    operator : val,\n                    right    : maybe_assign(no_in),\n                    end      : prev()\n                });\n            }\n            croak(\"Invalid assignment\");\n        }\n        return left;\n    };\n\n    var expression = function(commas, no_in) {\n        var start = S.token;\n        var expr = maybe_assign(no_in);\n        if (commas && is(\"punc\", \",\")) {\n            next();\n            return new AST_Seq({\n                start  : start,\n                car    : expr,\n                cdr    : expression(true, no_in),\n                end    : peek()\n            });\n        }\n        return expr;\n    };\n\n    function in_loop(cont) {\n        ++S.in_loop;\n        var ret = cont();\n        --S.in_loop;\n        return ret;\n    };\n\n    if (options.expression) {\n        return expression(true);\n    }\n\n    return (function(){\n        var start = S.token;\n        var body = [];\n        while (!is(\"eof\"))\n            body.push(statement());\n        var end = prev();\n        var toplevel = options.toplevel;\n        if (toplevel) {\n            toplevel.body = toplevel.body.concat(body);\n            toplevel.end = end;\n        } else {\n            toplevel = new AST_Toplevel({ start: start, body: body, end: end });\n        }\n        return toplevel;\n    })();\n\n};\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction array_to_hash(a) {\n    var ret = Object.create(null);\n    for (var i = 0; i < a.length; ++i)\n        ret[a[i]] = true;\n    return ret;\n};\n\nfunction slice(a, start) {\n    return Array.prototype.slice.call(a, start || 0);\n};\n\nfunction characters(str) {\n    return str.split(\"\");\n};\n\nfunction member(name, array) {\n    for (var i = array.length; --i >= 0;)\n        if (array[i] == name)\n            return true;\n    return false;\n};\n\nfunction find_if(func, array) {\n    for (var i = 0, n = array.length; i < n; ++i) {\n        if (func(array[i]))\n            return array[i];\n    }\n};\n\nfunction repeat_string(str, i) {\n    if (i <= 0) return \"\";\n    if (i == 1) return str;\n    var d = repeat_string(str, i >> 1);\n    d += d;\n    if (i & 1) d += str;\n    return d;\n};\n\nfunction DefaultsError(msg, defs) {\n    Error.call(this, msg);\n    this.msg = msg;\n    this.defs = defs;\n};\nDefaultsError.prototype = Object.create(Error.prototype);\nDefaultsError.prototype.constructor = DefaultsError;\n\nDefaultsError.croak = function(msg, defs) {\n    throw new DefaultsError(msg, defs);\n};\n\nfunction defaults(args, defs, croak) {\n    if (args === true)\n        args = {};\n    var ret = args || {};\n    if (croak) for (var i in ret) if (ret.hasOwnProperty(i) && !defs.hasOwnProperty(i))\n        DefaultsError.croak(\"`\" + i + \"` is not a supported option\", defs);\n    for (var i in defs) if (defs.hasOwnProperty(i)) {\n        ret[i] = (args && args.hasOwnProperty(i)) ? args[i] : defs[i];\n    }\n    return ret;\n};\n\nfunction merge(obj, ext) {\n    var count = 0;\n    for (var i in ext) if (ext.hasOwnProperty(i)) {\n        obj[i] = ext[i];\n        count++;\n    }\n    return count;\n};\n\nfunction noop() {};\n\nvar MAP = (function(){\n    function MAP(a, f, backwards) {\n        var ret = [], top = [], i;\n        function doit() {\n            var val = f(a[i], i);\n            var is_last = val instanceof Last;\n            if (is_last) val = val.v;\n            if (val instanceof AtTop) {\n                val = val.v;\n                if (val instanceof Splice) {\n                    top.push.apply(top, backwards ? val.v.slice().reverse() : val.v);\n                } else {\n                    top.push(val);\n                }\n            }\n            else if (val !== skip) {\n                if (val instanceof Splice) {\n                    ret.push.apply(ret, backwards ? val.v.slice().reverse() : val.v);\n                } else {\n                    ret.push(val);\n                }\n            }\n            return is_last;\n        };\n        if (a instanceof Array) {\n            if (backwards) {\n                for (i = a.length; --i >= 0;) if (doit()) break;\n                ret.reverse();\n                top.reverse();\n            } else {\n                for (i = 0; i < a.length; ++i) if (doit()) break;\n            }\n        }\n        else {\n            for (i in a) if (a.hasOwnProperty(i)) if (doit()) break;\n        }\n        return top.concat(ret);\n    };\n    MAP.at_top = function(val) { return new AtTop(val) };\n    MAP.splice = function(val) { return new Splice(val) };\n    MAP.last = function(val) { return new Last(val) };\n    var skip = MAP.skip = {};\n    function AtTop(val) { this.v = val };\n    function Splice(val) { this.v = val };\n    function Last(val) { this.v = val };\n    return MAP;\n})();\n\nfunction push_uniq(array, el) {\n    if (array.indexOf(el) < 0)\n        array.push(el);\n};\n\nfunction string_template(text, props) {\n    return text.replace(/\\{(.+?)\\}/g, function(str, p){\n        return props[p];\n    });\n};\n\nfunction remove(array, el) {\n    for (var i = array.length; --i >= 0;) {\n        if (array[i] === el) array.splice(i, 1);\n    }\n};\n\nfunction mergeSort(array, cmp) {\n    if (array.length < 2) return array.slice();\n    function merge(a, b) {\n        var r = [], ai = 0, bi = 0, i = 0;\n        while (ai < a.length && bi < b.length) {\n            cmp(a[ai], b[bi]) <= 0\n                ? r[i++] = a[ai++]\n                : r[i++] = b[bi++];\n        }\n        if (ai < a.length) r.push.apply(r, a.slice(ai));\n        if (bi < b.length) r.push.apply(r, b.slice(bi));\n        return r;\n    };\n    function _ms(a) {\n        if (a.length <= 1)\n            return a;\n        var m = Math.floor(a.length / 2), left = a.slice(0, m), right = a.slice(m);\n        left = _ms(left);\n        right = _ms(right);\n        return merge(left, right);\n    };\n    return _ms(array);\n};\n\nfunction set_difference(a, b) {\n    return a.filter(function(el){\n        return b.indexOf(el) < 0;\n    });\n};\n\nfunction set_intersection(a, b) {\n    return a.filter(function(el){\n        return b.indexOf(el) >= 0;\n    });\n};\n\n// this function is taken from Acorn [1], written by Marijn Haverbeke\n// [1] https://github.com/marijnh/acorn\nfunction makePredicate(words) {\n    if (!(words instanceof Array)) words = words.split(\" \");\n    var f = \"\", cats = [];\n    out: for (var i = 0; i < words.length; ++i) {\n        for (var j = 0; j < cats.length; ++j)\n            if (cats[j][0].length == words[i].length) {\n                cats[j].push(words[i]);\n                continue out;\n            }\n        cats.push([words[i]]);\n    }\n    function compareTo(arr) {\n        if (arr.length == 1) return f += \"return str === \" + JSON.stringify(arr[0]) + \";\";\n        f += \"switch(str){\";\n        for (var i = 0; i < arr.length; ++i) f += \"case \" + JSON.stringify(arr[i]) + \":\";\n        f += \"return true}return false;\";\n    }\n    // When there are more than three length categories, an outer\n    // switch first dispatches on the lengths, to save on comparisons.\n    if (cats.length > 3) {\n        cats.sort(function(a, b) {return b.length - a.length;});\n        f += \"switch(str.length){\";\n        for (var i = 0; i < cats.length; ++i) {\n            var cat = cats[i];\n            f += \"case \" + cat[0].length + \":\";\n            compareTo(cat);\n        }\n        f += \"}\";\n        // Otherwise, simply generate a flat `switch` statement.\n    } else {\n        compareTo(words);\n    }\n    return new Function(\"str\", f);\n};\n\nfunction all(array, predicate) {\n    for (var i = array.length; --i >= 0;)\n        if (!predicate(array[i]))\n            return false;\n    return true;\n};\n\nfunction Dictionary() {\n    this._values = Object.create(null);\n    this._size = 0;\n};\nDictionary.prototype = {\n    set: function(key, val) {\n        if (!this.has(key)) ++this._size;\n        this._values[\"$\" + key] = val;\n        return this;\n    },\n    add: function(key, val) {\n        if (this.has(key)) {\n            this.get(key).push(val);\n        } else {\n            this.set(key, [ val ]);\n        }\n        return this;\n    },\n    get: function(key) { return this._values[\"$\" + key] },\n    del: function(key) {\n        if (this.has(key)) {\n            --this._size;\n            delete this._values[\"$\" + key];\n        }\n        return this;\n    },\n    has: function(key) { return (\"$\" + key) in this._values },\n    each: function(f) {\n        for (var i in this._values)\n            f(this._values[i], i.substr(1));\n    },\n    size: function() {\n        return this._size;\n    },\n    map: function(f) {\n        var ret = [];\n        for (var i in this._values)\n            ret.push(f(this._values[i], i.substr(1)));\n        return ret;\n    },\n    toObject: function() { return this._values }\n};\nDictionary.fromObject = function(obj) {\n    var dict = new Dictionary();\n    dict._size = merge(dict._values, obj);\n    return dict;\n};\n","/* @license\n\n  Copyright (c) 2010 Mihai Bazon <mihai.bazon@gmail.com>\n  Copyright (c) 2011 Lauri Paimen <lauri@paimen.info>\n  Copyright (c) 2013 Anton Kreuzkamp <akreuzkamp@web.de>\n  Based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions\n  are met:\n\n      * Redistributions of source code must retain the above\n        copyright notice, this list of conditions and the following\n        disclaimer.\n\n      * Redistributions in binary form must reproduce the above\n        copyright notice, this list of conditions and the following\n        disclaimer in the documentation and/or other materials\n        provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n  THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  SUCH DAMAGE.\n*/\n\n\n/*\n * QML parser and parsetree'er.\n *\n * Based on Javascript parser written by Mihai Bazon for UglifyJS project.\n * That, again, is a port of Javascript parser by Marijn Haverbeke.\n * Big thanks to both of you (and others involved)!\n * UglifyJS: https://github.com/mishoo/UglifyJS\n * Marijn's parser: http://marijn.haverbeke.nl/parse-js/\n *\n * The primary goal of this file is to offer QML parsing *on top of UglifyJS\n * parser* and to change Javascript parts as little as possible. If you find\n * bugs/improvements to Javascript parsing parts, check if those are fixed to\n * UglifyJS parser first. If not, fix them there. After UglifyJS has been fixed,\n * backport the changes to this file. Less changes to Javascript, more easy it\n * will be to keep up with UglifyJS.\n * Ultimately it would be great to keep the original parser and QML additions in\n * different files but the structure of code does not support that.\n *\n * Exports:\n *\n * - QMLBinding(src, tree) to pass qml bindings along.\n *\n * - parseQML(src) -- parses QML source and returns it as output tree expected\n *   by the QML engine\n *\n * - qmlparse(src) -- parses QML source and returns tree a la uglifyjs parser.\n *   Currently used for debugging purposes.\n */\n\n// Object cloning for debug prints.\nfunction clone(obj){\n    if(obj == null || typeof(obj) != 'object')\n        return obj;\n\n    var temp = {}; // changed\n\n    for(var key in obj)\n        temp[key] = clone(obj[key]);\n    return temp;\n}\n\n/* -----[ Tokenizer (constants) ]----- */\n\nvar KEYWORDS = array_to_hash([\n        \"break\",\n        \"case\",\n        \"catch\",\n        \"const\",\n        \"continue\",\n        \"default\",\n        \"delete\",\n        \"do\",\n        \"else\",\n        \"finally\",\n        \"for\",\n        \"function\",\n        \"if\",\n        \"in\",\n        \"instanceof\",\n        \"new\",\n        \"return\",\n        \"switch\",\n        \"throw\",\n        \"try\",\n        \"typeof\",\n        \"var\",\n        \"void\",\n        \"while\",\n        \"with\"\n]);\n\nvar RESERVED_WORDS = array_to_hash([\n        \"abstract\",\n        \"boolean\",\n        \"byte\",\n        \"char\",\n        \"class\",\n        \"debugger\",\n        \"double\",\n        \"enum\",\n        \"export\",\n        \"extends\",\n        \"final\",\n        \"float\",\n        \"goto\",\n        \"implements\",\n        \"import\",\n        \"int\",\n        \"interface\",\n        \"long\",\n        \"native\",\n        \"package\",\n        \"private\",\n        \"protected\",\n        \"public\",\n        \"short\",\n        \"static\",\n        \"super\",\n        \"synchronized\",\n        \"throws\",\n        \"transient\",\n        \"volatile\"\n]);\n\nvar KEYWORDS_BEFORE_EXPRESSION = array_to_hash([\n        \"return\",\n        \"new\",\n        \"delete\",\n        \"throw\",\n        \"else\",\n        \"case\"\n]);\n\nvar KEYWORDS_ATOM = array_to_hash([\n        \"false\",\n        \"null\",\n        \"true\",\n        \"undefined\"\n]);\n\nvar OPERATOR_CHARS = array_to_hash(characters(\"+-*&%=<>!?|~^\"));\n\nvar RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;\nvar RE_OCT_NUMBER = /^0[0-7]+$/;\nvar RE_DEC_NUMBER = /^\\d*\\.?\\d*(?:e[+-]?\\d*(?:\\d\\.?|\\.?\\d)\\d*)?$/i;\n\nvar OPERATORS = array_to_hash([\n        \"in\",\n        \"instanceof\",\n        \"typeof\",\n        \"new\",\n        \"void\",\n        \"delete\",\n        \"++\",\n        \"--\",\n        \"+\",\n        \"-\",\n        \"!\",\n        \"~\",\n        \"&\",\n        \"|\",\n        \"^\",\n        \"*\",\n        \"/\",\n        \"%\",\n        \">>\",\n        \"<<\",\n        \">>>\",\n        \"<\",\n        \">\",\n        \"<=\",\n        \">=\",\n        \"==\",\n        \"===\",\n        \"!=\",\n        \"!==\",\n        \"?\",\n        \"=\",\n        \"+=\",\n        \"-=\",\n        \"/=\",\n        \"*=\",\n        \"%=\",\n        \">>=\",\n        \"<<=\",\n        \">>>=\",\n        \"|=\",\n        \"^=\",\n        \"&=\",\n        \"&&\",\n        \"||\"\n]);\n\nvar WHITESPACE_CHARS = array_to_hash(characters(\" \\n\\r\\t\\u200b\"));\n\nvar PUNC_BEFORE_EXPRESSION = array_to_hash(characters(\"[{}(,.;:\"));\n\nvar PUNC_CHARS = array_to_hash(characters(\"[]{}(),;:\"));\n\nvar REGEXP_MODIFIERS = array_to_hash(characters(\"gmsiy\"));\n\n/* -----[ Tokenizer ]----- */\n\n// regexps adapted from http://xregexp.com/plugins/#unicode\nvar UNICODE = {\n        letter: new RegExp(\"[\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u0523\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0621-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971\\\\u0972\\\\u097B-\\\\u097F\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C33\\\\u0C35-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D28\\\\u0D2A-\\\\u0D39\\\\u0D3D\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC\\\\u0EDD\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8B\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10D0-\\\\u10FA\\\\u10FC\\\\u1100-\\\\u1159\\\\u115F-\\\\u11A2\\\\u11A8-\\\\u11F9\\\\u1200-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u1676\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u1900-\\\\u191C\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19A9\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u2094\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2183\\\\u2184\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2C6F\\\\u2C71-\\\\u2C7D\\\\u2C80-\\\\u2CE4\\\\u2D00-\\\\u2D25\\\\u2D30-\\\\u2D65\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005\\\\u3006\\\\u3031-\\\\u3035\\\\u303B\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31B7\\\\u31F0-\\\\u31FF\\\\u3400\\\\u4DB5\\\\u4E00\\\\u9FC3\\\\uA000-\\\\uA48C\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA65F\\\\uA662-\\\\uA66E\\\\uA67F-\\\\uA697\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B\\\\uA78C\\\\uA7FB-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAC00\\\\uD7A3\\\\uF900-\\\\uFA2D\\\\uFA30-\\\\uFA6A\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]\"),\n        non_spacing_mark: new RegExp(\"[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0487\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065E\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0900-\\\\u0902\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0955\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0CBC\\\\u0CBF\\\\u0CC6\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EB9\\\\u0EBB\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F90-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1DC0-\\\\u1DE6\\\\u1DFD-\\\\u1DFF\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F\\\\uA67C\\\\uA67D\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8E0-\\\\uA8F1\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE26]\"),\n        space_combining_mark: new RegExp(\"[\\\\u0903\\\\u093E-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E\\\\u0982\\\\u0983\\\\u09BE-\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u09D7\\\\u0A03\\\\u0A3E-\\\\u0A40\\\\u0A83\\\\u0ABE-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0B02\\\\u0B03\\\\u0B3E\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0B57\\\\u0BBE\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0BD7\\\\u0C01-\\\\u0C03\\\\u0C41-\\\\u0C44\\\\u0C82\\\\u0C83\\\\u0CBE\\\\u0CC0-\\\\u0CC4\\\\u0CC7\\\\u0CC8\\\\u0CCA\\\\u0CCB\\\\u0CD5\\\\u0CD6\\\\u0D02\\\\u0D03\\\\u0D3E-\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D57\\\\u0D82\\\\u0D83\\\\u0DCF-\\\\u0DD1\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0F3E\\\\u0F3F\\\\u0F7F\\\\u102B\\\\u102C\\\\u1031\\\\u1038\\\\u103B\\\\u103C\\\\u1056\\\\u1057\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1083\\\\u1084\\\\u1087-\\\\u108C\\\\u108F\\\\u109A-\\\\u109C\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u19B0-\\\\u19C0\\\\u19C8\\\\u19C9\\\\u1A19-\\\\u1A1B\\\\u1A55\\\\u1A57\\\\u1A61\\\\u1A63\\\\u1A64\\\\u1A6D-\\\\u1A72\\\\u1B04\\\\u1B35\\\\u1B3B\\\\u1B3D-\\\\u1B41\\\\u1B43\\\\u1B44\\\\u1B82\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BAA\\\\u1C24-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1CE1\\\\u1CF2\\\\uA823\\\\uA824\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C3\\\\uA952\\\\uA953\\\\uA983\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BD-\\\\uA9C0\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA4D\\\\uAA7B\\\\uABE3\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9\\\\uABEA\\\\uABEC]\"),\n        connector_punctuation: new RegExp(\"[\\\\u005F\\\\u203F\\\\u2040\\\\u2054\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFF3F]\")\n};\n\nfunction is_letter(ch) {\n        return UNICODE.letter.test(ch);\n};\n\nfunction is_digit(ch) {\n        ch = ch.charCodeAt(0);\n        return ch >= 48 && ch <= 57; //XXX: find out if \"UnicodeDigit\" means something else than 0..9\n};\n\nfunction is_alphanumeric_char(ch) {\n        return is_digit(ch) || is_letter(ch);\n};\n\nfunction is_unicode_combining_mark(ch) {\n        return UNICODE.non_spacing_mark.test(ch) || UNICODE.space_combining_mark.test(ch);\n};\n\nfunction is_unicode_connector_punctuation(ch) {\n        return UNICODE.connector_punctuation.test(ch);\n};\n\nfunction is_identifier_start(ch) {\n        return ch == \"$\" || ch == \"_\" || is_letter(ch);\n};\n\nfunction is_identifier_char(ch) {\n        return is_identifier_start(ch)\n                || is_unicode_combining_mark(ch)\n                || is_digit(ch)\n                || is_unicode_connector_punctuation(ch)\n                || ch == \"\\u200c\" // zero-width non-joiner <ZWNJ>\n                || ch == \"\\u200d\" // zero-width joiner <ZWJ> (in my ECMA-262 PDF, this is also 200c)\n        ;\n};\n\nfunction parse_js_number(num) {\n        if (RE_HEX_NUMBER.test(num)) {\n                return parseInt(num.substr(2), 16);\n        } else if (RE_OCT_NUMBER.test(num)) {\n                return parseInt(num.substr(1), 8);\n        } else if (RE_DEC_NUMBER.test(num)) {\n                return parseFloat(num);\n        }\n};\n\nfunction JS_Parse_Error(message, line, col, pos, comment) {\n        this.message = message;\n        this.line = line + 1;\n        this.col = col;\n        this.pos = pos;\n        this.comment = comment ? comment : \"\";\n        try {\n                ({})();\n        } catch(ex) {\n                this.stack = ex.stack;\n        };\n};\n\nJS_Parse_Error.prototype.toString = function() {\n        return this.message + \" (line: \" + this.line + \", col: \" + this.col + \", pos: \" + this.pos + \")\" + \"\\n\" + this.comment + \"\\n\" + this.stack;\n};\n\nfunction js_error(message, line, col, pos, comment) {\n        throw new JS_Parse_Error(message, line, col, pos, comment);\n};\n\nfunction is_token(token, type, val) {\n        return token.type == type && (val == null || token.value == val);\n};\n\nfunction extractLinesForErrorDiag(text, line)\n{\n  var r = \"\";\n  var lines = text.split(\"\\n\");\n\n  for (var i = line - 3; i <= line + 3; i++)\n  if (i >= 0 && i < lines.length ) {\n      var mark = ( i == line ) ? \">>\" : \"  \";\n      r += mark + i + \"  \" + lines[i] + \"\\n\";\n  }\n\n  return r;\n}\n\nvar EX_EOF = {};\n\nfunction tokenizer($TEXT) {\n\n        var S = {\n                text            : $TEXT.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, \"\\n\").replace(/^\\uFEFF/, ''),\n                pos             : 0,\n                tokpos          : 0,\n                line            : 0,\n                tokline         : 0,\n                col             : 0,\n                tokcol          : 0,\n                newline_before  : false,\n                regex_allowed   : false,\n                comments_before : []\n        };\n\n        function peek() { return S.text.charAt(S.pos); };\n\n        function next(signal_eof) {\n                var ch = S.text.charAt(S.pos++);\n                if (signal_eof && !ch)\n                        throw EX_EOF;\n                if (ch == \"\\n\") {\n                        S.newline_before = true;\n                        ++S.line;\n                        S.col = 0;\n                } else {\n                        ++S.col;\n                }\n                return ch;\n        };\n\n        function eof() {\n                return !S.peek();\n        };\n\n        function find(what, signal_eof) {\n                var pos = S.text.indexOf(what, S.pos);\n                if (signal_eof && pos == -1) throw EX_EOF;\n                return pos;\n        };\n\n        function start_token() {\n                S.tokline = S.line;\n                S.tokcol = S.col;\n                S.tokpos = S.pos;\n        };\n\n        function token(type, value, is_comment) {\n                S.regex_allowed = ((type == \"operator\" && !HOP(UNARY_POSTFIX, value)) ||\n                                   (type == \"keyword\" && HOP(KEYWORDS_BEFORE_EXPRESSION, value)) ||\n                                   (type == \"punc\" && HOP(PUNC_BEFORE_EXPRESSION, value)));\n                var ret = {\n                        type  : type,\n                        value : value,\n                        line  : S.tokline,\n                        col   : S.tokcol,\n                        pos   : S.tokpos,\n                        nlb   : S.newline_before\n                };\n                if (!is_comment) {\n                        ret.comments_before = S.comments_before;\n                        S.comments_before = [];\n                }\n                S.newline_before = false;\n                return ret;\n        };\n\n        function skip_whitespace() {\n                while (HOP(WHITESPACE_CHARS, peek()))\n                        next();\n        };\n\n        function read_while(pred) {\n                var ret = \"\", ch = peek(), i = 0;\n                while (ch && pred(ch, i++)) {\n                        ret += next();\n                        ch = peek();\n                }\n                return ret;\n        };\n\n        function parse_error(err) {\n                js_error(err, S.tokline, S.tokcol, S.tokpos, extractLinesForErrorDiag( S.text, S.tokline ) );\n        };\n\n        function read_num(prefix) {\n                var has_e = false, after_e = false, has_x = false, has_dot = prefix == \".\";\n                var num = read_while(function(ch, i){\n                        if (ch == \"x\" || ch == \"X\") {\n                                if (has_x) return false;\n                                return has_x = true;\n                        }\n                        if (!has_x && (ch == \"E\" || ch == \"e\")) {\n                                if (has_e) return false;\n                                return has_e = after_e = true;\n                        }\n                        if (ch == \"-\") {\n                                if (after_e || (i == 0 && !prefix)) return true;\n                                return false;\n                        }\n                        if (ch == \"+\") return after_e;\n                        after_e = false;\n                        if (ch == \".\") {\n                                if (!has_dot && !has_x)\n                                        return has_dot = true;\n                                return false;\n                        }\n                        return is_alphanumeric_char(ch);\n                });\n                if (prefix)\n                        num = prefix + num;\n                var valid = parse_js_number(num);\n                if (!isNaN(valid)) {\n                        return token(\"num\", valid);\n                } else {\n                        parse_error(\"Invalid syntax: \" + num);\n                }\n        };\n\n        function read_escaped_char() {\n                var ch = next(true);\n                switch (ch) {\n                    case \"n\" : return \"\\n\";\n                    case \"r\" : return \"\\r\";\n                    case \"t\" : return \"\\t\";\n                    case \"b\" : return \"\\b\";\n                    case \"v\" : return \"\\v\";\n                    case \"f\" : return \"\\f\";\n                    case \"0\" : return \"\\0\";\n                    case \"x\" : return String.fromCharCode(hex_bytes(2));\n                    case \"u\" : return String.fromCharCode(hex_bytes(4));\n                    case \"\\n\": return \"\";\n                    default  : return ch;\n                }\n        };\n\n        function hex_bytes(n) {\n                var num = 0;\n                for (; n > 0; --n) {\n                        var digit = parseInt(next(true), 16);\n                        if (isNaN(digit))\n                                parse_error(\"Invalid hex-character pattern in string\");\n                        num = (num << 4) | digit;\n                }\n                return num;\n        };\n\n        function read_string() {\n                return with_eof_error(\"Unterminated string constant\", function(){\n                        var quote = next(), ret = \"\";\n                        for (;;) {\n                                var ch = next(true);\n                                if (ch == \"\\\\\") ch = read_escaped_char();\n                                else if (ch == quote) break;\n                                ret += ch;\n                        }\n                        return token(\"string\", ret);\n                });\n        };\n\n        function read_line_comment() {\n                next();\n                var i = find(\"\\n\"), ret;\n                if (i == -1) {\n                        ret = S.text.substr(S.pos);\n                        S.pos = S.text.length;\n                } else {\n                        ret = S.text.substring(S.pos, i);\n                        S.pos = i;\n                }\n                return token(\"comment1\", ret, true);\n        };\n\n        function read_multiline_comment() {\n                next();\n                return with_eof_error(\"Unterminated multiline comment\", function(){\n                        var i = find(\"*/\", true),\n                            text = S.text.substring(S.pos, i),\n                            tok = token(\"comment2\", text, true);\n                        S.pos = i + 2;\n                        S.line += text.split(\"\\n\").length - 1;\n                        S.newline_before = text.indexOf(\"\\n\") >= 0;\n\n                        // https://github.com/mishoo/UglifyJS/issues/#issue/100\n                        if (/^@cc_on/i.test(text)) {\n                                warn(\"WARNING: at line \" + S.line);\n                                warn(\"*** Found \\\"conditional comment\\\": \" + text);\n                                warn(\"*** UglifyJS DISCARDS ALL COMMENTS.  This means your code might no longer work properly in Internet Explorer.\");\n                        }\n\n                        return tok;\n                });\n        };\n\n        function read_name() {\n                var backslash = false, name = \"\", ch;\n                while ((ch = peek()) != null) {\n                        if (!backslash) {\n                                if (ch == \"\\\\\") backslash = true, next();\n                                else if (is_identifier_char(ch)) name += next();\n                                else break;\n                        }\n                        else {\n                                if (ch != \"u\") parse_error(\"Expecting UnicodeEscapeSequence -- uXXXX\");\n                                ch = read_escaped_char();\n                                if (!is_identifier_char(ch)) parse_error(\"Unicode char: \" + ch.charCodeAt(0) + \" is not valid in identifier\");\n                                name += ch;\n                                backslash = false;\n                        }\n                }\n                return name;\n        };\n\n        function read_regexp() {\n                return with_eof_error(\"Unterminated regular expression\", function(){\n                        var prev_backslash = false, regexp = \"\", ch, in_class = false;\n                        while ((ch = next(true))) if (prev_backslash) {\n                                regexp += \"\\\\\" + ch;\n                                prev_backslash = false;\n                        } else if (ch == \"[\") {\n                                in_class = true;\n                                regexp += ch;\n                        } else if (ch == \"]\" && in_class) {\n                                in_class = false;\n                                regexp += ch;\n                        } else if (ch == \"/\" && !in_class) {\n                                break;\n                        } else if (ch == \"\\\\\") {\n                                prev_backslash = true;\n                        } else {\n                                regexp += ch;\n                        }\n                        var mods = read_name();\n                        return token(\"regexp\", [ regexp, mods ]);\n                });\n        };\n\n        function read_operator(prefix) {\n                function grow(op) {\n                        if (!peek()) return op;\n                        var bigger = op + peek();\n                        if (HOP(OPERATORS, bigger)) {\n                                next();\n                                return grow(bigger);\n                        } else {\n                                return op;\n                        }\n                };\n                return token(\"operator\", grow(prefix || next()));\n        };\n\n        function handle_slash() {\n                next();\n                var regex_allowed = S.regex_allowed;\n                switch (peek()) {\n                    case \"/\":\n                        S.comments_before.push(read_line_comment());\n                        S.regex_allowed = regex_allowed;\n                        return next_token();\n                    case \"*\":\n                        S.comments_before.push(read_multiline_comment());\n                        S.regex_allowed = regex_allowed;\n                        return next_token();\n                }\n                return S.regex_allowed ? read_regexp() : read_operator(\"/\");\n        };\n\n        function handle_dot() {\n                next();\n                return is_digit(peek())\n                        ? read_num(\".\")\n                        : token(\"punc\", \".\");\n        };\n\n        function read_word() {\n                var word = read_name();\n                return !HOP(KEYWORDS, word)\n                        ? token(\"name\", word)\n                        : HOP(OPERATORS, word)\n                        ? token(\"operator\", word)\n                        : HOP(KEYWORDS_ATOM, word)\n                        ? token(\"atom\", word)\n                        : token(\"keyword\", word);\n        };\n\n        function with_eof_error(eof_error, cont) {\n                try {\n                        return cont();\n                } catch(ex) {\n                        if (ex === EX_EOF) parse_error(eof_error);\n                        else throw ex;\n                }\n        };\n\n        function next_token(force_regexp) {\n                if (force_regexp)\n                        return read_regexp();\n                skip_whitespace();\n                start_token();\n                var ch = peek();\n                if (!ch) return token(\"eof\");\n                if (is_digit(ch)) return read_num();\n                if (ch == '\"' || ch == \"'\") return read_string();\n                if (HOP(PUNC_CHARS, ch)) return token(\"punc\", next());\n                if (ch == \".\") return handle_dot();\n                if (ch == \"/\") return handle_slash();\n                if (HOP(OPERATOR_CHARS, ch)) return read_operator();\n                if (ch == \"\\\\\" || is_identifier_start(ch)) return read_word();\n                parse_error(\"Unexpected character '\" + ch + \"'\");\n        };\n\n        next_token.context = function(nc) {\n                if (nc) S = nc;\n                return S;\n        };\n\n        return next_token;\n\n};\n\n/* -----[ Parser (constants) ]----- */\n\nvar UNARY_PREFIX = array_to_hash([\n        \"typeof\",\n        \"void\",\n        \"delete\",\n        \"--\",\n        \"++\",\n        \"!\",\n        \"~\",\n        \"-\",\n        \"+\"\n]);\n\nvar UNARY_POSTFIX = array_to_hash([ \"--\", \"++\" ]);\n\nvar ASSIGNMENT = (function(a, ret, i){\n        while (i < a.length) {\n                ret[a[i]] = a[i].substr(0, a[i].length - 1);\n                i++;\n        }\n        return ret;\n})(\n        [\"+=\", \"-=\", \"/=\", \"*=\", \"%=\", \">>=\", \"<<=\", \">>>=\", \"|=\", \"^=\", \"&=\"],\n        { \"=\": true },\n        0\n);\n\nvar PRECEDENCE = (function(a, ret){\n        for (var i = 0, n = 1; i < a.length; ++i, ++n) {\n                var b = a[i];\n                for (var j = 0; j < b.length; ++j) {\n                        ret[b[j]] = n;\n                }\n        }\n        return ret;\n})(\n        [\n                [\"||\"],\n                [\"&&\"],\n                [\"|\"],\n                [\"^\"],\n                [\"&\"],\n                [\"==\", \"===\", \"!=\", \"!==\"],\n                [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n                [\">>\", \"<<\", \">>>\"],\n                [\"+\", \"-\"],\n                [\"*\", \"/\", \"%\"]\n        ],\n        {}\n);\n\nvar STATEMENTS_WITH_LABELS = array_to_hash([ \"for\", \"do\", \"while\", \"switch\" ]);\n\nvar ATOMIC_START_TOKEN = array_to_hash([ \"atom\", \"num\", \"string\", \"regexp\", \"name\" ]);\n\n/* -----[ Parser ]----- */\n\nfunction NodeWithToken(str, start, end) {\n        this.name = str;\n        this.start = start;\n        this.end = end;\n};\n\nNodeWithToken.prototype.toString = function() { return this.name; };\n\nfunction qmlparse($TEXT, exigent_mode, embed_tokens) {\n\n        var S = {\n                text        : $TEXT.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, \"\\n\").replace(/^\\uFEFF/, ''),\n                input       : typeof $TEXT == \"string\" ? tokenizer($TEXT, true) : $TEXT,\n                token       : null,\n                prev        : null,\n                peeked      : null,\n                in_function : 0,\n                in_loop     : 0,\n                labels      : []\n        };\n\n        S.token = next();\n\n        function is(type, value) {\n                return is_token(S.token, type, value);\n        };\n\n        function peek() { return S.peeked || (S.peeked = S.input()); };\n\n        function next() {\n                S.prev = S.token;\n                if (S.peeked) {\n                        S.token = S.peeked;\n                        S.peeked = null;\n                } else {\n                        S.token = S.input();\n                }\n                return S.token;\n        };\n\n        function prev() {\n                return S.prev;\n        };\n\n        function croak(msg, line, col, pos) {\n                var ctx = S.input.context();\n                var eLine = (line != null ? line : ctx.tokline);\n                js_error(msg,\n                         eLine,\n                         col != null ? col : ctx.tokcol,\n                         pos != null ? pos : ctx.tokpos,\n                         extractLinesForErrorDiag( S.text, eLine ) );\n        };\n\n        function token_error(token, msg) {\n                croak(msg, token.line, token.col);\n        };\n\n        function unexpected(token) {\n                if (token == null)\n                        token = S.token;\n                token_error(token, \"Unexpected token: \" + token.type + \" (\" + token.value + \")\");\n        };\n\n        function expect_token(type, val) {\n                if (is(type, val)) {\n                        return next();\n                }\n                token_error(S.token, \"Unexpected token \" + S.token.type + \" \" + S.token.val + \", expected \" + type + \" \" + val);\n        };\n\n        function expect(punc) { return expect_token(\"punc\", punc); };\n\n        function can_insert_semicolon() {\n                return !exigent_mode && (\n                        S.token.nlb || is(\"eof\") || is(\"punc\", \"}\")\n                );\n        };\n\n        function semicolon() {\n                if (is(\"punc\", \";\")) next();\n                else if (!can_insert_semicolon()) unexpected();\n        };\n\n        function as() {\n                return slice(arguments);\n        };\n\n        function parenthesised() {\n                expect(\"(\");\n                var ex = expression();\n                expect(\")\");\n                return ex;\n        };\n\n        function add_tokens(str, start, end) {\n                return str instanceof NodeWithToken ? str : new NodeWithToken(str, start, end);\n        };\n\n        function maybe_embed_tokens(parser) {\n                if (embed_tokens) return function() {\n                        var start = S.token;\n                        var ast = parser.apply(this, arguments);\n                        ast[0] = add_tokens(ast[0], start, prev());\n                        return ast;\n                };\n                else return parser;\n        };\n\n        var statement = maybe_embed_tokens(function() {\n                if (is(\"operator\", \"/\")) {\n                        S.peeked = null;\n                        S.token = S.input(true); // force regexp\n                }\n                switch (S.token.type) {\n                    case \"num\":\n                    case \"string\":\n                    case \"regexp\":\n                    case \"operator\":\n                    case \"atom\":\n                        return simple_statement();\n\n                    case \"name\":\n                        return is_token(peek(), \"punc\", \":\")\n                                ? labeled_statement(prog1(S.token.value, next, next))\n                                : simple_statement();\n\n                    case \"punc\":\n                        switch (S.token.value) {\n                            case \"{\":\n                                return as(\"block\", block_());\n                            case \"[\":\n                            case \"(\":\n                                return simple_statement();\n                            case \";\":\n                                next();\n                                return as(\"block\");\n                            default:\n                                unexpected();\n                        }\n\n                    case \"keyword\":\n                        switch (prog1(S.token.value, next)) {\n                            case \"break\":\n                                return break_cont(\"break\");\n\n                            case \"continue\":\n                                return break_cont(\"continue\");\n\n                            case \"debugger\":\n                                semicolon();\n                                return as(\"debugger\");\n\n                            case \"do\":\n                                return (function(body){\n                                        expect_token(\"keyword\", \"while\");\n                                        return as(\"do\", prog1(parenthesised, semicolon), body);\n                                })(in_loop(statement));\n\n                            case \"for\":\n                                return for_();\n\n                            case \"function\":\n                                return function_(true);\n\n                            case \"if\":\n                                return if_();\n\n                            case \"return\":\n                                if (S.in_function == 0)\n                                        croak(\"'return' outside of function\");\n                                return as(\"return\",\n                                          is(\"punc\", \";\")\n                                          ? (next(), null)\n                                          : can_insert_semicolon()\n                                          ? null\n                                          : prog1(expression, semicolon));\n\n                            case \"switch\":\n                                return as(\"switch\", parenthesised(), switch_block_());\n\n                            case \"throw\":\n                                return as(\"throw\", prog1(expression, semicolon));\n\n                            case \"try\":\n                                return try_();\n\n                            case \"var\":\n                                return prog1(var_, semicolon);\n\n                            case \"const\":\n                                return prog1(const_, semicolon);\n\n                            case \"while\":\n                                return as(\"while\", parenthesised(), in_loop(statement));\n\n                            case \"with\":\n                                return as(\"with\", parenthesised(), statement());\n\n                            default:\n                                unexpected();\n                        }\n                }\n        });\n\n        function labeled_statement(label) {\n                S.labels.push(label);\n                var start = S.token, stat = statement();\n                if (exigent_mode && !HOP(STATEMENTS_WITH_LABELS, stat[0]))\n                        unexpected(start);\n                S.labels.pop();\n                return as(\"label\", label, stat);\n        };\n\n        function simple_statement() {\n                return as(\"stat\", prog1(expression, semicolon));\n        };\n\n        function break_cont(type) {\n                var name = is(\"name\") ? S.token.value : null;\n                if (name != null) {\n                        next();\n                        if (!member(name, S.labels))\n                                croak(\"Label \" + name + \" without matching loop or statement\");\n                }\n                else if (S.in_loop == 0)\n                        croak(type + \" not inside a loop or switch\");\n                semicolon();\n                return as(type, name);\n        };\n\n        function for_() {\n                expect(\"(\");\n                var init = null;\n                if (!is(\"punc\", \";\")) {\n                        init = is(\"keyword\", \"var\")\n                                ? (next(), var_(true))\n                                : expression(true, true);\n                        if (is(\"operator\", \"in\"))\n                                return for_in(init);\n                }\n                return regular_for(init);\n        };\n\n        function regular_for(init) {\n                expect(\";\");\n                var test = is(\"punc\", \";\") ? null : expression();\n                expect(\";\");\n                var step = is(\"punc\", \")\") ? null : expression();\n                expect(\")\");\n                return as(\"for\", init, test, step, in_loop(statement));\n        };\n\n        function for_in(init) {\n                var lhs = init[0] == \"var\" ? as(\"name\", init[1][0]) : init;\n                next();\n                var obj = expression();\n                expect(\")\");\n                return as(\"for-in\", init, lhs, obj, in_loop(statement));\n        };\n\n        var function_ = maybe_embed_tokens(function(in_statement) {\n                var name = is(\"name\") ? prog1(S.token.value, next) : null;\n                if (in_statement && !name)\n                        unexpected();\n                expect(\"(\");\n                return as(in_statement ? \"defun\" : \"function\",\n                          name,\n                          // arguments\n                          (function(first, a){\n                                  while (!is(\"punc\", \")\")) {\n                                          if (first) first = false; else expect(\",\");\n                                          if (!is(\"name\")) unexpected();\n                                          a.push(S.token.value);\n                                          next();\n                                  }\n                                  next();\n                                  return a;\n                          })(true, []),\n                          // body\n                          (function(){\n                                  ++S.in_function;\n                                  var loop = S.in_loop;\n                                  S.in_loop = 0;\n                                  var a = block_();\n                                  --S.in_function;\n                                  S.in_loop = loop;\n                                  return a;\n                          })());\n        });\n\n        function if_() {\n                var cond = parenthesised(), body = statement(), belse;\n                if (is(\"keyword\", \"else\")) {\n                        next();\n                        belse = statement();\n                }\n                return as(\"if\", cond, body, belse);\n        };\n\n        function block_() {\n                expect(\"{\");\n                var a = [];\n                while (!is(\"punc\", \"}\")) {\n                        if (is(\"eof\")) unexpected();\n                        a.push(statement());\n                }\n                next();\n                return a;\n        };\n\n        var switch_block_ = curry(in_loop, function(){\n                expect(\"{\");\n                var a = [], cur = null;\n                while (!is(\"punc\", \"}\")) {\n                        if (is(\"eof\")) unexpected();\n                        if (is(\"keyword\", \"case\")) {\n                                next();\n                                cur = [];\n                                a.push([ expression(), cur ]);\n                                expect(\":\");\n                        }\n                        else if (is(\"keyword\", \"default\")) {\n                                next();\n                                expect(\":\");\n                                cur = [];\n                                a.push([ null, cur ]);\n                        }\n                        else {\n                                if (!cur) unexpected();\n                                cur.push(statement());\n                        }\n                }\n                next();\n                return a;\n        });\n\n        function try_() {\n                var body = block_(), bcatch, bfinally;\n                if (is(\"keyword\", \"catch\")) {\n                        next();\n                        expect(\"(\");\n                        if (!is(\"name\"))\n                                croak(\"Name expected\");\n                        var name = S.token.value;\n                        next();\n                        expect(\")\");\n                        bcatch = [ name, block_() ];\n                }\n                if (is(\"keyword\", \"finally\")) {\n                        next();\n                        bfinally = block_();\n                }\n                if (!bcatch && !bfinally)\n                        croak(\"Missing catch/finally blocks\");\n                return as(\"try\", body, bcatch, bfinally);\n        };\n\n        function vardefs(no_in) {\n                var a = [];\n                for (;;) {\n                        if (!is(\"name\"))\n                                unexpected();\n                        var name = S.token.value;\n                        next();\n                        if (is(\"operator\", \"=\")) {\n                                next();\n                                a.push([ name, expression(false, no_in) ]);\n                        } else {\n                                a.push([ name ]);\n                        }\n                        if (!is(\"punc\", \",\"))\n                                break;\n                        next();\n                }\n                return a;\n        };\n\n        function var_(no_in) {\n                return as(\"var\", vardefs(no_in));\n        };\n\n        function const_() {\n                return as(\"const\", vardefs());\n        };\n\n        function new_() {\n                var newexp = expr_atom(false), args;\n                if (is(\"punc\", \"(\")) {\n                        next();\n                        args = expr_list(\")\");\n                } else {\n                        args = [];\n                }\n                return subscripts(as(\"new\", newexp, args), true);\n        };\n\n        var expr_atom = maybe_embed_tokens(function(allow_calls) {\n                if (is(\"operator\", \"new\")) {\n                        next();\n                        return new_();\n                }\n                if (is(\"operator\") && HOP(UNARY_PREFIX, S.token.value)) {\n                        return make_unary(\"unary-prefix\",\n                                          prog1(S.token.value, next),\n                                          expr_atom(allow_calls));\n                }\n                if (is(\"punc\")) {\n                        switch (S.token.value) {\n                            case \"(\":\n                                next();\n                                return subscripts(prog1(expression, curry(expect, \")\")), allow_calls);\n                            case \"[\":\n                                next();\n                                return subscripts(array_(), allow_calls);\n                            case \"{\":\n                                next();\n                                return subscripts(object_(), allow_calls);\n                        }\n                        unexpected();\n                }\n                if (is(\"keyword\", \"function\")) {\n                        next();\n                        return subscripts(function_(false), allow_calls);\n                }\n                if (HOP(ATOMIC_START_TOKEN, S.token.type)) {\n                        var atom = S.token.type == \"regexp\"\n                                ? as(\"regexp\", S.token.value[0], S.token.value[1])\n                                : as(S.token.type, S.token.value);\n                        return subscripts(prog1(atom, next), allow_calls);\n                }\n                unexpected();\n        });\n\n        function expr_list(closing, allow_trailing_comma, allow_empty) {\n                var first = true, a = [];\n                while (!is(\"punc\", closing)) {\n                        if (first) first = false; else expect(\",\");\n                        if (allow_trailing_comma && is(\"punc\", closing)) break;\n                        if (is(\"punc\", \",\") && allow_empty) {\n                                a.push([ \"atom\", \"undefined\" ]);\n                        } else {\n                                a.push(expression(false));\n                        }\n                }\n                next();\n                return a;\n        };\n\n        function array_() {\n                var from = S.token.pos,\n                    stat = expr_list(\"]\", !exigent_mode, true),\n                    to = S.token.pos;\n                return as(\"array\", stat, \"[\" + S.text.substr(from, to - from));\n        };\n\n        function object_() {\n                var first = true, a = [];\n                while (!is(\"punc\", \"}\")) {\n                        if (first) first = false; else expect(\",\");\n                        if (!exigent_mode && is(\"punc\", \"}\"))\n                                // allow trailing comma\n                                break;\n                        var type = S.token.type;\n                        var name = as_property_name();\n                        if (type == \"name\" && (name == \"get\" || name == \"set\") && !is(\"punc\", \":\")) {\n                                a.push([ as_name(), function_(false), name ]);\n                        } else {\n                                expect(\":\");\n                                a.push([ name, expression(false) ]);\n                        }\n                }\n                next();\n                return as(\"object\", a);\n        };\n\n        function as_property_name() {\n                switch (S.token.type) {\n                    case \"num\":\n                    case \"string\":\n                        return prog1(S.token.value, next);\n                }\n                return as_name();\n        };\n\n        function as_name() {\n                switch (S.token.type) {\n                    case \"name\":\n                    case \"operator\":\n                    case \"keyword\":\n                    case \"atom\":\n                        return prog1(S.token.value, next);\n                    default:\n                        unexpected();\n                }\n        };\n\n        function subscripts(expr, allow_calls) {\n                if (is(\"punc\", \".\")) {\n                        next();\n                        return subscripts(as(\"dot\", expr, as_name()), allow_calls);\n                }\n                if (is(\"punc\", \"[\")) {\n                        next();\n                        return subscripts(as(\"sub\", expr, prog1(expression, curry(expect, \"]\"))), allow_calls);\n                }\n                if (allow_calls && is(\"punc\", \"(\")) {\n                        next();\n                        return subscripts(as(\"call\", expr, expr_list(\")\")), true);\n                }\n                if (allow_calls && is(\"operator\") && HOP(UNARY_POSTFIX, S.token.value)) {\n                        return prog1(curry(make_unary, \"unary-postfix\", S.token.value, expr),\n                                     next);\n                }\n                return expr;\n        };\n\n        function make_unary(tag, op, expr) {\n                if ((op == \"++\" || op == \"--\") && !is_assignable(expr))\n                        croak(\"Invalid use of \" + op + \" operator\");\n                return as(tag, op, expr);\n        };\n\n        function expr_op(left, min_prec, no_in) {\n                var op = is(\"operator\") ? S.token.value : null;\n                if (op && op == \"in\" && no_in) op = null;\n                var prec = op != null ? PRECEDENCE[op] : null;\n                if (prec != null && prec > min_prec) {\n                        next();\n                        var right = expr_op(expr_atom(true), prec, no_in);\n                        return expr_op(as(\"binary\", op, left, right), min_prec, no_in);\n                }\n                return left;\n        };\n\n        function expr_ops(no_in) {\n                return expr_op(expr_atom(true), 0, no_in);\n        };\n\n        function maybe_conditional(no_in) {\n                var expr = expr_ops(no_in);\n                if (is(\"operator\", \"?\")) {\n                        next();\n                        var yes = expression(false);\n                        expect(\":\");\n                        return as(\"conditional\", expr, yes, expression(false, no_in));\n                }\n                return expr;\n        };\n\n        function is_assignable(expr) {\n                if (!exigent_mode) return true;\n                switch (expr[0]) {\n                    case \"dot\":\n                    case \"sub\":\n                    case \"new\":\n                    case \"call\":\n                        return true;\n                    case \"name\":\n                        return expr[1] != \"this\";\n                }\n        };\n\n        function maybe_assign(no_in) {\n                var left = maybe_conditional(no_in), val = S.token.value;\n                if (is(\"operator\") && HOP(ASSIGNMENT, val)) {\n                        if (is_assignable(left)) {\n                                next();\n                                return as(\"assign\", ASSIGNMENT[val], left, maybe_assign(no_in));\n                        }\n                        croak(\"Invalid assignment\");\n                }\n                return left;\n        };\n\n        function maybe_qmlelem(no_in) {\n                var expr = maybe_assign(no_in);\n                if (is(\"punc\", \"{\"))\n                    return as(\"qmlelem\", expr[1], undefined, qmlblock());\n                return expr;\n        };\n\n        var expression = maybe_embed_tokens(function(commas, no_in) {\n                if (arguments.length == 0)\n                        commas = true;\n                var expr = maybe_qmlelem(no_in);\n                if (commas && is(\"punc\", \",\")) {\n                        next();\n                        return as(\"seq\", expr, expression(true, no_in));\n                }\n                return expr;\n        });\n\n        function in_loop(cont) {\n                try {\n                        ++S.in_loop;\n                        return cont();\n                } finally {\n                        --S.in_loop;\n                }\n        };\n\n        function qml_is_element(str) {\n            return str[0].toUpperCase() == str[0];\n        }\n\n        function qmlblock() {\n            expect(\"{\");\n            var a = [];\n            while (!is(\"punc\", \"}\")) {\n                if (is(\"eof\")) unexpected();\n                a.push(qmlstatement());\n            }\n            expect(\"}\");\n            return a;\n        }\n\n        function qmlproperty() {\n            switch (S.token.type) {\n                case \"name\":\n                    return as(\"qmlbinding\", statement());\n                case \"num\":\n                case \"string\":\n                    return as(\"qmlvalue\", prog1(S.token.value, next,\n                        semicolon));\n                default:\n                    todo();\n            }\n        }\n\n        function qmlpropdef() {\n            var type = S.token.value;\n            next();\n            var name = S.token.value;\n            next();\n            if (type == \"alias\") {\n                expect(\":\");\n                if (!is(\"name\")) unexpected();\n                var objName = S.token.value;\n                next();\n                if (is(\"punc\", \".\")) {\n                    next();\n                    if (!is(\"name\")) unexpected();\n                    var propName = S.token.value;\n                    next();\n                }\n                return as(\"qmlaliasdef\", name, objName, propName);\n            }\n            if (is(\"punc\", \":\")) {\n                next();\n                S.in_function++;\n                var from = S.token.pos,\n                    stat = statement(),\n                    to = S.token.pos;\n                S.in_function--;\n                return as(\"qmlpropdef\", name, type, stat,\n                        S.text.substr(from, to - from));\n            } else if (is(\"punc\", \";\"))\n                next();\n            return as(\"qmlpropdef\", name, type);\n\n        }\n\n        function qmldefaultprop() {\n            next();\n            expect_token(\"name\", \"property\");\n\n            return as(\"qmldefaultprop\", qmlpropdef());\n        }\n\n        function qmlsignaldef() {\n            var name = S.token.value;\n            next();\n            var args = [];\n            if (is(\"punc\", \"(\")) {\n                next();\n                var first = true;\n                while (!is(\"punc\", \")\")) {\n                        if (first) first = false; else expect(\",\");\n                        if (!is(\"name\")) unexpected();\n                        var type = S.token.value;\n                        next();\n                        if (!is(\"name\")) unexpected();\n                        args.push({type: type, name: S.token.value});\n                        next();\n                }\n                next();\n            }\n            if (is(\"punc\", \";\"))\n                next();\n            return as(\"qmlsignaldef\", name, args);\n\n        }\n\n        function qmlstatement() {\n            if (is(\"keyword\", \"function\")) {\n                var from = S.token.pos;\n                next();\n                var stat = function_(true);\n                var to = S.token.pos;\n                var name = stat[1];\n                return as(\"qmlmethod\", name, stat,\n                    S.text.substr(from, to - from));\n            } else if (is(\"name\", \"signal\")) {\n                next();\n                if (is(\"punc\", \":\")) {\n                    next();\n                    S.in_function++;\n                    var from = S.token.pos,\n                        stat = statement(),\n                        to = S.token.pos;\n                    S.in_function--;\n                    return as(\"qmlprop\", propname, stat,\n                        S.text.substr(from, to - from));\n                } else {\n                    return qmlsignaldef();\n                }\n            } else if (S.token.type == \"name\") {\n                var propname = S.token.value;\n                next();\n                if (propname == \"property\" && (S.token.type == \"name\" || S.token.value == \"var\")) {\n                    return qmlpropdef();\n                } else if (qml_is_element(propname) && !is(\"punc\", \".\")) {\n                    // Element\n                    var onProp;\n                    if (is(\"name\", \"on\")) {\n                        next();\n                        onProp = S.token.value;\n                        next();\n                    }\n                    return as(\"qmlelem\", propname, onProp, qmlblock());\n                } else {\n                    // property statement\n                    if (is(\"punc\", \".\")) {\n                        // anchors, fonts etc, a.b: statement;\n                        // Can also be Component.onCompleted: ...\n                        // Assume only one subproperty\n                        next();\n                        var subname = S.token.value;\n                        next();\n                        expect(\":\");\n                        S.in_function++;\n                        var from = S.token.pos,\n                            stat = statement(),\n                            to = S.token.pos;\n                        S.in_function--;\n                        return as(\"qmlobjdef\", propname, subname, stat,\n                            S.text.substr(from, to - from));\n                    } else if (is(\"punc\", \"{\")) {\n                        return as(\"qmlobj\", propname, qmlblock());\n                    } else {\n                        // Evaluatable item\n                        expect(\":\");\n                        S.in_function++;\n                        var from = S.token.pos,\n                            stat = statement(),\n                            to = S.token.pos;\n                        S.in_function--;\n                        return as(\"qmlprop\", propname, stat,\n                            S.text.substr(from, to - from));\n                    }\n                }\n            } else if (is(\"keyword\", \"default\")) {\n                return qmldefaultprop();\n            } else {\n                todo();\n            }\n        }\n\n        function qmlimport() {\n            // todo\n            next();\n            var moduleName = S.token.value;\n            var isDottedNotation = (S.token.type == \"name\");\n            next();\n            \n            while (is(\"punc\", \".\")) {\n                next();\n                moduleName += \".\" + S.token.value;\n                next();\n            }\n            if (is(\"num\")) {\n                var version = S.token.value\n                next();\n            }\n            var namespace = \"\";\n            if (is(\"name\", \"as\")) {\n                next();\n                namespace = S.token.value;\n                next();\n            }\n            return as(\"qmlimport\", moduleName, version, namespace, isDottedNotation);\n        }\n\n        function qmldocument() {\n            var imports = [];\n            while (is(\"name\", \"import\")) {\n                imports.push(qmlimport());\n            }\n            var root = qmlstatement();\n            if (!is(\"eof\"))\n                unexpected();\n\n            return as(\"toplevel\", imports, root);\n        }\n\n        function amIn(s) {\n            console && console.log(s, clone(S), S.token.type, S.token.value);\n        }\n        function todo() {\n            amIn(\"todo parse:\");\n            next();\n        }\n\n        return qmldocument();\n\n};\n\n/* -----[ Utilities ]----- */\n\nfunction curry(f) {\n        var args = slice(arguments, 1);\n        return function() { return f.apply(this, args.concat(slice(arguments))); };\n};\n\nfunction prog1(ret) {\n        if (ret instanceof Function)\n                ret = ret();\n        for (var i = 1, n = arguments.length; --n > 0; ++i)\n                arguments[i]();\n        return ret;\n};\n\nfunction array_to_hash(a) {\n        var ret = {};\n        for (var i = 0; i < a.length; ++i)\n                ret[a[i]] = true;\n        return ret;\n};\n\nfunction slice(a, start) {\n        return Array.prototype.slice.call(a, start == null ? 0 : start);\n};\n\nfunction characters(str) {\n        return str.split(\"\");\n};\n\nfunction member(name, array) {\n        for (var i = array.length; --i >= 0;)\n                if (array[i] === name)\n                        return true;\n        return false;\n};\n\nfunction HOP(obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\nvar warn = function() {};\n\nQMLMethod.prototype = new QMLBinding();\nfunction QMLMethod(src) {\n    this.src = src;\n}\n\n/**\n * Create an object representing a QML property definition.\n * @param {String} type The type of the property\n * @param {Array} value The default value of the property\n * @return {Object} Object representing the defintion\n */\nfunction QMLPropertyDefinition(type, value) {\n    this.type = type;\n    this.value = value;\n}\n\nfunction QMLAliasDefinition(objName, propName) {\n    this.objectName = objName;\n    this.propertyName = propName;\n}\n\n/**\n * Create an object representing a QML signal definition.\n * @param {Array} params The parameters the signal ships\n * @return {Object} Object representing the defintion\n */\nfunction QMLSignalDefinition(params) {\n    this.parameters = params;\n}\n\n/**\n * Create an object representing a group of QML properties (like anchors).\n * @return {Object} Object representing the group\n */\nfunction QMLMetaPropertyGroup() {}\n\n/**\n * Create an object representing a QML element.\n * @param {String} type The type of the element\n * @param {String} onProp The name of the property specified with the \"on\" keyword\n */\nfunction QMLMetaElement(type, onProp) {\n    this.$class = type;\n    this.$children = [];\n    this.$on = onProp;\n}\n\n// Convert parser tree to the format understood by engine\nfunction convertToEngine(tree) {\n\n    // Help logger\n    function amIn(str, tree) {\n        console.log(str);\n        if (tree) console.log(JSON.stringify(tree, null, \"  \"));\n    }\n\n    var walkers = {\n        \"toplevel\": function(imports, statement) {\n            var item = { $class: \"QMLDocument\" };\n            item.$imports = imports;\n            item.$children = [ walk(statement) ];\n            return item;\n        },\n        \"qmlelem\": function(elem, onProp, statements) {\n            var item = new QMLMetaElement(elem, onProp);\n\n            for (var i in statements) {\n                var statement = statements[i],\n                    name = statement[1],\n                    val = walk(statement);\n                switch (statement[0]) {\n                    case \"qmldefaultprop\":\n                        item.$defaultProperty = name;\n                    case \"qmlprop\":\n                    case \"qmlpropdef\":\n                    case \"qmlaliasdef\":\n                    case \"qmlmethod\":\n                    case \"qmlsignaldef\":\n                        item[name] = val;\n                        break;\n                    case \"qmlelem\":\n                        item.$children.push(val);\n                        break;\n                    case \"qmlobjdef\":\n                        // Create object to item\n                        item[name] = item[name] || new QMLMetaPropertyGroup();\n                        item[name][statement[2]] = val;\n                        break;\n                    case \"qmlobj\":\n                        // Create object to item\n                        item[name] = item[name] || new QMLMetaPropertyGroup();\n                        for (var i in val)\n                            item[name][i] = val[i];\n                        break;\n                    default:\n                        console.log(\"Unknown statement\", statement);\n\n                }\n            }\n            // Make $children be either a single item or an array, if it's more than one\n            if (item.$children.length === 1)\n                item.$children = item.$children[0];\n\n            return item;\n        },\n        \"qmlprop\": function(name, tree, src) {\n            if (name == \"id\") {\n                // id property\n                return tree[1][1];\n            }\n            return bindout(tree, src);\n        },\n        \"qmlobjdef\": function(name, property, tree, src) {\n            return bindout(tree, src);\n        },\n        \"qmlobj\": function(elem, statements) {\n            var item = {};\n\n            for (var i in statements) {\n                var statement = statements[i],\n                    name = statement[1],\n                    val = walk(statement);\n                if (statement[0] == \"qmlprop\")\n                    item[name] = val;\n            }\n\n            return item;\n        },\n        \"qmlmethod\": function(name, tree, src) {\n            return new QMLMethod(src);\n        },\n        \"qmlpropdef\": function(name, type, tree, src) {\n            return new QMLPropertyDefinition(type, tree ? bindout(tree, src) : \"\");\n        },\n        \"qmlaliasdef\": function(name, objName, propName) {\n            return new QMLAliasDefinition(objName, propName);\n        },\n        \"qmlsignaldef\": function(name, params) {\n            return new QMLSignalDefinition(params);\n        },\n        \"qmldefaultprop\": function(tree) {\n            return walk(tree);\n        },\n        \"name\": function(src) {\n            if (src == \"true\" || src == \"false\")\n                return src == \"true\";\n            return new QMLBinding(src, [\"name\", src]);\n        },\n        \"num\": function(src) {\n            return +src;\n        },\n        \"string\": function(src) {\n            return String(src);\n        },\n        \"array\": function(tree, src) {\n            var a = [];\n            var isList = false;\n            var hasBinding = false;\n            for (var i in tree) {\n                var val = bindout(tree[i]);\n                a.push(val);\n\n                if (val instanceof QMLMetaElement)\n                    isList = true;\n                else if (val instanceof QMLBinding)\n                    hasBinding = true;\n            }\n\n            if (hasBinding) {\n                if (isList)\n                    throw new TypeError(\"An array may either contain bindings or Element definitions.\");\n                return new QMLBinding(src, tree);\n            }\n\n            return a;\n        }\n    };\n\n    function walk(tree) {\n        var type = tree[0];\n        var walker = walkers[type];\n        if (!walker) {\n            console.log(\"No walker for \" + type);\n            return;\n        } else {\n            return walker.apply(type, tree.slice(1));\n        }\n    }\n\n    return walk(tree);\n\n    // Try to bind out tree and return static variable instead of binding\n    function bindout(tree, binding) {\n        if (tree[0] === \"stat\") // We want to process the content of the statement\n            tree = tree[1];     // (but still handle the case, we get the content directly)\n        var type = tree[0];\n        var walker = walkers[type];\n        if (walker) {\n            return walker.apply(type, tree.slice(1));\n        } else {\n            return new QMLBinding(binding, tree);\n        }\n    }\n\n}\n\n// Function to parse qml and output tree expected by engine\nfunction parseQML(src) {\n    var parsetree = qmlparse(src);\n    return convertToEngine(parsetree);\n}\n\nif (typeof global != \"undefined\") {\n  global.qmlparse = qmlparse;\n}\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n\n  This version is suitable for Node.js.  With minimal changes (the\n  exports stuff) it should work on any JS platform.\n\n  This file implements some AST processors.  They work on data built\n  by parse-js.\n\n  Exported functions:\n\n    - ast_mangle(ast, options) -- mangles the variable/function names\n      in the AST.  Returns an AST.\n\n    - ast_squeeze(ast) -- employs various optimizations to make the\n      final generated code even smaller.  Returns an AST.\n\n    - gen_code(ast, options) -- generates JS code from the AST.  Pass\n      true (or an object, see the code for some options) as second\n      argument to get \"pretty\" (indented) code.\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2011 (c) Lauri Paimen <lauri@paimen.info>\n    Copyright 2010 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n/*\n * Based on Javascript parser written by Mihai Bazon for UglifyJS project.\n * That, again, is a port of Javascript parser by Marijn Haverbeke.\n * Big thanks to both of you (and others involved)!\n * UglifyJS: https://github.com/mishoo/UglifyJS\n * Marijn's parser: http://marijn.haverbeke.nl/parse-js/\n *\n * The primary goal of this file is to offer QML parsing *on top of UglifyJS\n * parser* and to change Javascript parts as little as possible. If you find\n * bugs/improvements to Javascript parsing parts, check if those are fixed to\n * UglifyJS parser first. If not, fix them there. After UglifyJS has been fixed,\n * backport the changes to this file. Less changes to Javascript, more easy it\n * will be to keep up with UglifyJS.\n * Ultimately it would be great to keep the original parser and QML additions in\n * different files but the structure of code does not support that.\n */\n\n/*\nvar jsp = require(\"./parse-js\"),\n    slice = jsp.slice,\n    member = jsp.member,\n    PRECEDENCE = jsp.PRECEDENCE,\n    OPERATORS = jsp.OPERATORS;\n*/\n\n/* -----[ helper for AST traversal ]----- */\n\nfunction ast_walker(ast) {\n        function _vardefs(defs) {\n                return [ this[0], MAP(defs, function(def){\n                        var a = [ def[0] ];\n                        if (def.length > 1)\n                                a[1] = walk(def[1]);\n                        return a;\n                }) ];\n        };\n        function _block(statements) {\n                var out = [ this[0] ];\n                if (statements != null)\n                        out.push(MAP(statements, walk));\n                return out;\n        };\n        var walkers = {\n                \"string\": function(str) {\n                        return [ this[0], str ];\n                },\n                \"num\": function(num) {\n                        return [ this[0], num ];\n                },\n                \"name\": function(name) {\n                        return [ this[0], name ];\n                },\n                \"toplevel\": function(statements) {\n                        return [ this[0], MAP(statements, walk) ];\n                },\n                \"block\": _block,\n                \"splice\": _block,\n                \"var\": _vardefs,\n                \"const\": _vardefs,\n                \"try\": function(t, c, f) {\n                        return [\n                                this[0],\n                                MAP(t, walk),\n                                c != null ? [ c[0], MAP(c[1], walk) ] : null,\n                                f != null ? MAP(f, walk) : null\n                        ];\n                },\n                \"throw\": function(expr) {\n                        return [ this[0], walk(expr) ];\n                },\n                \"new\": function(ctor, args) {\n                        return [ this[0], walk(ctor), MAP(args, walk) ];\n                },\n                \"switch\": function(expr, body) {\n                        return [ this[0], walk(expr), MAP(body, function(branch){\n                                return [ branch[0] ? walk(branch[0]) : null,\n                                         MAP(branch[1], walk) ];\n                        }) ];\n                },\n                \"break\": function(label) {\n                        return [ this[0], label ];\n                },\n                \"continue\": function(label) {\n                        return [ this[0], label ];\n                },\n                \"conditional\": function(cond, t, e) {\n                        return [ this[0], walk(cond), walk(t), walk(e) ];\n                },\n                \"assign\": function(op, lvalue, rvalue) {\n                        return [ this[0], op, walk(lvalue), walk(rvalue) ];\n                },\n                \"dot\": function(expr) {\n                        return [ this[0], walk(expr) ].concat(slice(arguments, 1));\n                },\n                \"call\": function(expr, args) {\n                        return [ this[0], walk(expr), MAP(args, walk) ];\n                },\n                \"function\": function(name, args, body) {\n                        return [ this[0], name, args.slice(), MAP(body, walk) ];\n                },\n                \"defun\": function(name, args, body) {\n                        return [ this[0], name, args.slice(), MAP(body, walk) ];\n                },\n                \"if\": function(conditional, t, e) {\n                        return [ this[0], walk(conditional), walk(t), walk(e) ];\n                },\n                \"for\": function(init, cond, step, block) {\n                        return [ this[0], walk(init), walk(cond), walk(step), walk(block) ];\n                },\n                \"for-in\": function(vvar, key, hash, block) {\n                        return [ this[0], walk(vvar), walk(key), walk(hash), walk(block) ];\n                },\n                \"while\": function(cond, block) {\n                        return [ this[0], walk(cond), walk(block) ];\n                },\n                \"do\": function(cond, block) {\n                        return [ this[0], walk(cond), walk(block) ];\n                },\n                \"return\": function(expr) {\n                        return [ this[0], walk(expr) ];\n                },\n                \"binary\": function(op, left, right) {\n                        return [ this[0], op, walk(left), walk(right) ];\n                },\n                \"unary-prefix\": function(op, expr) {\n                        return [ this[0], op, walk(expr) ];\n                },\n                \"unary-postfix\": function(op, expr) {\n                        return [ this[0], op, walk(expr) ];\n                },\n                \"sub\": function(expr, subscript) {\n                        return [ this[0], walk(expr), walk(subscript) ];\n                },\n                \"object\": function(props) {\n                        return [ this[0], MAP(props, function(p){\n                                return p.length == 2\n                                        ? [ p[0], walk(p[1]) ]\n                                        : [ p[0], walk(p[1]), p[2] ]; // get/set-ter\n                        }) ];\n                },\n                \"regexp\": function(rx, mods) {\n                        return [ this[0], rx, mods ];\n                },\n                \"array\": function(elements) {\n                        return [ this[0], MAP(elements, walk) ];\n                },\n                \"stat\": function(stat) {\n                        return [ this[0], walk(stat) ];\n                },\n                \"seq\": function() {\n                        return [ this[0] ].concat(MAP(slice(arguments), walk));\n                },\n                \"label\": function(name, block) {\n                        return [ this[0], name, walk(block) ];\n                },\n                \"with\": function(expr, block) {\n                        return [ this[0], walk(expr), walk(block) ];\n                },\n                \"atom\": function(name) {\n                        return [ this[0], name ];\n                }\n        };\n\n        var user = {};\n        var stack = [];\n        function walk(ast) {\n                if (ast == null)\n                        return null;\n                try {\n                        stack.push(ast);\n                        var type = ast[0];\n                        var gen = user[type];\n                        if (gen) {\n                                var ret = gen.apply(ast, ast.slice(1));\n                                if (ret != null)\n                                        return ret;\n                        }\n                        gen = walkers[type];\n                        return gen.apply(ast, ast.slice(1));\n                } finally {\n                        stack.pop();\n                }\n        };\n\n        function with_walkers(walkers, cont){\n                var save = {}, i;\n                for (i in walkers) if (HOP(walkers, i)) {\n                        save[i] = user[i];\n                        user[i] = walkers[i];\n                }\n                var ret = cont();\n                for (i in save) if (HOP(save, i)) {\n                        if (!save[i]) delete user[i];\n                        else user[i] = save[i];\n                }\n                return ret;\n        };\n\n        return {\n                walk: walk,\n                with_walkers: with_walkers,\n                parent: function() {\n                        return stack[stack.length - 2]; // last one is current node\n                },\n                stack: function() {\n                        return stack;\n                }\n        };\n};\n\n/* -----[ Scope and mangling ]----- */\n\nfunction Scope(parent) {\n        this.names = {};        // names defined in this scope\n        this.mangled = {};      // mangled names (orig.name => mangled)\n        this.rev_mangled = {};  // reverse lookup (mangled => orig.name)\n        this.cname = -1;        // current mangled name\n        this.refs = {};         // names referenced from this scope\n        this.uses_with = false; // will become TRUE if with() is detected in this or any subscopes\n        this.uses_eval = false; // will become TRUE if eval() is detected in this or any subscopes\n        this.parent = parent;   // parent scope\n        this.children = [];     // sub-scopes\n        if (parent) {\n                this.level = parent.level + 1;\n                parent.children.push(this);\n        } else {\n                this.level = 0;\n        }\n};\n\nvar base54 = (function(){\n        var DIGITS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_\";\n        return function(num) {\n                var ret = \"\";\n                do {\n                        ret = DIGITS.charAt(num % 54) + ret;\n                        num = Math.floor(num / 54);\n                } while (num > 0);\n                return ret;\n        };\n})();\n\nScope.prototype = {\n        has: function(name) {\n                for (var s = this; s; s = s.parent)\n                        if (HOP(s.names, name))\n                                return s;\n        },\n        has_mangled: function(mname) {\n                for (var s = this; s; s = s.parent)\n                        if (HOP(s.rev_mangled, mname))\n                                return s;\n        },\n        toJSON: function() {\n                return {\n                        names: this.names,\n                        uses_eval: this.uses_eval,\n                        uses_with: this.uses_with\n                };\n        },\n\n        next_mangled: function() {\n                // we must be careful that the new mangled name:\n                //\n                // 1. doesn't shadow a mangled name from a parent\n                //    scope, unless we don't reference the original\n                //    name from this scope OR from any sub-scopes!\n                //    This will get slow.\n                //\n                // 2. doesn't shadow an original name from a parent\n                //    scope, in the event that the name is not mangled\n                //    in the parent scope and we reference that name\n                //    here OR IN ANY SUBSCOPES!\n                //\n                // 3. doesn't shadow a name that is referenced but not\n                //    defined (possibly global defined elsewhere).\n                for (;;) {\n                        var m = base54(++this.cname), prior;\n\n                        // case 1.\n                        prior = this.has_mangled(m);\n                        if (prior && this.refs[prior.rev_mangled[m]] === prior)\n                                continue;\n\n                        // case 2.\n                        prior = this.has(m);\n                        if (prior && prior !== this && this.refs[m] === prior && !prior.has_mangled(m))\n                                continue;\n\n                        // case 3.\n                        if (HOP(this.refs, m) && this.refs[m] == null)\n                                continue;\n\n                        // I got \"do\" once. :-/\n                        if (!is_identifier(m))\n                                continue;\n\n                        return m;\n                }\n        },\n        set_mangle: function(name, m) {\n                this.rev_mangled[m] = name;\n                return this.mangled[name] = m;\n        },\n        get_mangled: function(name, newMangle) {\n                if (this.uses_eval || this.uses_with) return name; // no mangle if eval or with is in use\n                var s = this.has(name);\n                if (!s) return name; // not in visible scope, no mangle\n                if (HOP(s.mangled, name)) return s.mangled[name]; // already mangled in this scope\n                if (!newMangle) return name;                      // not found and no mangling requested\n                return s.set_mangle(name, s.next_mangled());\n        },\n        references: function(name) {\n                return name && !this.parent || this.uses_with || this.uses_eval || this.refs[name];\n        },\n        define: function(name, type) {\n                if (name != null) {\n                        if (type == \"var\" || !HOP(this.names, name))\n                                this.names[name] = type || \"var\";\n                        return name;\n                }\n        }\n};\n\nfunction ast_add_scope(ast) {\n\n        var current_scope = null;\n        var w = ast_walker(), walk = w.walk;\n        var having_eval = [];\n\n        function with_new_scope(cont) {\n                current_scope = new Scope(current_scope);\n                var ret = current_scope.body = cont();\n                ret.scope = current_scope;\n                current_scope = current_scope.parent;\n                return ret;\n        };\n\n        function define(name, type) {\n                return current_scope.define(name, type);\n        };\n\n        function reference(name) {\n                current_scope.refs[name] = true;\n        };\n\n        function _lambda(name, args, body) {\n                var is_defun = this[0] == \"defun\";\n                return [ this[0], is_defun ? define(name, \"defun\") : name, args, with_new_scope(function(){\n                        if (!is_defun) define(name, \"lambda\");\n                        MAP(args, function(name){ define(name, \"arg\") });\n                        return MAP(body, walk);\n                })];\n        };\n\n        function _vardefs(type) {\n                return function(defs) {\n                        MAP(defs, function(d){\n                                define(d[0], type);\n                                if (d[1]) reference(d[0]);\n                        });\n                };\n        };\n\n        return with_new_scope(function(){\n                // process AST\n                var ret = w.with_walkers({\n                        \"function\": _lambda,\n                        \"defun\": _lambda,\n                        \"label\": function(name, stat) { define(name, \"label\") },\n                        \"break\": function(label) { if (label) reference(label) },\n                        \"continue\": function(label) { if (label) reference(label) },\n                        \"with\": function(expr, block) {\n                                for (var s = current_scope; s; s = s.parent)\n                                        s.uses_with = true;\n                        },\n                        \"var\": _vardefs(\"var\"),\n                        \"const\": _vardefs(\"const\"),\n                        \"try\": function(t, c, f) {\n                                if (c != null) return [\n                                        this[0],\n                                        MAP(t, walk),\n                                        [ define(c[0], \"catch\"), MAP(c[1], walk) ],\n                                        f != null ? MAP(f, walk) : null\n                                ];\n                        },\n                        \"name\": function(name) {\n                                if (name == \"eval\")\n                                        having_eval.push(current_scope);\n                                reference(name);\n                        }\n                }, function(){\n                        return walk(ast);\n                });\n\n                // the reason why we need an additional pass here is\n                // that names can be used prior to their definition.\n\n                // scopes where eval was detected and their parents\n                // are marked with uses_eval, unless they define the\n                // \"eval\" name.\n                MAP(having_eval, function(scope){\n                        if (!scope.has(\"eval\")) while (scope) {\n                                scope.uses_eval = true;\n                                scope = scope.parent;\n                        }\n                });\n\n                // for referenced names it might be useful to know\n                // their origin scope.  current_scope here is the\n                // toplevel one.\n                function fixrefs(scope, i) {\n                        // do children first; order shouldn't matter\n                        for (i = scope.children.length; --i >= 0;)\n                                fixrefs(scope.children[i]);\n                        for (i in scope.refs) if (HOP(scope.refs, i)) {\n                                // find origin scope and propagate the reference to origin\n                                for (var origin = scope.has(i), s = scope; s; s = s.parent) {\n                                        s.refs[i] = origin;\n                                        if (s === origin) break;\n                                }\n                        }\n                };\n                fixrefs(current_scope);\n\n                return ret;\n        });\n\n};\n\n/* -----[ mangle names ]----- */\n\nfunction ast_mangle(ast, options) {\n        var w = ast_walker(), walk = w.walk, scope;\n        options = options || {};\n\n        function get_mangled(name, newMangle) {\n                if (!options.toplevel && !scope.parent) return name; // don't mangle toplevel\n                if (options.except && member(name, options.except))\n                        return name;\n                return scope.get_mangled(name, newMangle);\n        };\n\n        function get_define(name) {\n                if (options.defines) {\n                        // we always lookup a defined symbol for the current scope FIRST, so declared\n                        // vars trump a DEFINE symbol, but if no such var is found, then match a DEFINE value\n                        if (!scope.has(name)) {\n                                if (HOP(options.defines, name)) {\n                                        return options.defines[name];\n                                }\n                        }\n                        return null;\n                }\n        };\n\n        function _lambda(name, args, body) {\n                var is_defun = this[0] == \"defun\", extra;\n                if (name) {\n                        if (is_defun) name = get_mangled(name);\n                        else {\n                                extra = {};\n                                if (!(scope.uses_eval || scope.uses_with))\n                                        name = extra[name] = scope.next_mangled();\n                                else\n                                        extra[name] = name;\n                        }\n                }\n                body = with_scope(body.scope, function(){\n                        args = MAP(args, function(name){ return get_mangled(name) });\n                        return MAP(body, walk);\n                }, extra);\n                return [ this[0], name, args, body ];\n        };\n\n        function with_scope(s, cont, extra) {\n                var _scope = scope;\n                scope = s;\n                if (extra) for (var i in extra) if (HOP(extra, i)) {\n                        s.set_mangle(i, extra[i]);\n                }\n                for (var i in s.names) if (HOP(s.names, i)) {\n                        get_mangled(i, true);\n                }\n                var ret = cont();\n                ret.scope = s;\n                scope = _scope;\n                return ret;\n        };\n\n        function _vardefs(defs) {\n                return [ this[0], MAP(defs, function(d){\n                        return [ get_mangled(d[0]), walk(d[1]) ];\n                }) ];\n        };\n\n        return w.with_walkers({\n                \"function\": _lambda,\n                \"defun\": function() {\n                        // move function declarations to the top when\n                        // they are not in some block.\n                        var ast = _lambda.apply(this, arguments);\n                        switch (w.parent()[0]) {\n                            case \"toplevel\":\n                            case \"function\":\n                            case \"defun\":\n                                return MAP.at_top(ast);\n                        }\n                        return ast;\n                },\n                \"label\": function(label, stat) { return [ this[0], get_mangled(label), walk(stat) ] },\n                \"break\": function(label) { if (label) return [ this[0], get_mangled(label) ] },\n                \"continue\": function(label) { if (label) return [ this[0], get_mangled(label) ] },\n                \"var\": _vardefs,\n                \"const\": _vardefs,\n                \"name\": function(name) {\n                        return get_define(name) || [ this[0], get_mangled(name) ];\n                },\n                \"try\": function(t, c, f) {\n                        return [ this[0],\n                                 MAP(t, walk),\n                                 c != null ? [ get_mangled(c[0]), MAP(c[1], walk) ] : null,\n                                 f != null ? MAP(f, walk) : null ];\n                },\n                \"toplevel\": function(body) {\n                        var self = this;\n                        return with_scope(self.scope, function(){\n                                return [ self[0], MAP(body, walk) ];\n                        });\n                }\n        }, function() {\n                return walk(ast_add_scope(ast));\n        });\n};\n\n/* -----[\n   - compress foo[\"bar\"] into foo.bar,\n   - remove block brackets {} where possible\n   - join consecutive var declarations\n   - various optimizations for IFs:\n     - if (cond) foo(); else bar();  ==>  cond?foo():bar();\n     - if (cond) foo();  ==>  cond&&foo();\n     - if (foo) return bar(); else return baz();  ==> return foo?bar():baz(); // also for throw\n     - if (foo) return bar(); else something();  ==> {if(foo)return bar();something()}\n   ]----- */\n\nvar warn = function(){};\n\nfunction best_of(ast1, ast2) {\n        return gen_code(ast1).length > gen_code(ast2[0] == \"stat\" ? ast2[1] : ast2).length ? ast2 : ast1;\n};\n\nfunction last_stat(b) {\n        if (b[0] == \"block\" && b[1] && b[1].length > 0)\n                return b[1][b[1].length - 1];\n        return b;\n}\n\nfunction aborts(t) {\n        if (t) switch (last_stat(t)[0]) {\n            case \"return\":\n            case \"break\":\n            case \"continue\":\n            case \"throw\":\n                return true;\n        }\n};\n\nfunction boolean_expr(expr) {\n        return ( (expr[0] == \"unary-prefix\"\n                  && member(expr[1], [ \"!\", \"delete\" ])) ||\n\n                 (expr[0] == \"binary\"\n                  && member(expr[1], [ \"in\", \"instanceof\", \"==\", \"!=\", \"===\", \"!==\", \"<\", \"<=\", \">=\", \">\" ])) ||\n\n                 (expr[0] == \"binary\"\n                  && member(expr[1], [ \"&&\", \"||\" ])\n                  && boolean_expr(expr[2])\n                  && boolean_expr(expr[3])) ||\n\n                 (expr[0] == \"conditional\"\n                  && boolean_expr(expr[2])\n                  && boolean_expr(expr[3])) ||\n\n                 (expr[0] == \"assign\"\n                  && expr[1] === true\n                  && boolean_expr(expr[3])) ||\n\n                 (expr[0] == \"seq\"\n                  && boolean_expr(expr[expr.length - 1]))\n               );\n};\n\nfunction make_conditional(c, t, e) {\n    var make_real_conditional = function() {\n        if (c[0] == \"unary-prefix\" && c[1] == \"!\") {\n            return e ? [ \"conditional\", c[2], e, t ] : [ \"binary\", \"||\", c[2], t ];\n        } else {\n            return e ? [ \"conditional\", c, t, e ] : [ \"binary\", \"&&\", c, t ];\n        }\n    };\n    // shortcut the conditional if the expression has a constant value\n    return when_constant(c, function(ast, val){\n        warn_unreachable(val ? e : t);\n        return          (val ? t : e);\n    }, make_real_conditional);\n};\n\nfunction empty(b) {\n        return !b || (b[0] == \"block\" && (!b[1] || b[1].length == 0));\n};\n\nfunction is_string(node) {\n        return (node[0] == \"string\" ||\n                node[0] == \"unary-prefix\" && node[1] == \"typeof\" ||\n                node[0] == \"binary\" && node[1] == \"+\" &&\n                (is_string(node[2]) || is_string(node[3])));\n};\n\nvar when_constant = (function(){\n\n        var $NOT_CONSTANT = {};\n\n        // this can only evaluate constant expressions.  If it finds anything\n        // not constant, it throws $NOT_CONSTANT.\n        function evaluate(expr) {\n                switch (expr[0]) {\n                    case \"string\":\n                    case \"num\":\n                        return expr[1];\n                    case \"name\":\n                    case \"atom\":\n                        switch (expr[1]) {\n                            case \"true\": return true;\n                            case \"false\": return false;\n                        }\n                        break;\n                    case \"unary-prefix\":\n                        switch (expr[1]) {\n                            case \"!\": return !evaluate(expr[2]);\n                            case \"typeof\": return typeof evaluate(expr[2]);\n                            case \"~\": return ~evaluate(expr[2]);\n                            case \"-\": return -evaluate(expr[2]);\n                            case \"+\": return +evaluate(expr[2]);\n                        }\n                        break;\n                    case \"binary\":\n                        var left = expr[2], right = expr[3];\n                        switch (expr[1]) {\n                            case \"&&\"         : return evaluate(left) &&         evaluate(right);\n                            case \"||\"         : return evaluate(left) ||         evaluate(right);\n                            case \"|\"          : return evaluate(left) |          evaluate(right);\n                            case \"&\"          : return evaluate(left) &          evaluate(right);\n                            case \"^\"          : return evaluate(left) ^          evaluate(right);\n                            case \"+\"          : return evaluate(left) +          evaluate(right);\n                            case \"*\"          : return evaluate(left) *          evaluate(right);\n                            case \"/\"          : return evaluate(left) /          evaluate(right);\n                            case \"-\"          : return evaluate(left) -          evaluate(right);\n                            case \"<<\"         : return evaluate(left) <<         evaluate(right);\n                            case \">>\"         : return evaluate(left) >>         evaluate(right);\n                            case \">>>\"        : return evaluate(left) >>>        evaluate(right);\n                            case \"==\"         : return evaluate(left) ==         evaluate(right);\n                            case \"===\"        : return evaluate(left) ===        evaluate(right);\n                            case \"!=\"         : return evaluate(left) !=         evaluate(right);\n                            case \"!==\"        : return evaluate(left) !==        evaluate(right);\n                            case \"<\"          : return evaluate(left) <          evaluate(right);\n                            case \"<=\"         : return evaluate(left) <=         evaluate(right);\n                            case \">\"          : return evaluate(left) >          evaluate(right);\n                            case \">=\"         : return evaluate(left) >=         evaluate(right);\n                            case \"in\"         : return evaluate(left) in         evaluate(right);\n                            case \"instanceof\" : return evaluate(left) instanceof evaluate(right);\n                        }\n                }\n                throw $NOT_CONSTANT;\n        };\n\n        return function(expr, yes, no) {\n                try {\n                        var val = evaluate(expr), ast;\n                        switch (typeof val) {\n                            case \"string\": ast =  [ \"string\", val ]; break;\n                            case \"number\": ast =  [ \"num\", val ]; break;\n                            case \"boolean\": ast =  [ \"name\", String(val) ]; break;\n                            default: throw new Error(\"Can't handle constant of type: \" + (typeof val));\n                        }\n                        return yes.call(expr, ast, val);\n                } catch(ex) {\n                        if (ex === $NOT_CONSTANT) {\n                                if (expr[0] == \"binary\"\n                                    && (expr[1] == \"===\" || expr[1] == \"!==\")\n                                    && ((is_string(expr[2]) && is_string(expr[3]))\n                                        || (boolean_expr(expr[2]) && boolean_expr(expr[3])))) {\n                                        expr[1] = expr[1].substr(0, 2);\n                                }\n                                else if (no && expr[0] == \"binary\"\n                                         && (expr[1] == \"||\" || expr[1] == \"&&\")) {\n                                    // the whole expression is not constant but the lval may be...\n                                    try {\n                                        var lval = evaluate(expr[2]);\n                                        expr = ((expr[1] == \"&&\" && (lval ? expr[3] : lval))    ||\n                                                (expr[1] == \"||\" && (lval ? lval    : expr[3])) ||\n                                                expr);\n                                    } catch(ex2) {\n                                        // IGNORE... lval is not constant\n                                    }\n                                }\n                                return no ? no.call(expr, expr) : null;\n                        }\n                        else throw ex;\n                }\n        };\n\n})();\n\nfunction warn_unreachable(ast) {\n        if (!empty(ast))\n                warn(\"Dropping unreachable code: \" + gen_code(ast, true));\n};\n\nfunction prepare_ifs(ast) {\n        var w = ast_walker(), walk = w.walk;\n        // In this first pass, we rewrite ifs which abort with no else with an\n        // if-else.  For example:\n        //\n        // if (x) {\n        //     blah();\n        //     return y;\n        // }\n        // foobar();\n        //\n        // is rewritten into:\n        //\n        // if (x) {\n        //     blah();\n        //     return y;\n        // } else {\n        //     foobar();\n        // }\n        function redo_if(statements) {\n                statements = MAP(statements, walk);\n\n                for (var i = 0; i < statements.length; ++i) {\n                        var fi = statements[i];\n                        if (fi[0] != \"if\") continue;\n\n                        if (fi[3] && walk(fi[3])) continue;\n\n                        var t = walk(fi[2]);\n                        if (!aborts(t)) continue;\n\n                        var conditional = walk(fi[1]);\n\n                        var e_body = statements.slice(i + 1);\n                        var e = e_body.length == 1 ? e_body[0] : [ \"block\", e_body ];\n\n                        var ret = statements.slice(0, i).concat([ [\n                                fi[0],          // \"if\"\n                                conditional,    // conditional\n                                t,              // then\n                                e               // else\n                        ] ]);\n\n                        return redo_if(ret);\n                }\n\n                return statements;\n        };\n\n        function redo_if_lambda(name, args, body) {\n                body = redo_if(body);\n                return [ this[0], name, args, body ];\n        };\n\n        function redo_if_block(statements) {\n                return [ this[0], statements != null ? redo_if(statements) : null ];\n        };\n\n        return w.with_walkers({\n                \"defun\": redo_if_lambda,\n                \"function\": redo_if_lambda,\n                \"block\": redo_if_block,\n                \"splice\": redo_if_block,\n                \"toplevel\": function(statements) {\n                        return [ this[0], redo_if(statements) ];\n                },\n                \"try\": function(t, c, f) {\n                        return [\n                                this[0],\n                                redo_if(t),\n                                c != null ? [ c[0], redo_if(c[1]) ] : null,\n                                f != null ? redo_if(f) : null\n                        ];\n                }\n        }, function() {\n                return walk(ast);\n        });\n};\n\nfunction for_side_effects(ast, handler) {\n        var w = ast_walker(), walk = w.walk;\n        var $stop = {}, $restart = {};\n        function stop() { throw $stop };\n        function restart() { throw $restart };\n        function found(){ return handler.call(this, this, w, stop, restart) };\n        function unary(op) {\n                if (op == \"++\" || op == \"--\")\n                        return found.apply(this, arguments);\n        };\n        return w.with_walkers({\n                \"try\": found,\n                \"throw\": found,\n                \"return\": found,\n                \"new\": found,\n                \"switch\": found,\n                \"break\": found,\n                \"continue\": found,\n                \"assign\": found,\n                \"call\": found,\n                \"if\": found,\n                \"for\": found,\n                \"for-in\": found,\n                \"while\": found,\n                \"do\": found,\n                \"return\": found,\n                \"unary-prefix\": unary,\n                \"unary-postfix\": unary,\n                \"defun\": found\n        }, function(){\n                while (true) try {\n                        walk(ast);\n                        break;\n                } catch(ex) {\n                        if (ex === $stop) break;\n                        if (ex === $restart) continue;\n                        throw ex;\n                }\n        });\n};\n\nfunction ast_lift_variables(ast) {\n        var w = ast_walker(), walk = w.walk, scope;\n        function do_body(body, env) {\n                var _scope = scope;\n                scope = env;\n                body = MAP(body, walk);\n                var hash = {}, names = MAP(env.names, function(type, name){\n                        if (type != \"var\") return MAP.skip;\n                        if (!env.references(name)) return MAP.skip;\n                        hash[name] = true;\n                        return [ name ];\n                });\n                if (names.length > 0) {\n                        // looking for assignments to any of these variables.\n                        // we can save considerable space by moving the definitions\n                        // in the var declaration.\n                        for_side_effects([ \"block\", body ], function(ast, walker, stop, restart) {\n                                if (ast[0] == \"assign\"\n                                    && ast[1] === true\n                                    && ast[2][0] == \"name\"\n                                    && HOP(hash, ast[2][1])) {\n                                        // insert the definition into the var declaration\n                                        for (var i = names.length; --i >= 0;) {\n                                                if (names[i][0] == ast[2][1]) {\n                                                        if (names[i][1]) // this name already defined, we must stop\n                                                                stop();\n                                                        names[i][1] = ast[3]; // definition\n                                                        names.push(names.splice(i, 1)[0]);\n                                                        break;\n                                                }\n                                        }\n                                        // remove this assignment from the AST.\n                                        var p = walker.parent();\n                                        if (p[0] == \"seq\") {\n                                                var a = p[2];\n                                                a.unshift(0, p.length);\n                                                p.splice.apply(p, a);\n                                        }\n                                        else if (p[0] == \"stat\") {\n                                                p.splice(0, p.length, \"block\"); // empty statement\n                                        }\n                                        else {\n                                                stop();\n                                        }\n                                        restart();\n                                }\n                                stop();\n                        });\n                        body.unshift([ \"var\", names ]);\n                }\n                scope = _scope;\n                return body;\n        };\n        function _vardefs(defs) {\n                var ret = null;\n                for (var i = defs.length; --i >= 0;) {\n                        var d = defs[i];\n                        if (!d[1]) continue;\n                        d = [ \"assign\", true, [ \"name\", d[0] ], d[1] ];\n                        if (ret == null) ret = d;\n                        else ret = [ \"seq\", d, ret ];\n                }\n                if (ret == null) {\n                        if (w.parent()[0] == \"for-in\")\n                                return [ \"name\", defs[0][0] ];\n                        return MAP.skip;\n                }\n                return [ \"stat\", ret ];\n        };\n        function _toplevel(body) {\n                return [ this[0], do_body(body, this.scope) ];\n        };\n        return w.with_walkers({\n                \"function\": function(name, args, body){\n                        for (var i = args.length; --i >= 0 && !body.scope.references(args[i]);)\n                                args.pop();\n                        if (!body.scope.references(name)) name = null;\n                        return [ this[0], name, args, do_body(body, body.scope) ];\n                },\n                \"defun\": function(name, args, body){\n                        if (!scope.references(name)) return MAP.skip;\n                        for (var i = args.length; --i >= 0 && !body.scope.references(args[i]);)\n                                args.pop();\n                        return [ this[0], name, args, do_body(body, body.scope) ];\n                },\n                \"var\": _vardefs,\n                \"toplevel\": _toplevel\n        }, function(){\n                return walk(ast_add_scope(ast));\n        });\n};\n\nfunction ast_squeeze(ast, options) {\n        options = defaults(options, {\n                make_seqs   : true,\n                dead_code   : true,\n                keep_comps  : true,\n                no_warnings : false\n        });\n\n        var w = ast_walker(), walk = w.walk, scope;\n\n        function negate(c) {\n                var not_c = [ \"unary-prefix\", \"!\", c ];\n                switch (c[0]) {\n                    case \"unary-prefix\":\n                        return c[1] == \"!\" && boolean_expr(c[2]) ? c[2] : not_c;\n                    case \"seq\":\n                        c = slice(c);\n                        c[c.length - 1] = negate(c[c.length - 1]);\n                        return c;\n                    case \"conditional\":\n                        return best_of(not_c, [ \"conditional\", c[1], negate(c[2]), negate(c[3]) ]);\n                    case \"binary\":\n                        var op = c[1], left = c[2], right = c[3];\n                        if (!options.keep_comps) switch (op) {\n                            case \"<=\"  : return [ \"binary\", \">\", left, right ];\n                            case \"<\"   : return [ \"binary\", \">=\", left, right ];\n                            case \">=\"  : return [ \"binary\", \"<\", left, right ];\n                            case \">\"   : return [ \"binary\", \"<=\", left, right ];\n                        }\n                        switch (op) {\n                            case \"==\"  : return [ \"binary\", \"!=\", left, right ];\n                            case \"!=\"  : return [ \"binary\", \"==\", left, right ];\n                            case \"===\" : return [ \"binary\", \"!==\", left, right ];\n                            case \"!==\" : return [ \"binary\", \"===\", left, right ];\n                            case \"&&\"  : return best_of(not_c, [ \"binary\", \"||\", negate(left), negate(right) ]);\n                            case \"||\"  : return best_of(not_c, [ \"binary\", \"&&\", negate(left), negate(right) ]);\n                        }\n                        break;\n                }\n                return not_c;\n        };\n\n        function with_scope(s, cont) {\n                var _scope = scope;\n                scope = s;\n                var ret = cont();\n                ret.scope = s;\n                scope = _scope;\n                return ret;\n        };\n\n        function rmblock(block) {\n                if (block != null && block[0] == \"block\" && block[1]) {\n                        if (block[1].length == 1)\n                                block = block[1][0];\n                        else if (block[1].length == 0)\n                                block = [ \"block\" ];\n                }\n                return block;\n        };\n\n        function _lambda(name, args, body) {\n                var is_defun = this[0] == \"defun\";\n                body = with_scope(body.scope, function(){\n                        var ret = tighten(body, \"lambda\");\n                        if (!is_defun && name && !scope.references(name))\n                                name = null;\n                        return ret;\n                });\n                return [ this[0], name, args, body ];\n        };\n\n        // this function does a few things:\n        // 1. discard useless blocks\n        // 2. join consecutive var declarations\n        // 3. remove obviously dead code\n        // 4. transform consecutive statements using the comma operator\n        // 5. if block_type == \"lambda\" and it detects constructs like if(foo) return ... - rewrite like if (!foo) { ... }\n        function tighten(statements, block_type) {\n                statements = MAP(statements, walk);\n\n                statements = statements.reduce(function(a, stat){\n                        if (stat[0] == \"block\") {\n                                if (stat[1]) {\n                                        a.push.apply(a, stat[1]);\n                                }\n                        } else {\n                                a.push(stat);\n                        }\n                        return a;\n                }, []);\n\n                statements = (function(a, prev){\n                        statements.forEach(function(cur){\n                                if (prev && ((cur[0] == \"var\" && prev[0] == \"var\") ||\n                                             (cur[0] == \"const\" && prev[0] == \"const\"))) {\n                                        prev[1] = prev[1].concat(cur[1]);\n                                } else {\n                                        a.push(cur);\n                                        prev = cur;\n                                }\n                        });\n                        return a;\n                })([]);\n\n                if (options.dead_code) statements = (function(a, has_quit){\n                        statements.forEach(function(st){\n                                if (has_quit) {\n                                        if (st[0] == \"function\" || st[0] == \"defun\") {\n                                                a.push(st);\n                                        }\n                                        else if (st[0] == \"var\" || st[0] == \"const\") {\n                                                if (!options.no_warnings)\n                                                        warn(\"Variables declared in unreachable code\");\n                                                st[1] = MAP(st[1], function(def){\n                                                        if (def[1] && !options.no_warnings)\n                                                                warn_unreachable([ \"assign\", true, [ \"name\", def[0] ], def[1] ]);\n                                                        return [ def[0] ];\n                                                });\n                                                a.push(st);\n                                        }\n                                        else if (!options.no_warnings)\n                                                warn_unreachable(st);\n                                }\n                                else {\n                                        a.push(st);\n                                        if (member(st[0], [ \"return\", \"throw\", \"break\", \"continue\" ]))\n                                                has_quit = true;\n                                }\n                        });\n                        return a;\n                })([]);\n\n                if (options.make_seqs) statements = (function(a, prev) {\n                        statements.forEach(function(cur){\n                                if (prev && prev[0] == \"stat\" && cur[0] == \"stat\") {\n                                        prev[1] = [ \"seq\", prev[1], cur[1] ];\n                                } else {\n                                        a.push(cur);\n                                        prev = cur;\n                                }\n                        });\n                        if (a.length >= 2\n                            && a[a.length-2][0] == \"stat\"\n                            && (a[a.length-1][0] == \"return\" || a[a.length-1][0] == \"throw\")\n                            && a[a.length-1][1])\n                        {\n                                a.splice(a.length - 2, 2,\n                                         [ a[a.length-1][0],\n                                           [ \"seq\", a[a.length-2][1], a[a.length-1][1] ]]);\n                        }\n                        return a;\n                })([]);\n\n                // this increases jQuery by 1K.  Probably not such a good idea after all..\n                // part of this is done in prepare_ifs anyway.\n                // if (block_type == \"lambda\") statements = (function(i, a, stat){\n                //         while (i < statements.length) {\n                //                 stat = statements[i++];\n                //                 if (stat[0] == \"if\" && !stat[3]) {\n                //                         if (stat[2][0] == \"return\" && stat[2][1] == null) {\n                //                                 a.push(make_if(negate(stat[1]), [ \"block\", statements.slice(i) ]));\n                //                                 break;\n                //                         }\n                //                         var last = last_stat(stat[2]);\n                //                         if (last[0] == \"return\" && last[1] == null) {\n                //                                 a.push(make_if(stat[1], [ \"block\", stat[2][1].slice(0, -1) ], [ \"block\", statements.slice(i) ]));\n                //                                 break;\n                //                         }\n                //                 }\n                //                 a.push(stat);\n                //         }\n                //         return a;\n                // })(0, []);\n\n                return statements;\n        };\n\n        function make_if(c, t, e) {\n                return when_constant(c, function(ast, val){\n                        if (val) {\n                                warn_unreachable(e);\n                                return t;\n                        } else {\n                                warn_unreachable(t);\n                                return e;\n                        }\n                }, function() {\n                        return make_real_if(c, t, e);\n                });\n        };\n\n        function make_real_if(c, t, e) {\n                c = walk(c);\n                t = walk(t);\n                e = walk(e);\n\n                if (empty(t)) {\n                        c = negate(c);\n                        t = e;\n                        e = null;\n                } else if (empty(e)) {\n                        e = null;\n                } else {\n                        // if we have both else and then, maybe it makes sense to switch them?\n                        (function(){\n                                var a = gen_code(c);\n                                var n = negate(c);\n                                var b = gen_code(n);\n                                if (b.length < a.length) {\n                                        var tmp = t;\n                                        t = e;\n                                        e = tmp;\n                                        c = n;\n                                }\n                        })();\n                }\n                if (empty(e) && empty(t))\n                        return [ \"stat\", c ];\n                var ret = [ \"if\", c, t, e ];\n                if (t[0] == \"if\" && empty(t[3]) && empty(e)) {\n                        ret = best_of(ret, walk([ \"if\", [ \"binary\", \"&&\", c, t[1] ], t[2] ]));\n                }\n                else if (t[0] == \"stat\") {\n                        if (e) {\n                                if (e[0] == \"stat\") {\n                                        ret = best_of(ret, [ \"stat\", make_conditional(c, t[1], e[1]) ]);\n                                }\n                        }\n                        else {\n                                ret = best_of(ret, [ \"stat\", make_conditional(c, t[1]) ]);\n                        }\n                }\n                else if (e && t[0] == e[0] && (t[0] == \"return\" || t[0] == \"throw\") && t[1] && e[1]) {\n                        ret = best_of(ret, [ t[0], make_conditional(c, t[1], e[1] ) ]);\n                }\n                else if (e && aborts(t)) {\n                        ret = [ [ \"if\", c, t ] ];\n                        if (e[0] == \"block\") {\n                                if (e[1]) ret = ret.concat(e[1]);\n                        }\n                        else {\n                                ret.push(e);\n                        }\n                        ret = walk([ \"block\", ret ]);\n                }\n                else if (t && aborts(e)) {\n                        ret = [ [ \"if\", negate(c), e ] ];\n                        if (t[0] == \"block\") {\n                                if (t[1]) ret = ret.concat(t[1]);\n                        } else {\n                                ret.push(t);\n                        }\n                        ret = walk([ \"block\", ret ]);\n                }\n                return ret;\n        };\n\n        function _do_while(cond, body) {\n                return when_constant(cond, function(cond, val){\n                        if (!val) {\n                                warn_unreachable(body);\n                                return [ \"block\" ];\n                        } else {\n                                return [ \"for\", null, null, null, walk(body) ];\n                        }\n                });\n        };\n\n        return w.with_walkers({\n                \"sub\": function(expr, subscript) {\n                        if (subscript[0] == \"string\") {\n                                var name = subscript[1];\n                                if (is_identifier(name))\n                                        return [ \"dot\", walk(expr), name ];\n                                else if (/^[1-9][0-9]*$/.test(name) || name === \"0\")\n                                        return [ \"sub\", walk(expr), [ \"num\", parseInt(name, 10) ] ];\n                        }\n                },\n                \"if\": make_if,\n                \"toplevel\": function(body) {\n                        return [ \"toplevel\", with_scope(this.scope, function(){\n                                return tighten(body);\n                        }) ];\n                },\n                \"switch\": function(expr, body) {\n                        var last = body.length - 1;\n                        return [ \"switch\", walk(expr), MAP(body, function(branch, i){\n                                var block = tighten(branch[1]);\n                                if (i == last && block.length > 0) {\n                                        var node = block[block.length - 1];\n                                        if (node[0] == \"break\" && !node[1])\n                                                block.pop();\n                                }\n                                return [ branch[0] ? walk(branch[0]) : null, block ];\n                        }) ];\n                },\n                \"function\": _lambda,\n                \"defun\": _lambda,\n                \"block\": function(body) {\n                        if (body) return rmblock([ \"block\", tighten(body) ]);\n                },\n                \"binary\": function(op, left, right) {\n                        return when_constant([ \"binary\", op, walk(left), walk(right) ], function yes(c){\n                                return best_of(walk(c), this);\n                        }, function no() {\n                                return this;\n                        });\n                },\n                \"conditional\": function(c, t, e) {\n                        return make_conditional(walk(c), walk(t), walk(e));\n                },\n                \"try\": function(t, c, f) {\n                        return [\n                                \"try\",\n                                tighten(t),\n                                c != null ? [ c[0], tighten(c[1]) ] : null,\n                                f != null ? tighten(f) : null\n                        ];\n                },\n                \"unary-prefix\": function(op, expr) {\n                        expr = walk(expr);\n                        var ret = [ \"unary-prefix\", op, expr ];\n                        if (op == \"!\")\n                                ret = best_of(ret, negate(expr));\n                        return when_constant(ret, function(ast, val){\n                                return walk(ast); // it's either true or false, so minifies to !0 or !1\n                        }, function() { return ret });\n                },\n                \"name\": function(name) {\n                        switch (name) {\n                            case \"true\": return [ \"unary-prefix\", \"!\", [ \"num\", 0 ]];\n                            case \"false\": return [ \"unary-prefix\", \"!\", [ \"num\", 1 ]];\n                        }\n                },\n                \"new\": function(ctor, args) {\n                        if (ctor[0] == \"name\" && ctor[1] == \"Array\" && !scope.has(\"Array\")) {\n                                if (args.length != 1) {\n                                        return [ \"array\", args ];\n                                } else {\n                                        return [ \"call\", [ \"name\", \"Array\" ], args ];\n                                }\n                        }\n                },\n                \"call\": function(expr, args) {\n                        if (expr[0] == \"name\" && expr[1] == \"Array\" && args.length != 1 && !scope.has(\"Array\")) {\n                                return [ \"array\", args ];\n                        }\n                },\n                \"while\": _do_while\n        }, function() {\n                for (var i = 0; i < 2; ++i) {\n                        ast = prepare_ifs(ast);\n                        ast = ast_add_scope(ast);\n                        ast = walk(ast);\n                }\n                return ast;\n        });\n};\n\n/* -----[ re-generate code from the AST ]----- */\n\nvar DOT_CALL_NO_PARENS = /*jsp.*/array_to_hash([\n        \"name\",\n        \"array\",\n        \"object\",\n        \"string\",\n        \"dot\",\n        \"sub\",\n        \"call\",\n        \"regexp\"\n]);\n\nfunction make_string(str, ascii_only) {\n        var dq = 0, sq = 0;\n        str = str.replace(/[\\\\\\b\\f\\n\\r\\t\\x22\\x27\\u2028\\u2029]/g, function(s){\n                switch (s) {\n                    case \"\\\\\": return \"\\\\\\\\\";\n                    case \"\\b\": return \"\\\\b\";\n                    case \"\\f\": return \"\\\\f\";\n                    case \"\\n\": return \"\\\\n\";\n                    case \"\\r\": return \"\\\\r\";\n                    case \"\\t\": return \"\\\\t\";\n                    case \"\\u2028\": return \"\\\\u2028\";\n                    case \"\\u2029\": return \"\\\\u2029\";\n                    case '\"': ++dq; return '\"';\n                    case \"'\": ++sq; return \"'\";\n                }\n                return s;\n        });\n        if (ascii_only) str = to_ascii(str);\n        if (dq > sq) return \"'\" + str.replace(/\\x27/g, \"\\\\'\") + \"'\";\n        else return '\"' + str.replace(/\\x22/g, '\\\\\"') + '\"';\n};\n\nfunction to_ascii(str) {\n        return str.replace(/[\\u0080-\\uffff]/g, function(ch) {\n                var code = ch.charCodeAt(0).toString(16);\n                while (code.length < 4) code = \"0\" + code;\n                return \"\\\\u\" + code;\n        });\n};\n\nvar SPLICE_NEEDS_BRACKETS = /*jsp.*/array_to_hash([ \"if\", \"while\", \"do\", \"for\", \"for-in\", \"with\" ]);\n\nfunction gen_code(ast, options) {\n        options = defaults(options, {\n                indent_start : 0,\n                indent_level : 4,\n                quote_keys   : false,\n                space_colon  : false,\n                beautify     : false,\n                ascii_only   : false,\n                inline_script: false\n        });\n        var beautify = !!options.beautify;\n        var indentation = 0,\n            newline = beautify ? \"\\n\" : \"\",\n            space = beautify ? \" \" : \"\";\n\n        function encode_string(str) {\n                var ret = make_string(str, options.ascii_only);\n                if (options.inline_script)\n                        ret = ret.replace(/<\\x2fscript([>/\\t\\n\\f\\r ])/gi, \"<\\\\/script$1\");\n                return ret;\n        };\n\n        function make_name(name) {\n                name = name.toString();\n                if (options.ascii_only)\n                        name = to_ascii(name);\n                return name;\n        };\n\n        function indent(line) {\n                if (line == null)\n                        line = \"\";\n                if (beautify)\n                        line = repeat_string(\" \", options.indent_start + indentation * options.indent_level) + line;\n                return line;\n        };\n\n        function with_indent(cont, incr) {\n                if (incr == null) incr = 1;\n                indentation += incr;\n                try { return cont.apply(null, slice(arguments, 1)); }\n                finally { indentation -= incr; }\n        };\n\n        function add_spaces(a) {\n                if (beautify)\n                        return a.join(\" \");\n                var b = [];\n                for (var i = 0; i < a.length; ++i) {\n                        var next = a[i + 1];\n                        b.push(a[i]);\n                        if (next &&\n                            ((/[a-z0-9_\\x24]$/i.test(a[i].toString()) && /^[a-z0-9_\\x24]/i.test(next.toString())) ||\n                             (/[\\+\\-]$/.test(a[i].toString()) && /^[\\+\\-]/.test(next.toString())))) {\n                                b.push(\" \");\n                        }\n                }\n                return b.join(\"\");\n        };\n\n        function add_commas(a) {\n                return a.join(\",\" + space);\n        };\n\n        function parenthesize(expr) {\n                var gen = make(expr);\n                for (var i = 1; i < arguments.length; ++i) {\n                        var el = arguments[i];\n                        if ((el instanceof Function && el(expr)) || expr[0] == el)\n                                return \"(\" + gen + \")\";\n                }\n                return gen;\n        };\n\n        function best_of(a) {\n                if (a.length == 1) {\n                        return a[0];\n                }\n                if (a.length == 2) {\n                        var b = a[1];\n                        a = a[0];\n                        return a.length <= b.length ? a : b;\n                }\n                return best_of([ a[0], best_of(a.slice(1)) ]);\n        };\n\n        function needs_parens(expr) {\n                if (expr[0] == \"function\" || expr[0] == \"object\") {\n                        // dot/call on a literal function requires the\n                        // function literal itself to be parenthesized\n                        // only if it's the first \"thing\" in a\n                        // statement.  This means that the parent is\n                        // \"stat\", but it could also be a \"seq\" and\n                        // we're the first in this \"seq\" and the\n                        // parent is \"stat\", and so on.  Messy stuff,\n                        // but it worths the trouble.\n                        var a = slice(w.stack()), self = a.pop(), p = a.pop();\n                        while (p) {\n                                if (p[0] == \"stat\") return true;\n                                if (((p[0] == \"seq\" || p[0] == \"call\" || p[0] == \"dot\" || p[0] == \"sub\" || p[0] == \"conditional\") && p[1] === self) ||\n                                    ((p[0] == \"binary\" || p[0] == \"assign\" || p[0] == \"unary-postfix\") && p[2] === self)) {\n                                        self = p;\n                                        p = a.pop();\n                                } else {\n                                        return false;\n                                }\n                        }\n                }\n                return !HOP(DOT_CALL_NO_PARENS, expr[0]);\n        };\n\n        function make_num(num) {\n                var str = num.toString(10), a = [ str.replace(/^0\\./, \".\") ], m;\n                if (Math.floor(num) === num) {\n                        a.push(\"0x\" + num.toString(16).toLowerCase(), // probably pointless\n                               \"0\" + num.toString(8)); // same.\n                        if ((m = /^(.*?)(0+)$/.exec(num))) {\n                                a.push(m[1] + \"e\" + m[2].length);\n                        }\n                } else if ((m = /^0?\\.(0+)(.*)$/.exec(num))) {\n                        a.push(m[2] + \"e-\" + (m[1].length + m[2].length),\n                               str.substr(str.indexOf(\".\")));\n                }\n                return best_of(a);\n        };\n\n        var w = ast_walker();\n        var make = w.walk;\n        return w.with_walkers({\n                \"string\": encode_string,\n                \"num\": make_num,\n                \"name\": make_name,\n                \"toplevel\": function(statements) {\n                        return make_block_statements(statements)\n                                .join(newline + newline);\n                },\n                \"splice\": function(statements) {\n                        var parent = w.parent();\n                        if (HOP(SPLICE_NEEDS_BRACKETS, parent)) {\n                                // we need block brackets in this case\n                                return make_block.apply(this, arguments);\n                        } else {\n                                return MAP(make_block_statements(statements, true),\n                                           function(line, i) {\n                                                   // the first line is already indented\n                                                   return i > 0 ? indent(line) : line;\n                                           }).join(newline);\n                        }\n                },\n                \"block\": make_block,\n                \"var\": function(defs) {\n                        return \"var \" + add_commas(MAP(defs, make_1vardef)) + \";\";\n                },\n                \"const\": function(defs) {\n                        return \"const \" + add_commas(MAP(defs, make_1vardef)) + \";\";\n                },\n                \"try\": function(tr, ca, fi) {\n                        var out = [ \"try\", make_block(tr) ];\n                        if (ca) out.push(\"catch\", \"(\" + ca[0] + \")\", make_block(ca[1]));\n                        if (fi) out.push(\"finally\", make_block(fi));\n                        return add_spaces(out);\n                },\n                \"throw\": function(expr) {\n                        return add_spaces([ \"throw\", make(expr) ]) + \";\";\n                },\n                \"new\": function(ctor, args) {\n                        args = args.length > 0 ? \"(\" + add_commas(MAP(args, make)) + \")\" : \"\";\n                        return add_spaces([ \"new\", parenthesize(ctor, \"seq\", \"binary\", \"conditional\", \"assign\", function(expr){\n                                var w = ast_walker(), has_call = {};\n                                try {\n                                        w.with_walkers({\n                                                \"call\": function() { throw has_call },\n                                                \"function\": function() { return this }\n                                        }, function(){\n                                                w.walk(expr);\n                                        });\n                                } catch(ex) {\n                                        if (ex === has_call)\n                                                return true;\n                                        throw ex;\n                                }\n                        }) + args ]);\n                },\n                \"switch\": function(expr, body) {\n                        return add_spaces([ \"switch\", \"(\" + make(expr) + \")\", make_switch_block(body) ]);\n                },\n                \"break\": function(label) {\n                        var out = \"break\";\n                        if (label != null)\n                                out += \" \" + make_name(label);\n                        return out + \";\";\n                },\n                \"continue\": function(label) {\n                        var out = \"continue\";\n                        if (label != null)\n                                out += \" \" + make_name(label);\n                        return out + \";\";\n                },\n                \"conditional\": function(co, th, el) {\n                        return add_spaces([ parenthesize(co, \"assign\", \"seq\", \"conditional\"), \"?\",\n                                            parenthesize(th, \"seq\"), \":\",\n                                            parenthesize(el, \"seq\") ]);\n                },\n                \"assign\": function(op, lvalue, rvalue) {\n                        if (op && op !== true) op += \"=\";\n                        else op = \"=\";\n                        return add_spaces([ make(lvalue), op, parenthesize(rvalue, \"seq\") ]);\n                },\n                \"dot\": function(expr) {\n                        var out = make(expr), i = 1;\n                        if (expr[0] == \"num\") {\n                                if (!/\\./.test(expr[1]))\n                                        out += \".\";\n                        } else if (needs_parens(expr))\n                                out = \"(\" + out + \")\";\n                        while (i < arguments.length)\n                                out += \".\" + make_name(arguments[i++]);\n                        return out;\n                },\n                \"call\": function(func, args) {\n                        var f = make(func);\n                        if (needs_parens(func))\n                                f = \"(\" + f + \")\";\n                        return f + \"(\" + add_commas(MAP(args, function(expr){\n                                return parenthesize(expr, \"seq\");\n                        })) + \")\";\n                },\n                \"function\": make_function,\n                \"defun\": make_function,\n                \"if\": function(co, th, el) {\n                        var out = [ \"if\", \"(\" + make(co) + \")\", el ? make_then(th) : make(th) ];\n                        if (el) {\n                                out.push(\"else\", make(el));\n                        }\n                        return add_spaces(out);\n                },\n                \"for\": function(init, cond, step, block) {\n                        var out = [ \"for\" ];\n                        init = (init != null ? make(init) : \"\").replace(/;*\\s*$/, \";\" + space);\n                        cond = (cond != null ? make(cond) : \"\").replace(/;*\\s*$/, \";\" + space);\n                        step = (step != null ? make(step) : \"\").replace(/;*\\s*$/, \"\");\n                        var args = init + cond + step;\n                        if (args == \"; ; \") args = \";;\";\n                        out.push(\"(\" + args + \")\", make(block));\n                        return add_spaces(out);\n                },\n                \"for-in\": function(vvar, key, hash, block) {\n                        return add_spaces([ \"for\", \"(\" +\n                                            (vvar ? make(vvar).replace(/;+$/, \"\") : make(key)),\n                                            \"in\",\n                                            make(hash) + \")\", make(block) ]);\n                },\n                \"while\": function(condition, block) {\n                        return add_spaces([ \"while\", \"(\" + make(condition) + \")\", make(block) ]);\n                },\n                \"do\": function(condition, block) {\n                        return add_spaces([ \"do\", make(block), \"while\", \"(\" + make(condition) + \")\" ]) + \";\";\n                },\n                \"return\": function(expr) {\n                        var out = [ \"return\" ];\n                        if (expr != null) out.push(make(expr));\n                        return add_spaces(out) + \";\";\n                },\n                \"binary\": function(operator, lvalue, rvalue) {\n                        var left = make(lvalue), right = make(rvalue);\n                        // XXX: I'm pretty sure other cases will bite here.\n                        //      we need to be smarter.\n                        //      adding parens all the time is the safest bet.\n                        if (member(lvalue[0], [ \"assign\", \"conditional\", \"seq\" ]) ||\n                            lvalue[0] == \"binary\" && PRECEDENCE[operator] > PRECEDENCE[lvalue[1]]) {\n                                left = \"(\" + left + \")\";\n                        }\n                        if (member(rvalue[0], [ \"assign\", \"conditional\", \"seq\" ]) ||\n                            rvalue[0] == \"binary\" && PRECEDENCE[operator] >= PRECEDENCE[rvalue[1]] &&\n                            !(rvalue[1] == operator && member(operator, [ \"&&\", \"||\", \"*\" ]))) {\n                                right = \"(\" + right + \")\";\n                        }\n                        else if (!beautify && options.inline_script && (operator == \"<\" || operator == \"<<\")\n                                 && rvalue[0] == \"regexp\" && /^script/i.test(rvalue[1])) {\n                                right = \" \" + right;\n                        }\n                        return add_spaces([ left, operator, right ]);\n                },\n                \"unary-prefix\": function(operator, expr) {\n                        var val = make(expr);\n                        if (!(expr[0] == \"num\" || (expr[0] == \"unary-prefix\" && !HOP(OPERATORS, operator + expr[1])) || !needs_parens(expr)))\n                                val = \"(\" + val + \")\";\n                        return operator + (jsp.is_alphanumeric_char(operator.charAt(0)) ? \" \" : \"\") + val;\n                },\n                \"unary-postfix\": function(operator, expr) {\n                        var val = make(expr);\n                        if (!(expr[0] == \"num\" || (expr[0] == \"unary-postfix\" && !HOP(OPERATORS, operator + expr[1])) || !needs_parens(expr)))\n                                val = \"(\" + val + \")\";\n                        return val + operator;\n                },\n                \"sub\": function(expr, subscript) {\n                        var hash = make(expr);\n                        if (needs_parens(expr))\n                                hash = \"(\" + hash + \")\";\n                        return hash + \"[\" + make(subscript) + \"]\";\n                },\n                \"object\": function(props) {\n                        if (props.length == 0)\n                                return \"{}\";\n                        return \"{\" + newline + with_indent(function(){\n                                return MAP(props, function(p){\n                                        if (p.length == 3) {\n                                                // getter/setter.  The name is in p[0], the arg.list in p[1][2], the\n                                                // body in p[1][3] and type (\"get\" / \"set\") in p[2].\n                                                return indent(make_function(p[0], p[1][2], p[1][3], p[2]));\n                                        }\n                                        var key = p[0], val = parenthesize(p[1], \"seq\");\n                                        if (options.quote_keys) {\n                                                key = encode_string(key);\n                                        } else if ((typeof key == \"number\" || !beautify && +key + \"\" == key)\n                                                   && parseFloat(key) >= 0) {\n                                                key = make_num(+key);\n                                        } else if (!is_identifier(key)) {\n                                                key = encode_string(key);\n                                        }\n                                        return indent(add_spaces(beautify && options.space_colon\n                                                                 ? [ key, \":\", val ]\n                                                                 : [ key + \":\", val ]));\n                                }).join(\",\" + newline);\n                        }) + newline + indent(\"}\");\n                },\n                \"regexp\": function(rx, mods) {\n                        return \"/\" + rx + \"/\" + mods;\n                },\n                \"array\": function(elements) {\n                        if (elements.length == 0) return \"[]\";\n                        return add_spaces([ \"[\", add_commas(MAP(elements, function(el){\n                                if (!beautify && el[0] == \"atom\" && el[1] == \"undefined\") return \"\";\n                                return parenthesize(el, \"seq\");\n                        })), \"]\" ]);\n                },\n                \"stat\": function(stmt) {\n                        return make(stmt).replace(/;*\\s*$/, \";\");\n                },\n                \"seq\": function() {\n                        return add_commas(MAP(slice(arguments), make));\n                },\n                \"label\": function(name, block) {\n                        return add_spaces([ make_name(name), \":\", make(block) ]);\n                },\n                \"with\": function(expr, block) {\n                        return add_spaces([ \"with\", \"(\" + make(expr) + \")\", make(block) ]);\n                },\n                \"atom\": function(name) {\n                        return make_name(name);\n                }\n        }, function(){ return make(ast) });\n\n        // The squeezer replaces \"block\"-s that contain only a single\n        // statement with the statement itself; technically, the AST\n        // is correct, but this can create problems when we output an\n        // IF having an ELSE clause where the THEN clause ends in an\n        // IF *without* an ELSE block (then the outer ELSE would refer\n        // to the inner IF).  This function checks for this case and\n        // adds the block brackets if needed.\n        function make_then(th) {\n                if (th[0] == \"do\") {\n                        // https://github.com/mishoo/UglifyJS/issues/#issue/57\n                        // IE croaks with \"syntax error\" on code like this:\n                        //     if (foo) do ... while(cond); else ...\n                        // we need block brackets around do/while\n                        return make_block([ th ]);\n                }\n                var b = th;\n                while (true) {\n                        var type = b[0];\n                        if (type == \"if\") {\n                                if (!b[3])\n                                        // no else, we must add the block\n                                        return make([ \"block\", [ th ]]);\n                                b = b[3];\n                        }\n                        else if (type == \"while\" || type == \"do\") b = b[2];\n                        else if (type == \"for\" || type == \"for-in\") b = b[4];\n                        else break;\n                }\n                return make(th);\n        };\n\n        function make_function(name, args, body, keyword) {\n                var out = keyword || \"function\";\n                if (name) {\n                        out += \" \" + make_name(name);\n                }\n                out += \"(\" + add_commas(MAP(args, make_name)) + \")\";\n                return add_spaces([ out, make_block(body) ]);\n        };\n\n        function must_has_semicolon(node) {\n                switch (node[0]) {\n                    case \"with\":\n                    case \"while\":\n                        return empty(node[2]); // `with' or `while' with empty body?\n                    case \"for\":\n                    case \"for-in\":\n                        return empty(node[4]); // `for' with empty body?\n                    case \"if\":\n                        if (empty(node[2]) && !node[3]) return true; // `if' with empty `then' and no `else'\n                        if (node[3]) {\n                                if (empty(node[3])) return true; // `else' present but empty\n                                return must_has_semicolon(node[3]); // dive into the `else' branch\n                        }\n                        return must_has_semicolon(node[2]); // dive into the `then' branch\n                }\n        };\n\n        function make_block_statements(statements, noindent) {\n                for (var a = [], last = statements.length - 1, i = 0; i <= last; ++i) {\n                        var stat = statements[i];\n                        var code = make(stat);\n                        if (code != \";\") {\n                                if (!beautify && i == last && !must_has_semicolon(stat)) {\n                                        code = code.replace(/;+\\s*$/, \"\");\n                                }\n                                a.push(code);\n                        }\n                }\n                return noindent ? a : MAP(a, indent);\n        };\n\n        function make_switch_block(body) {\n                var n = body.length;\n                if (n == 0) return \"{}\";\n                return \"{\" + newline + MAP(body, function(branch, i){\n                        var has_body = branch[1].length > 0, code = with_indent(function(){\n                                return indent(branch[0]\n                                              ? add_spaces([ \"case\", make(branch[0]) + \":\" ])\n                                              : \"default:\");\n                        }, 0.5) + (has_body ? newline + with_indent(function(){\n                                return make_block_statements(branch[1]).join(newline);\n                        }) : \"\");\n                        if (!beautify && has_body && i < n - 1)\n                                code += \";\";\n                        return code;\n                }).join(newline) + newline + indent(\"}\");\n        };\n\n        function make_block(statements) {\n                if (!statements) return \";\";\n                if (statements.length == 0) return \"{}\";\n                return \"{\" + newline + with_indent(function(){\n                        return make_block_statements(statements).join(newline);\n                }) + newline + indent(\"}\");\n        };\n\n        function make_1vardef(def) {\n                var name = def[0], val = def[1];\n                if (val != null)\n                        name = add_spaces([ make_name(name), \"=\", parenthesize(val, \"seq\") ]);\n                return name;\n        };\n\n};\n\nfunction split_lines(code, max_line_length) {\n        var splits = [ 0 ];\n        jsp.parse(function(){\n                var next_token = jsp.tokenizer(code);\n                var last_split = 0;\n                var prev_token;\n                function current_length(tok) {\n                        return tok.pos - last_split;\n                };\n                function split_here(tok) {\n                        last_split = tok.pos;\n                        splits.push(last_split);\n                };\n                function custom(){\n                        var tok = next_token.apply(this, arguments);\n                        out: {\n                                if (prev_token) {\n                                        if (prev_token.type == \"keyword\") break out;\n                                }\n                                if (current_length(tok) > max_line_length) {\n                                        switch (tok.type) {\n                                            case \"keyword\":\n                                            case \"atom\":\n                                            case \"name\":\n                                            case \"punc\":\n                                                split_here(tok);\n                                                break out;\n                                        }\n                                }\n                        }\n                        prev_token = tok;\n                        return tok;\n                };\n                custom.context = function() {\n                        return next_token.context.apply(this, arguments);\n                };\n                return custom;\n        }());\n        return splits.map(function(pos, i){\n                return code.substring(pos, splits[i + 1] || code.length);\n        }).join(\"\\n\");\n};\n\n/* -----[ Utilities ]----- */\n\nfunction repeat_string(str, i) {\n        if (i <= 0) return \"\";\n        if (i == 1) return str;\n        var d = repeat_string(str, i >> 1);\n        d += d;\n        if (i & 1) d += str;\n        return d;\n};\n\nfunction defaults(args, defs) {\n        var ret = {};\n        if (args === true)\n                args = {};\n        for (var i in defs) if (HOP(defs, i)) {\n                ret[i] = (args && HOP(args, i)) ? args[i] : defs[i];\n        }\n        return ret;\n};\n\nfunction is_identifier(name) {\n        return /^[a-z_$][a-z0-9_$]*$/i.test(name)\n                && name != \"this\"\n                && !HOP(jsp.KEYWORDS_ATOM, name)\n                && !HOP(jsp.RESERVED_WORDS, name)\n                && !HOP(jsp.KEYWORDS, name);\n};\n\nfunction HOP(obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n// some utilities\n\nvar MAP;\n\n(function(){\n        MAP = function(a, f, o) {\n                var ret = [], top = [], i;\n                function doit() {\n                        var val = f.call(o, a[i], i);\n                        if (val instanceof AtTop) {\n                                val = val.v;\n                                if (val instanceof Splice) {\n                                        top.push.apply(top, val.v);\n                                } else {\n                                        top.push(val);\n                                }\n                        }\n                        else if (val != skip) {\n                                if (val instanceof Splice) {\n                                        ret.push.apply(ret, val.v);\n                                } else {\n                                        ret.push(val);\n                                }\n                        }\n                };\n                if (a instanceof Array) for (i = 0; i < a.length; ++i) doit();\n                else for (i in a) if (HOP(a, i)) doit();\n                return top.concat(ret);\n        };\n        MAP.at_top = function(val) { return new AtTop(val) };\n        MAP.splice = function(val) { return new Splice(val) };\n        var skip = MAP.skip = {};\n        function AtTop(val) { this.v = val };\n        function Splice(val) { this.v = val };\n})();\n\n/* -----[ Exports ]----- */\n/*\nexports.ast_walker = ast_walker;\nexports.ast_mangle = ast_mangle;\nexports.ast_squeeze = ast_squeeze;\nexports.ast_lift_variables = ast_lift_variables;\nexports.gen_code = gen_code;\nexports.ast_add_scope = ast_add_scope;\nexports.set_logger = function(logger) { warn = logger };\nexports.make_string = make_string;\nexports.split_lines = split_lines;\nexports.MAP = MAP;\n\n// keep this last!\nexports.ast_squeeze_more = require(\"./squeeze-more\").ast_squeeze_more;\n*/\n","var GETTER = \"__defineGetter__\",\n    SETTER = \"__defineSetter__\",\n    // Property that is currently beeing evaluated. Used to get the information\n    // which property called the getter of a certain other property for\n    // evaluation and is thus dependant on it.\n    evaluatingProperty = undefined,\n    // All object constructors\n    constructors = {\n      int:         QMLInteger,\n      real:        Number,\n      double:      Number,\n      string:      String,\n      bool:        Boolean,\n      list:        QMLList,\n      color:       QMLColor,\n      enum:        Number,\n      url:         String,\n      variant:     QMLVariant,\n      'var':       QMLVariant,\n      QMLDocument: QMLComponent\n    };\nvar modules = {\n    Main: constructors\n  };\n\n// Helper. Adds a type to the constructor list\nglobal.registerGlobalQmlType = function (name, type) {\n  global[type.name]  = type;\n  constructors[name] = type;\n  modules.Main[name] = type;\n};\n\n// Helper. Register a type to a module\nglobal.registerQmlType = function(options) {\n  if (typeof options != 'object') {\n    registerGlobalQmlType(arguments[0], arguments[1]);\n  } else {\n    var moduleDescriptor = {\n      name:        options.name,\n      versions:    options.versions,\n      constructor: options.constructor\n    };\n\n    if (typeof modules[options.module] == 'undefined')\n      modules[options.module] = [];\n    modules[options.module].push(moduleDescriptor);\n  }\n};\n\nglobal.getConstructor = function (moduleName, version, name) {\n  if (typeof modules[moduleName] != 'undefined') {\n    for (var i = 0 ; i < modules[moduleName].length ; ++i) {\n      var type = modules[moduleName][i];\n\n      if (type.name == name && type.versions.test(version))\n        return type.constructor;\n    }\n  }\n  return null;\n};\n\nglobal.collectConstructorsForModule = function (moduleName, version) {\n  var constructors = {};\n\n  if (typeof modules[moduleName] == 'undefined') {\n    console.warn(\"module `\" + moduleName + \"` not found\");\n    return constructors;\n  }\n  for (var i = 0 ; i < modules[moduleName].length ; ++i) {\n    var module = modules[moduleName][i];\n\n    if (module.versions.test(version)) {\n      constructors[module.name] = module.constructor;\n    }\n  }\n  return constructors;\n};\n\nglobal.mergeObjects = function (obj1, obj2) {\n  var mergedObject = {};\n\n  if (typeof obj1 != 'undefined' && obj1 != null) {\n    for (var key in obj1) { mergedObject[key] = obj1[key]; }\n  }\n  if (typeof obj2 != 'undefined' && obj2 != null) {\n    for (var key in obj2) { mergedObject[key] = obj2[key]; }\n  }\n  return mergedObject;\n}\n\nglobal.perContextConstructors = {};\n\nglobal.loadImports = function (self, imports) {\n  constructors = mergeObjects(modules.Main, null);\n  for (var i = 0 ; i < imports.length ; ++i) {\n    var moduleName = imports[i][1],\n        moduleVersion = imports[i][2],\n        moduleAlias = imports[i][3],\n        moduleConstructors = collectConstructorsForModule(moduleName, moduleVersion);\n\n    if (moduleAlias !== \"\")\n      constructors[moduleAlias] = mergeObjects(constructors[moduleAlias], moduleConstructors);\n    else\n      constructors = mergeObjects(constructors, moduleConstructors);\n  }\n  perContextConstructors[self.objectId] = constructors;\n}\n\n/**\n * QML Object constructor.\n * @param {Object} meta Meta information about the object and the creation context\n * @return {Object} New qml object\n */\nfunction construct(meta) {\n    var item,\n        component;\n\n    if (meta.object.$class in constructors) {\n        item = new constructors[meta.object.$class](meta);\n    }\n    else {\n        // Load component from file. Please look at import.js for main notes.\n        // Actually, we have to use that order:\n        // 1) try to load component from current basePath\n        // 2) from importPathList\n        // 3) from directories in imports statements and then\n        // 4) from qmldir files\n        // Currently we support only 1,2 and 4 and use order: 4,1,2\n        // TODO: engine.qmldirs is global for all loaded components. That's not qml's original behaviour.\n        var qdirInfo = engine.qmldirs[meta.object.$class]; // Are we have info on that component in some imported qmldir files?\n        if (qdirInfo) {\n            // We have that component in some qmldir, load it from qmldir's url\n            component = Qt.createComponent( \"@\" + qdirInfo.url, meta.context);\n        }\n        else\n            component = Qt.createComponent(meta.object.$class + \".qml\", meta.context);\n\n        if (component) {\n            var item = component.createObject(meta.parent);\n\n            if (typeof item.dom != 'undefined')\n                item.dom.className += \" \" + meta.object.$class + (meta.object.id ? \" \" + meta.object.id : \"\");\n            var dProp; // Handle default properties\n        } else {\n            console.log(\"No constructor found for \" + meta.object.$class);\n            return;\n        }\n    }\n\n    // id\n    if (meta.object.id)\n        meta.context[meta.object.id] = item;\n\n    // keep path in item for probale use it later in Qt.resolvedUrl\n    item.$context[\"$basePath\"] = engine.$basePath; //gut\n\n    // Apply properties (Bindings won't get evaluated, yet)\n    applyProperties(meta.object, item, item, item.$context);\n\n    return item;\n}\n\n/**\n * Create property getters and setters for object.\n * @param {Object} obj Object for which gsetters will be set\n * @param {String} propName Property name\n * @param {Object} [options] Options that allow finetuning of the property\n */\nfunction createSimpleProperty(type, obj, propName, options) {\n    var prop = new QMLProperty(type, obj, propName);\n    var getter, setter;\n\n    if (typeof options == 'undefined')\n      options = {};\n    else if (typeof options != 'object')\n      options = { default: options }\n\n    obj[propName + \"Changed\"] = prop.changed;\n    obj.$properties[propName] = prop;\n    obj.$properties[propName].set(options.default);\n    getter = function()       { return obj.$properties[propName].get(); };\n    if (!options.readOnly)\n      setter = function(newVal) { return obj.$properties[propName].set(newVal); };\n    else {\n      setter = function(newVal) {\n        if (obj.$canEditReadOnlyProperties != true)\n          throw \"property '\" + propName + \"' has read only access\";\n        return obj.$properties[propName].set(newVal);\n      }\n    }\n    setupGetterSetter(obj, propName, getter, setter);\n    if (obj.$isComponentRoot)\n        setupGetterSetter(obj.$context, propName, getter, setter);\n}\n\n/**\n * Set up simple getter function for property\n */\nvar setupGetter,\n    setupSetter,\n    setupGetterSetter;\n(function() {\n\n// todo: What's wrong with Object.defineProperty on some browsers?\n// Object.defineProperty is the standard way to setup getters and setters.\n// However, the following way to use Object.defineProperty don't work on some\n// webkit-based browsers, namely Safari, iPad, iPhone and Nokia N9 browser.\n// Chrome, firefox and opera still digest them fine.\n\n// So, if the deprecated __defineGetter__ is available, use those, and if not\n// use the standard Object.defineProperty (IE for example).\n\n    var useDefineProperty = !(Object[GETTER] && Object[SETTER]);\n\n    if (useDefineProperty) {\n\n        if (!Object.defineProperty) {\n            console.log(\"No __defineGetter__ or defineProperty available!\");\n        }\n\n        setupGetter = function(obj, propName, func) {\n            Object.defineProperty(obj, propName,\n                { get: func, configurable: true, enumerable: true } );\n        }\n        setupSetter = function(obj, propName, func) {\n            Object.defineProperty(obj, propName,\n                { set: func, configurable: true, enumerable: false });\n        }\n        setupGetterSetter = function(obj, propName, getter, setter) {\n            Object.defineProperty(obj, propName,\n                {get: getter, set: setter, configurable: true, enumerable: false });\n        }\n    } else {\n        setupGetter = function(obj, propName, func) {\n            obj[GETTER](propName, func);\n        }\n        setupSetter = function(obj, propName, func) {\n            obj[SETTER](propName, func);\n        }\n        setupGetterSetter = function(obj, propName, getter, setter) {\n            obj[GETTER](propName, getter);\n            obj[SETTER](propName, setter);\n        }\n    }\n\n})();\n/**\n * Apply properties from metaObject to item.\n * @param {Object} metaObject Source of properties\n * @param {Object} item Target of property apply\n * @param {Object} objectScope Scope in which properties should be evaluated\n * @param {Object} componentScope Component scope in which properties should be evaluated\n */\nfunction applyProperties(metaObject, item, objectScope, componentScope) {\n    var i;\n    objectScope = objectScope || item;\n    for (i in metaObject) {\n        var value = metaObject[i];\n        // skip global id's and internal values\n        if (i == \"id\" || i[0] == \"$\") {\n            continue;\n        }\n        // slots\n        if (i.indexOf(\"on\") == 0 && i[2].toUpperCase() == i[2]) {\n            var signalName =  i[2].toLowerCase() + i.slice(3);\n            if (!item[signalName]) {\n                console.warn(\"No signal called \" + signalName + \" found!\");\n                continue;\n            }\n            else if (typeof item[signalName].connect != 'function') {\n                console.warn(signalName + \" is not a signal!\");\n                continue;\n            }\n            if (!value.eval) {\n                var params = \"\";\n                for (var j in item[signalName].parameters) {\n                    params += j==0 ? \"\" : \", \";\n                    params += item[signalName].parameters[j].name;\n                }\n                value.src = \"(function(\" + params + \") {\" + value.src + \"})\";\n                value.function = false;\n                value.compile();\n            }\n            item[signalName].connect(item, value.eval(objectScope, componentScope));\n            continue;\n        }\n\n        if (value instanceof Object) {\n            if (value instanceof QMLSignalDefinition) {\n                item[i] = Signal(value.parameters);\n                if (item.$isComponentRoot)\n                    componentScope[i] = item[i];\n                continue;\n            } else if (value instanceof QMLMethod) {\n                value.compile();\n                item[i] = value.eval(objectScope, componentScope);\n                if (item.$isComponentRoot)\n                    componentScope[i] = item[i];\n                continue;\n            } else if (value instanceof QMLAliasDefinition) {\n                createSimpleProperty(\"alias\", item, i);\n                item.$properties[i].componentScope = componentScope;\n                item.$properties[i].val = value;\n                item.$properties[i].get = function() {\n                    var obj = this.componentScope[this.val.objectName];\n                    return this.val.propertyName ? obj.$properties[this.val.propertyName].get() : obj;\n                }\n                item.$properties[i].set = function(newVal, fromAnimation, objectScope, componentScope) {\n                    if (!this.val.propertyName)\n                        throw \"Cannot set alias property pointing to an QML object.\";\n                    this.componentScope[this.val.objectName].$properties[this.val.propertyName].set(newVal, fromAnimation, objectScope, componentScope);\n                }\n                continue;\n            } else if (value instanceof QMLPropertyDefinition) {\n                createSimpleProperty(value.type, item, i);\n                item.$properties[i].set(value.value, true, objectScope, componentScope);\n                continue;\n            } else if (item[i] && value instanceof QMLMetaPropertyGroup) {\n                // Apply properties one by one, otherwise apply at once\n                applyProperties(value, item[i], objectScope, componentScope);\n                continue;\n            }\n        }\n        if (item.$properties && i in item.$properties)\n            item.$properties[i].set(value, true, objectScope, componentScope);\n        else if (i in item)\n            item[i] = value;\n        else if (item.$setCustomData)\n            item.$setCustomData(i, value);\n        else\n            console.warn(\"Cannot assign to non-existent property \\\"\" + i + \"\\\". Ignoring assignment.\");\n    }\n    if (metaObject.$children && metaObject.$children.length !== 0) {\n        if (item.$defaultProperty)\n            item.$properties[item.$defaultProperty].set(metaObject.$children, true, objectScope, componentScope);\n        else\n            throw \"Cannot assign to unexistant default property\";\n    }\n    // We purposefully set the default property AFTER using it, in order to only have it applied for\n    // instanciations of this component, but not for its internal children\n    if (metaObject.$defaultProperty)\n        item.$defaultProperty = metaObject.$defaultProperty;\n    if (typeof item.completed != 'undefined' && item.completedAlreadyCalled == false) {\n      item.completedAlreadyCalled = true;\n      item.completed();\n    }\n}\n\n// ItemModel. EXPORTED.\nJSItemModel = function() {\n    this.roleNames = [];\n\n    this.setRoleNames = function(names) {\n        this.roleNames = names;\n    }\n\n    this.dataChanged = Signal([\n        {type:\"int\", name:\"startIndex\"},\n        {type:\"int\", name:\"endIndex\"}\n    ]);\n    this.rowsInserted = Signal([\n        {type:\"int\", name:\"startIndex\"},\n        {type:\"int\", name:\"endIndex\"}\n    ]);\n    this.rowsMoved = Signal([\n        {type:\"int\", name:\"sourceStartIndex\"},\n        {type:\"int\", name:\"sourceEndIndex\"},\n        {type:\"int\", name:\"destinationIndex\"}\n    ]);\n    this.rowsRemoved = Signal([\n        {type:\"int\", name:\"startIndex\"},\n        {type:\"int\", name:\"endIndex\"}\n    ]);\n    this.modelReset = Signal();\n}\n\n// -----------------------------------------------------------------------------\n// Stuff below defines QML things\n// -----------------------------------------------------------------------------\n\n// Helper\nfunction unboundMethod() {\n    console.log(\"Unbound method for\", this);\n}\n","function QMLContext() {\n    this.nameForObject = function(obj) {\n        for (var name in this) {\n            if (this[name] == obj)\n                return name;\n        }\n    }\n}\n\nQMLComponent.prototype.createObject = function(parent, properties) {\n    var oldState = engine.operationState;\n    engine.operationState = QMLOperationState.Init;\n    // change base path to current component base path\n    var bp = engine.$basePath; engine.$basePath = this.$basePath ? this.$basePath : engine.$basePath;\n\n    var item = construct({\n        object: this.$metaObject,\n        parent: parent,\n        context: this.$context ? Object.create(this.$context) : new QMLContext(),\n        isComponentRoot: true\n    });\n\n    // change base path back\n    //TODO looks a bit hacky\n    engine.$basePath = bp;\n\n    engine.operationState = oldState;\n    return item;\n}\n\nfunction QMLComponent(meta) {\n    if (constructors[meta.object.$class] == QMLComponent)\n        this.$metaObject = meta.object.$children[0];\n    else\n        this.$metaObject = meta.object;\n    this.$context = meta.context;\n\n    var jsImports = [];\n\n    this.finalizeImports = (function($context) {\n      for (var i = 0 ; i < jsImports.length ; ++i) {\n        var importDesc = jsImports[i];\n        var src = importDesc[1];\n        var js;\n\n        if (typeof qmlEngine.$basePath != 'undefined')\n          src = qmlEngine.$basePath + src;\n        if (typeof qrc[src] != 'undefined')\n          js = qrc[src];\n        else\n          js = global.jsparse(getUrlContents(src));\n        if (importDesc[3] !== \"\") {\n          $context[importDesc[3]] = {};\n          importJavascriptInContext(js, $context[importDesc[3]]);\n        }\n        else\n          importJavascriptInContext(js, $context);\n      }\n    }).bind(this);\n\n    if (meta.object.$imports instanceof Array)\n    {\n      var moduleImports = [];\n      var loadImport    = (function(importDesc) {\n        if (/\\.js$/.test(importDesc[1]))\n          jsImports.push(importDesc);\n        else\n          moduleImports.push(importDesc);\n      }).bind(this);\n\n      for (var i = 0 ; i < meta.object.$imports.length ; ++i) {\n        loadImport(meta.object.$imports[i]);\n      }\n      loadImports(this, moduleImports);\n      if (typeof this.$context != 'undefined' && this.$context != null)\n        this.finalizeImports(this.$context);\n    }\n}\n\nregisterQmlType('Component',   QMLComponent);\nregisterQmlType('QMLDocument', QMLComponent);\n","function QMLItem(meta) {\n    QMLBaseObject.call(this, meta);\n    var child,\n        o, i;\n\n    this.completed = Signal();\n    this.completedAlreadyCalled = false;\n\n    if (this.$parent === null) { // This is the root element. Initialize it.\n        this.dom = engine.rootElement || document.body;\n        this.dom.innerHTML = \"\";\n        var self = this;\n        this.dom.style.position = \"relative\"; // Needed to make absolute positioning work\n        this.dom.style.top = \"0\";\n        this.dom.style.left = \"0\";\n        this.dom.style.overflow = \"hidden\"; // No QML stuff should stand out the root element\n    } else {\n        if (!this.dom) // Create a dom element for this item.\n            this.dom = document.createElement(\"div\");\n        this.dom.style.position = \"absolute\";\n    }\n    this.dom.style.pointerEvents = \"none\";\n    this.dom.className = meta.object.$class + (this.id ? \" \" + this.id : \"\");\n    this.dom.qml = this;\n    this.css = this.dom.style;\n\n    this.css.boxSizing = 'border-box';\n\n    createSimpleProperty(\"list\", this, \"data\");\n    this.$defaultProperty = \"data\";\n    createSimpleProperty(\"list\", this, \"children\");\n    createSimpleProperty(\"list\", this, \"resources\");\n    createSimpleProperty(\"Item\", this, \"parent\");\n    this.children = [];\n    this.resources = [];\n    this.parentChanged.connect(this, function(newParent, oldParent) {\n        if (oldParent) {\n            oldParent.children.splice(oldParent.children.indexOf(this), 1);\n            oldParent.childrenChanged();\n            oldParent.dom.removeChild(this.dom);\n        }\n        if (newParent && newParent.children.indexOf(this) == -1) {\n            newParent.children.push(this);\n            newParent.childrenChanged();\n        }\n        if (newParent)\n            newParent.dom.appendChild(this.dom);\n    });\n    this.parentChanged.connect(this, updateHGeometry);\n    this.parentChanged.connect(this, updateVGeometry);\n    this.dataChanged.connect(this, function(newData) {\n        for (var i in newData) {\n            var child = newData[i];\n            if (child.hasOwnProperty(\"parent\")) // Seems to be an Item. TODO: Use real inheritance and ask using instanceof.\n                child.parent = this; // This will also add it to children.\n            else\n                this.resources.push(child);\n        }\n    });\n\n    if (this.$isComponentRoot)\n      createSimpleProperty(\"var\", this, \"activeFocus\");\n    createSimpleProperty(\"real\", this, \"x\");\n    createSimpleProperty(\"real\", this, \"y\");\n    createSimpleProperty(\"real\", this, \"width\");\n    createSimpleProperty(\"real\", this, \"height\");\n    createSimpleProperty(\"real\", this, \"implicitWidth\");\n    createSimpleProperty(\"real\", this, \"implicitHeight\");\n    createSimpleProperty(\"real\", this, \"left\");\n    createSimpleProperty(\"real\", this, \"right\");\n    createSimpleProperty(\"real\", this, \"top\");\n    createSimpleProperty(\"real\", this, \"bottom\");\n    createSimpleProperty(\"real\", this, \"horizontalCenter\");\n    createSimpleProperty(\"real\", this, \"verticalCenter\");\n    createSimpleProperty(\"real\", this, \"rotation\");\n    createSimpleProperty(\"real\", this, \"scale\");\n    createSimpleProperty(\"real\", this, \"z\");\n    createSimpleProperty(\"list\", this, \"transform\");\n    createSimpleProperty(\"bool\", this, \"visible\");\n    createSimpleProperty(\"real\", this, \"opacity\");\n    createSimpleProperty(\"bool\", this, \"clip\");\n    createSimpleProperty(\"bool\", this, \"focus\");\n    this.xChanged.connect(this, updateHGeometry);\n    this.yChanged.connect(this, updateVGeometry);\n    this.widthChanged.connect(this, updateHGeometry);\n    this.heightChanged.connect(this, updateVGeometry);\n    this.implicitWidthChanged.connect(this, updateHGeometry);\n    this.implicitHeightChanged.connect(this, updateVGeometry);\n    this.focus = false;\n\n    this.setupFocusOnDom = (function(element) {\n      var updateFocus = (function() {\n        var hasFocus = document.activeElement == this.dom || document.activeElement == this.dom.firstChild;\n\n        if (this.focus != hasFocus)\n          this.focus = hasFocus;\n      }).bind(this);\n      element.addEventListener(\"focus\", updateFocus);\n      element.addEventListener(\"blur\",  updateFocus);\n    }).bind(this);\n\n    this.focusChanged.connect(this, (function(newVal) {\n      if (newVal == true) {\n        if (this.dom.firstChild != null)\n          this.dom.firstChild.focus();\n        document.qmlFocus = this;\n        this.$context.activeFocus = this;\n      } else if (document.qmlFocus == this) {\n        document.getElementsByTagName(\"BODY\")[0].focus();\n        document.qmlFocus = qmlEngine.rootContext().base;\n        this.$context.activeFocus = null;\n      }\n    }).bind(this));\n\n    this.$isUsingImplicitWidth = true;\n    this.$isUsingImplicitHeight = true;\n\n    this.anchors = new QObject(this);\n    createSimpleProperty(\"real\", this.anchors, \"left\");\n    createSimpleProperty(\"real\", this.anchors, \"right\");\n    createSimpleProperty(\"real\", this.anchors, \"top\");\n    createSimpleProperty(\"real\", this.anchors, \"bottom\");\n    createSimpleProperty(\"real\", this.anchors, \"horizontalCenter\");\n    createSimpleProperty(\"real\", this.anchors, \"verticalCenter\");\n    createSimpleProperty(\"real\", this.anchors, \"fill\");\n    createSimpleProperty(\"real\", this.anchors, \"centerIn\");\n    createSimpleProperty(\"real\", this.anchors, \"margins\");\n    createSimpleProperty(\"real\", this.anchors, \"leftMargin\");\n    createSimpleProperty(\"real\", this.anchors, \"rightMargin\");\n    createSimpleProperty(\"real\", this.anchors, \"topMargin\");\n    createSimpleProperty(\"real\", this.anchors, \"bottomMargin\");\n    this.anchors.leftChanged.connect(this, updateHGeometry);\n    this.anchors.rightChanged.connect(this, updateHGeometry);\n    this.anchors.topChanged.connect(this, updateVGeometry);\n    this.anchors.bottomChanged.connect(this, updateVGeometry);\n    this.anchors.horizontalCenterChanged.connect(this, updateHGeometry);\n    this.anchors.verticalCenterChanged.connect(this, updateVGeometry);\n    this.anchors.fillChanged.connect(this, updateHGeometry);\n    this.anchors.fillChanged.connect(this, updateVGeometry);\n    this.anchors.centerInChanged.connect(this, updateHGeometry);\n    this.anchors.centerInChanged.connect(this, updateVGeometry);\n    this.anchors.leftMarginChanged.connect(this, updateHGeometry);\n    this.anchors.rightMarginChanged.connect(this, updateHGeometry);\n    this.anchors.topMarginChanged.connect(this, updateVGeometry);\n    this.anchors.bottomMarginChanged.connect(this, updateVGeometry);\n    this.anchors.marginsChanged.connect(this, updateHGeometry);\n    this.anchors.marginsChanged.connect(this, updateVGeometry);\n\n    createSimpleProperty(\"list\", this, \"states\");\n    createSimpleProperty(\"string\", this, \"state\");\n    createSimpleProperty(\"list\", this, \"transitions\");\n    this.stateChanged.connect(this, function(newVal, oldVal) {\n        var oldState, newState, i, j, k;\n        for (i = 0; i < this.states.length; i++)\n            if (this.states[i].name === newVal)\n                newState = this.states[i];\n            else if (this.states[i].name === oldVal)\n                oldState = this.states[i];\n\n        var actions = this.$revertActions.slice();\n\n        // Get current values for revert actions\n        for (i in actions) {\n            var action  = actions[i];\n            action.from = action.target[action.property];\n        }\n        if (newState) {\n            var changes = newState.$getAllChanges();\n\n            // Get all actions we need to do and create actions to revert them\n            for (i = 0; i < changes.length; i++) {\n                var change = changes[i];\n\n                for (j = 0; j < change.$actions.length; j++) {\n                    var item = change.$actions[j];\n\n                    var action = {\n                        target: change.target,\n                        property: item.property,\n                        origValue: change.target.$properties[item.property].binding\n                                    || change.target.$properties[item.property].val,\n                        value: item.value,\n                        from: change.target[item.property],\n                        to: undefined,\n                        explicit: change.explicit\n                    };\n                    var found = false;\n                    for (k in actions)\n                        if (actions[k].target == action.target\n                            && actions[k].property == action.property) {\n                            found = true;\n                            actions[k] = action;\n                            break;\n                        }\n                    if (!found)\n                        actions.push(action);\n\n                    // Look for existing revert action, else create it\n                    var found = false;\n                    for (k = 0; k < this.$revertActions.length; k++)\n                        if (this.$revertActions[k].target == change.target\n                            && this.$revertActions[k].property == item.property) {\n                            if (!change.restoreEntryValues)\n                                this.$revertActions.splice(k, 1); // We don't want to revert, so remove it\n                            found = true;\n                            break;\n                        }\n                    if (!found && change.restoreEntryValues)\n                        this.$revertActions.push({\n                            target: change.target,\n                            property: item.property,\n                            value: change.target.$properties[item.property].binding\n                                        || change.target.$properties[item.property].val,\n                            from: undefined,\n                            to: change.target[item.property]\n                        });\n                }\n            }\n        }\n\n        // Set all property changes and fetch the actual values afterwards\n        // The latter is needed for transitions. We need to set all properties\n        // before we fetch the values because properties can be interdependent.\n        for (i in actions) {\n            var action = actions[i];\n            action.target.$properties[action.property].set(action.value, false, action.target,\n                                                           newState ? newState.$context: action.target.$context);\n        }\n        for (i in actions) {\n            var action = actions[i];\n            action.to = action.target[action.property];\n            if (action.explicit) {\n                action.target[action.property] = action.target[action.property]; //Remove binding\n                action.value = action.target[action.property];\n            }\n        }\n\n        // Find the best transition to use\n        var transition,\n            rating = 0;\n        for (var i = 0; i < this.transitions.length; i++) {\n            this.transitions[i].$stop(); // We need to stop running transitions, so let's do\n                                        // it while iterating through the transitions anyway\n            var curTransition = this.transitions[i],\n                curRating = 0;\n            if (curTransition.from == oldVal || curTransition.reversible && curTransition.from == newVal)\n                curRating += 2;\n            else if (curTransition.from == \"*\")\n                curRating++;\n            else\n                continue;\n            if (curTransition.to == newVal || curTransition.reversible && curTransition.to == oldVal)\n                curRating += 2;\n            else if (curTransition.to == \"*\")\n                curRating++;\n            else\n                continue;\n            if (curRating > rating) {\n                rating = curRating;\n                transition = curTransition;\n            }\n        }\n        if (transition)\n            transition.$start(actions);\n    });\n\n    var QMLRotation  = getConstructor('QtQuick', '2.0', 'Rotation');\n    var QMLScale     = getConstructor('QtQuick', '2.0', 'Scale');\n    var QMLTranslate = getConstructor('QtQuick', '2.0', 'Translate');\n\n    this.$updateTransform = function() {\n            var transform = \"rotate(\" + this.rotation + \"deg) scale(\" + this.scale + \")\";\n            var filter = \"\";\n            var transformStyle = \"preserve-3d\";\n\n            for (var i = 0; i < this.transform.length; i++) {\n                var t = this.transform[i];\n                if (t instanceof QMLRotation)\n                    transform += \" rotate3d(\" + t.axis.x + \", \" + t.axis.y + \", \" + t.axis.z + \", \" + t.angle + \"deg)\";\n                else if (t instanceof QMLScale)\n                    transform += \" scale(\" + t.xScale + \", \" + t.yScale + \")\";\n                else if (t instanceof QMLTranslate)\n                    transform += \" translate(\" + t.x + \"px, \" + t.y + \"px)\";\n                else if (typeof t.transformType != 'undefined') {\n                    if (t.transformType == 'filter')\n                      filter += t.operation + '(' + t.parameters + ') ';\n                }\n                else if (typeof t == 'string')\n                    transform += t;\n            }\n            if (typeof this.z == \"number\")\n              transform += \" translate3d(0, 0, \" + this.z + \"px)\";\n            this.dom.style.transform = transform;\n            this.dom.style.transformStyle = transformStyle;\n            this.dom.style.MozTransform = transform;    // Firefox\n            this.dom.style.webkitTransform = transform; // Chrome, Safari and Opera\n            this.dom.style.webkitTransformStyle = transformStyle;\n            this.dom.style.OTransform = transform;      // Opera\n            this.dom.style.msTransform = transform;     // IE\n            this.dom.style.filter = filter;\n            this.dom.style.msFilter = filter;     // IE\n            this.dom.style.webkitFilter = filter; // Chrome, Safari and Opera\n            this.dom.style.MozFilter = filter;    // Firefox\n    }\n    this.rotationChanged.connect(this, this.$updateTransform);\n    this.scaleChanged.connect(this, this.$updateTransform);\n    this.transformChanged.connect(this, this.$updateTransform);\n    this.visibleChanged.connect(this, function(newVal) {\n        this.css.visibility = newVal ? \"inherit\" : \"hidden\";\n    });\n    this.opacityChanged.connect(this, function(newVal) {\n        this.css.opacity = newVal;\n    });\n    this.clipChanged.connect(this, function(newVal) {\n        this.css.overflow = newVal ? \"hidden\" : \"visible\";\n    });\n    this.zChanged.connect(this, function(newVal) {\n        this.$updateTransform();\n    });\n    this.xChanged.connect(this, function(newVal) {\n        this.css.left = newVal + \"px\";\n    });\n    this.yChanged.connect(this, function(newVal) {\n        this.css.top = newVal + \"px\";\n    });\n    this.widthChanged.connect(this, function(newVal) {\n        this.css.width = newVal ? newVal + \"px\" : \"auto\";\n    });\n    this.heightChanged.connect(this, function(newVal) {\n        this.css.height = newVal ? newVal + \"px\" : \"auto\";\n    });\n\n    this.implicitHeight = 0;\n    this.implicitWidth = 0;\n    this.spacing = 0;\n    this.x = 0;\n    this.y = 0;\n    this.anchors.margins = 0;\n    this.visible = true;\n    this.opacity = 1;\n    this.$revertActions = [];\n    this.states = [];\n    this.transitions = [];\n    this.state = \"\";\n    this.transform = [];\n    this.rotation = 0;\n    this.scale = 1;\n\n    // Init size of root element\n    if (this.$parent === null) {\n        if (engine.rootElement == undefined) {\n            window.onresize = function() {\n                self.implicitHeight = window.innerHeight;\n                self.implicitWidth = window.innerWidth;\n            }\n            window.onresize();\n        } else {\n            this.implicitHeight = this.dom.offsetHeight;\n            this.implicitWidth = this.dom.offsetWidth;\n        }\n    }\n\n    this.$draw = function(c) {\n        var i;\n        if (this.visible !== false) { // Undefined means inherit, means true\n            if (this.$drawItem ) {\n                var rotRad = (this.rotation || 0) / 180 * Math.PI,\n                    rotOffsetX = Math.sin(rotRad) * this.width,\n                    rotOffsetY = Math.sin(rotRad) * this.height;\n                c.save();\n\n                // Handle rotation\n                // todo: implement transformOrigin\n                c.globalAlpha = this.opacity;\n                c.translate(this.left + rotOffsetX, this.top + rotOffsetY);\n                c.rotate(rotRad);\n                c.translate(-this.left, -this.top);\n                // Leave offset for drawing...\n                this.$drawItem(c);\n                c.translate(-rotOffsetX, -rotOffsetY);\n                c.restore();\n            }\n            for (i = 0; i < this.children.length; i++) {\n                if (this.children[i]\n                    && this.children[i].$draw) {\n                    this.children[i].$draw(c);\n                }\n            }\n        }\n    }\n}\n\nconstructors['Item'] = QMLItem;\n","function QMLPropertyChanges(meta) {\n    QMLBaseObject.call(this, meta);\n\n    createSimpleProperty(\"QtObject\", this, \"target\");\n    createSimpleProperty(\"bool\", this, \"explicit\");\n    createSimpleProperty(\"bool\", this, \"restoreEntryValues\");\n\n    this.explicit = false;\n    this.restoreEntryValues = true;\n    this.$actions = [];\n\n    this.$setCustomData = function(propName, value) {\n        this.$actions.push({\n            property: propName,\n            value: value\n        });\n    }\n}\n\nregisterQmlType('PropertyChanges', QMLPropertyChanges);\n","function QMLButton(meta) {\n    this.dom = document.createElement(\"button\");\n    QMLItem.call(this, meta);\n    var self = this;\n\n    this.dom.style.pointerEvents = \"auto\";\n    this.dom.innerHTML = \"<span></span>\";\n\n    createSimpleProperty(\"string\", this, \"text\");\n    this.clicked = Signal();\n\n    this.Component.completed.connect(this, function() {\n        this.implicitWidth = this.dom.firstChild.offsetWidth + 20;\n        this.implicitHeight = this.dom.firstChild.offsetHeight + 5;\n    });\n    this.textChanged.connect(this, function(newVal) {\n        this.dom.firstChild.innerHTML = newVal;\n        //TODO: Replace those statically sized borders\n        this.implicitWidth = this.dom.firstChild.offsetWidth + 20;\n        this.implicitHeight = this.dom.firstChild.offsetHeight + 5;\n    });\n\n    this.dom.onclick = function(e) {\n        self.clicked();\n    }\n}\n\nregisterQmlType('Button', QMLButton);\n","function QMLColumn(meta) {\n    QMLPositioner.call(this, meta);\n}\n\nQMLColumn.prototype.layoutChildren = function() {\n    var curPos = 0,\n        maxWidth = 0;\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (!(child.visible && child.opacity && child.width && child.height))\n            continue;\n        maxWidth = child.width > maxWidth ? child.width : maxWidth;\n\n        child.y = curPos;\n        curPos += child.height + this.spacing;\n    }\n    this.implicitWidth = maxWidth;\n    this.implicitHeight = curPos - this.spacing; // We want no spacing at the bottom side\n}\n\nregisterQmlType({\n  module: 'QtQuick',\n  name:   'Column',\n  versions: /.*/,\n  constructor: QMLColumn\n});\n","function QMLFlow(meta) {\n    QMLPositioner.call(this, meta);\n\n    this.Flow = {\n        LeftToRight: 0,\n        TopToBottom: 1\n    }\n\n    createSimpleProperty(\"enum\", this, \"flow\");\n    createSimpleProperty(\"enum\", this, \"layoutDirection\");\n    this.flowChanged.connect(this, this.layoutChildren);\n    this.layoutDirectionChanged.connect(this, this.layoutChildren);\n    this.widthChanged.connect(this, this.layoutChildren);\n\n    this.flow = this.Flow.LeftToRight;\n    this.layoutDirection = 0;\n}\n\nQMLFlow.prototype.layoutChildren = function() {\n    var curHPos = 0,\n        curVPos = 0,\n        rowSize = 0;\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (!(child.visible && child.opacity && child.width && child.height))\n            continue;\n\n        if (this.flow == this.Flow.LeftToRight) {\n            if (curHPos + child.width > this.width) {\n                curHPos = 0;\n                curVPos += rowSize + this.spacing;\n                rowSize = 0;\n            }\n            rowSize = child.height > rowSize ? child.height : rowSize;\n\n            child.x = this.layoutDirection == 1\n                    ? this.width - curHPos - child.width : curHPos;\n            child.y = curVPos;\n            curHPos += child.width + this.spacing;\n        } else {\n            if (curVPos + child.height > this.height) {\n                curVPos = 0;\n                curHPos += rowSize + this.spacing;\n                rowSize = 0;\n            }\n            rowSize = child.width > rowSize ? child.width : rowSize;\n\n            child.x = this.layoutDirection == 1\n                    ? this.width - curHPos - child.width : curHPos;\n            child.y = curVPos;\n            curVPos += child.height + this.spacing;\n        }\n    }\n    if (this.flow == 0)\n        this.implicitHeight = curVPos + rowSize;\n    else\n        this.implicitWidth = curHPos + rowSize;\n}\n\nregisterQmlType({\n  module:      'QtQuick',\n  name:        'Flow',\n  versions:    /.*/,\n  constructor: QMLFlow\n});\n","registerQmlType({\n  module: 'QtQuick',\n  name: 'Grid',\n  versions: /.*/,\n  constructor: QMLGrid\n});\n\nfunction QMLGrid(meta) {\n    QMLPositioner.call(this, meta);\n\n    this.Grid = {\n        LeftToRight: 0,\n        TopToBottom: 1\n    }\n\n    createSimpleProperty(\"int\", this, \"columns\");\n    createSimpleProperty(\"int\", this, \"rows\");\n    createSimpleProperty(\"enum\", this, \"flow\");\n    createSimpleProperty(\"enum\", this, \"layoutDirection\");\n    this.columnsChanged.connect(this, this.layoutChildren);\n    this.rowsChanged.connect(this, this.layoutChildren);\n    this.flowChanged.connect(this, this.layoutChildren);\n    this.layoutDirectionChanged.connect(this, this.layoutChildren);\n\n    this.flow = 0;\n    this.layoutDirection = 0;\n}\n\nQMLGrid.prototype.layoutChildren = function() {\n    var visibleItems = [],\n        r = 0, c = 0,\n        colWidth = [],\n        rowHeight = [],\n        gridWidth = -this.spacing,\n        gridHeight = -this.spacing,\n        curHPos = 0,\n        curVPos = 0;\n\n    // How many items are actually visible?\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.visible && child.opacity && child.width && child.height)\n            visibleItems.push(this.children[i]);\n    }\n\n    // How many rows and columns do we need?\n    if (!this.columns && !this.rows) {\n        c = 4;\n        r = Math.ceil(visibleItems.length / 4);\n    } else if (!this.columns) {\n        r = this.rows;\n        c = Math.ceil(visibleItems.length / r);\n    } else {\n        c = this.columns;\n        r = Math.ceil(visibleItems.length / c);\n    }\n\n    // How big are the colums/rows?\n    if (this.flow == 0)\n        for (var i = 0; i < r; i++) {\n            for (var j = 0; j < c; j++) {\n                var item = visibleItems[i*c+j];\n                if (!item)\n                    break;\n                if (!colWidth[j] || item.width > colWidth[j])\n                    colWidth[j] = item.width;\n                if (!rowHeight[i] || item.height > rowHeight[i])\n                    rowHeight[i] = item.height;\n            }\n        }\n    else\n        for (var i = 0; i < c; i++) {\n            for (var j = 0; j < r; j++) {\n                var item = visibleItems[i*r+j];\n                if (!item)\n                    break;\n                if (!rowHeight[j] || item.height > rowHeight[j])\n                    rowHeight[j] = item.height;\n                if (!colWidth[i] || item.width > colWidth[i])\n                    colWidth[i] = item.width;\n            }\n        }\n\n    for (var i in colWidth)\n        gridWidth += colWidth[i] + this.spacing;\n    for (var i in rowHeight)\n        gridHeight += rowHeight[i] + this.spacing;\n\n    // Do actual positioning\n    // When layoutDirection is RightToLeft we need oposite order of coumns\n    var step = this.layoutDirection == 1 ? -1 : 1,\n        startingPoint = this.layoutDirection == 1 ? c - 1 : 0,\n        endPoint = this.layoutDirection == 1 ? -1 : c;\n    if (this.flow == 0)\n        for (var i = 0; i < r; i++) {\n            for (var j = startingPoint; j !== endPoint; j += step) {\n                var item = visibleItems[i*c+j];\n                if (!item)\n                    break;\n                item.x = curHPos;\n                item.y = curVPos;\n\n                curHPos += colWidth[j] + this.spacing;\n            }\n            curVPos += rowHeight[i] + this.spacing;\n            curHPos = 0;\n        }\n    else\n        for (var i = startingPoint; i !== endPoint; i += step) {\n            for (var j = 0; j < r; j++) {\n                var item = visibleItems[i*r+j];\n                if (!item)\n                    break;\n                item.x = curHPos;\n                item.y = curVPos;\n\n                curVPos += rowHeight[j] + this.spacing;\n            }\n            curHPos += colWidth[i] + this.spacing;\n            curVPos = 0;\n        }\n\n    this.implicitWidth = gridWidth;\n    this.implicitHeight = gridHeight;\n}\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'Row',\n  versions: /.*/,\n  constructor: QMLRow\n});\n\nfunction QMLRow(meta) {\n    QMLPositioner.call(this, meta);\n\n    createSimpleProperty(\"enum\", this, \"layoutDirection\");\n    this.layoutDirectionChanged.connect(this, this.layoutChildren);\n    this.layoutDirection = 0;\n}\n\nQMLRow.prototype.layoutChildren = function() {\n    var curPos = 0,\n        maxHeight = 0,\n        // When layoutDirection is RightToLeft we need oposite order\n        i = this.layoutDirection == 1 ? this.children.length - 1 : 0,\n        endPoint = this.layoutDirection == 1 ? -1 : this.children.length,\n        step = this.layoutDirection == 1 ? -1 : 1;\n    for (; i !== endPoint; i += step) {\n        var child = this.children[i];\n        if (!(child.visible && child.opacity && child.width && child.height))\n            continue;\n        maxHeight = child.height > maxHeight ? child.height : maxHeight;\n\n        child.x = curPos;\n        curPos += child.width + this.spacing;\n    }\n    this.implicitHeight = maxHeight;\n    this.implicitWidth = curPos - this.spacing; // We want no spacing at the right side\n}\n","// Base object for all qml elements\nfunction QMLBaseObject(meta) {\n    QObject.call(this, meta.parent);\n    var i,\n        prop;\n\n    this.$draw = function(){};\n    this.$isComponentRoot = meta.isComponentRoot;\n    this.$context = meta.context;\n\n    // Component.onCompleted\n    this.Component = new QObject(this);\n    this.Component.completed = Signal([]);\n    engine.completedSignals.push(this.Component.completed);\n    this.completed = this.Component.completed;\n\n    this.Component.destruction = Signal([]);\n    this.destruction = this.Component.destruction;\n\n    // Component get own properties\n    var attributes = [];\n    for (var key in meta.object) {\n      if (meta.object.hasOwnProperty(key) &&\n          typeof meta.object[key] != 'undefined' && meta.object[key] != null &&\n          (meta.object[key].__proto__.constructor.name == 'QMLPropertyDefinition' ||\n           meta.object[key].__proto__.constructor.name == 'QMLAliasDefinition')) {\n        attributes.push(key);\n      }\n    }\n\n    this.Keys = new QObject(this);\n    this.Keys.asteriskPresed = Signal();\n    this.Keys.backPressed = Signal();\n    this.Keys.backtabPressed = Signal();\n    this.Keys.callPressed = Signal();\n    this.Keys.cancelPressed = Signal();\n    this.Keys.deletePressed = Signal();\n    for (var i = 0 ; i < 10 ; ++i)\n      this.Keys['digit'+i+'Pressed'] = Signal();\n    this.Keys.escapePressed = Signal();\n    this.Keys.flipPressed = Signal();\n    this.Keys.hangupPressed = Signal();\n    this.Keys.leftPressed = Signal();\n    this.Keys.menuPressed = Signal();\n    this.Keys.noPressed = Signal();\n    this.Keys.pressed = Signal();\n    this.Keys.released = Signal();\n    this.Keys.returnPressed = Signal();\n    this.Keys.rightPressed = Signal();\n    this.Keys.selectPressed = Signal();\n    this.Keys.spacePressed = Signal();\n    this.Keys.tabPressed = Signal();\n    this.Keys.upPressed = Signal();\n    this.Keys.volumeDownPressed = Signal();\n    this.Keys.volumeUpPressed = Signal();\n    this.Keys.yesPressed = Signal();\n\n    this.getAttributes = function() { return (attributes); }\n}\n\nregisterQmlType({\n    module: 'QtQuick',\n    name: 'QtObject',\n    versions: /.*/,\n    constructor: QMLBaseObject\n});\n","// TODO\nfunction QMLColor(val) {\n    return val;\n}\n\n","function QMLInteger(val) {\n    return (val|0);\n}\n","function QMLList(meta) {\n    var list = [];\n    if (meta.object instanceof Array)\n        for (var i in meta.object)\n            list.push(construct({object: meta.object[i], parent: meta.parent, context: meta.context }));\n    else if (meta.object instanceof QMLMetaElement)\n        list.push(construct({object: meta.object, parent: meta.parent, context: meta.context }));\n\n    return list;\n}\n","function QMLPositioner(meta) {\n    QMLItem.call(this, meta);\n\n    createSimpleProperty(\"int\", this, \"spacing\");\n    this.spacingChanged.connect(this, this.layoutChildren);\n    this.childrenChanged.connect(this, this.layoutChildren);\n    this.childrenChanged.connect(this, QMLPositioner.slotChildrenChanged);\n\n    this.spacing = 0;\n}\n\nQMLPositioner.slotChildrenChanged = function() {\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (!child.widthChanged.isConnected(this, this.layoutChildren))\n            child.widthChanged.connect(this, this.layoutChildren);\n        if (!child.heightChanged.isConnected(this, this.layoutChildren))\n            child.heightChanged.connect(this, this.layoutChildren);\n        if (!child.visibleChanged.isConnected(this, this.layoutChildren))\n            child.visibleChanged.connect(this, this.layoutChildren);\n        if (!child.opacityChanged.isConnected(this, this.layoutChildren))\n            child.opacityChanged.connect(this, this.layoutChildren);\n    }\n}\n\n","function QMLProperty(type, obj, name) {\n    this.obj = obj;\n    this.name = name;\n    this.changed = Signal([], {obj:obj});\n    this.binding = null;\n    this.objectScope = null;\n    this.componentScope = null;\n    this.value = undefined;\n    this.type = type;\n    this.animation = null;\n\n    // This list contains all signals that hold references to this object.\n    // It is needed when deleting, as we need to tidy up all references to this object.\n    this.$tidyupList = [];\n}\n\n// Updater recalculates the value of a property if one of the\n// dependencies changed\nQMLProperty.prototype.update = function() {\n    if (!this.binding)\n        return;\n\n    var oldVal = this.val;\n    evaluatingProperty = this;\n    this.val = this.binding.eval(this.objectScope, this.componentScope);\n    evaluatingProperty = undefined;\n\n    if (this.animation) {\n        this.animation.$actions = [{\n            target: this.animation.target || this.obj,\n            property: this.animation.property || this.name,\n            from: this.animation.from || oldVal,\n            to: this.animation.to || this.val\n        }];\n        this.animation.restart();\n    }\n\n    if (this.val !== oldVal)\n        this.changed(this.val, oldVal, this.name);\n}\n\n// Define getter\nQMLProperty.prototype.get = function() {\n    // If this call to the getter is due to a property that is dependant on this\n    // one, we need it to take track of changes\n    if (evaluatingProperty && !this.changed.isConnected(evaluatingProperty, QMLProperty.prototype.update))\n        this.changed.connect(evaluatingProperty, QMLProperty.prototype.update);\n\n    return this.val;\n}\n\n// Define setter\nQMLProperty.prototype.set = function(newVal, fromAnimation, objectScope, componentScope) {\n    var i,\n        oldVal = this.val;\n\n    if (newVal instanceof QMLBinding) {\n        if (!objectScope || !componentScope)\n            throw \"Internal error: binding assigned without scope\";\n        this.binding = newVal;\n        this.objectScope = objectScope;\n        this.componentScope = componentScope;\n\n        if (engine.operationState !== QMLOperationState.Init) {\n            if (!newVal.eval)\n                newVal.compile();\n\n            evaluatingProperty = this;\n            newVal = this.binding.eval(objectScope, componentScope);\n            evaluatingProperty = null;\n        } else {\n            engine.bindedProperties.push(this);\n            return;\n        }\n    } else {\n        if (!fromAnimation)\n            this.binding = null;\n        if (newVal instanceof Array)\n            newVal = newVal.slice(); // Copies the array\n    }\n\n    if (constructors[this.type] == QMLList) {\n        this.val = QMLList({ object: newVal, parent: this.obj, context: componentScope });\n    } else if (newVal instanceof QMLMetaElement) {\n        if (constructors[newVal.$class] == QMLComponent || constructors[this.type] == QMLComponent)\n            this.val = new QMLComponent({ object: newVal, parent: this.obj, context: componentScope });\n        else\n            this.val = construct({ object: newVal, parent: this.obj, context: componentScope });\n    } else if (newVal instanceof Object || !newVal) {\n        this.val = newVal;\n    } else {\n        this.val = constructors[this.type](newVal);\n    }\n\n    if (this.val !== oldVal) {\n        if (this.animation && !fromAnimation) {\n            this.animation.running = false;\n            this.animation.$actions = [{\n                target: this.animation.target || this.obj,\n                property: this.animation.property || this.name,\n                from: this.animation.from || oldVal,\n                to: this.animation.to || this.val\n            }];\n            this.animation.running = true;\n        }\n        if (this.obj.$syncPropertyToRemote instanceof Function && !fromAnimation) { // is a remote object from e.g. a QWebChannel\n            this.obj.$syncPropertyToRemote(this.name, newVal);\n        } else {\n            this.changed(this.val, oldVal, this.name);\n        }\n    }\n}\n\n\n","function QMLVariant(val) {\n    return val;\n}\n","// Base object for all qml thingies\nvar objectIds = 0;\nfunction QObject(parent) {\n    this.$parent = parent;\n    if (parent && parent.$tidyupList)\n        parent.$tidyupList.push(this);\n    // List of things to tidy up when deleting this object.\n    this.$tidyupList = [];\n    this.$properties = {};\n\n    this.objectId = objectIds++;\n    this.$delete = function() {\n        if (this.$Component)\n          this.$Component.destruction();\n\n        while (this.$tidyupList.length > 0) {\n            var item = this.$tidyupList[0];\n            if (item.$delete) // It's a QObject\n                item.$delete();\n            else // It must be a signal\n                item.disconnect(this);\n        }\n\n        for (var i in this.$properties) {\n            var prop = this.$properties[i];\n            while (prop.$tidyupList.length > 0)\n                prop.$tidyupList[0].disconnect(prop);\n        }\n\n        if (this.$parent && this.$parent.$tidyupList)\n            this.$parent.$tidyupList.splice(this.$parent.$tidyupList.indexOf(this), 1);\n\n        // must do this:\n        // 1) parent will be notified and erase object from it's children.\n        // 2) DOM node will be removed.\n        this.parent = undefined;\n    }\n}\n","function updateHGeometry(newVal, oldVal, propName) {\n    var anchors = this.anchors || this;\n    if (this.$updatingGeometry)\n        return;\n    this.$updatingGeometry = true;\n\n    var t, w, width, x, left, hC, right,\n        lM = anchors.leftMargin || anchors.margins,\n        rM = anchors.rightMargin || anchors.margins;\n\n    // Width\n    if (this.$isUsingImplicitWidth && propName == \"implicitWidth\")\n        width = this.implicitWidth;\n    else if (propName == \"width\")\n        this.$isUsingImplicitWidth = false;\n\n    // Position TODO: Layouts\n    if ((t = anchors.fill) !== undefined) {\n        if (!t.$properties.left.changed.isConnected(this, updateHGeometry))\n            t.$properties.left.changed.connect(this, updateHGeometry);\n        if (!t.$properties.width.changed.isConnected(this, updateHGeometry))\n            t.$properties.width.changed.connect(this, updateHGeometry);\n\n        this.$isUsingImplicitWidth = false;\n        width = t.width - lM - rM;\n        x = t.left - (this.parent ? this.parent.left : 0) + lM;\n        left = t.left + lM;\n        right = t.right - rM;\n        hC = (left + right) / 2;\n    } else if ((t = anchors.centerIn) !== undefined) {\n        if (!t.$properties.horizontalCenter.changed.isConnected(this, updateHGeometry))\n            t.$properties.horizontalCenter.changed.connect(this, updateHGeometry);\n\n        w = width || this.width;\n        hC = t.horizontalCenter;\n        x = hC - w / 2 - (this.parent ? this.parent.left : 0);\n        left = hC - w / 2;\n        right = hC + w / 2;\n    } else if ((t = anchors.left) !== undefined) {\n        left = t + lM\n        if ((u = anchors.right) !== undefined) {\n            right = u - rM;\n            this.$isUsingImplicitWidth = false;\n            width = right - left;\n            x = left - (this.parent ? this.parent.left : 0);\n            hC = (right + left) / 2;\n        } else if ((hC = anchors.horizontalCenter) !== undefined) {\n            this.$isUsingImplicitWidth = false;\n            width = (hC - left) * 2;\n            x = left - (this.parent ? this.parent.left : 0);\n            right = 2 * hC - left;\n        } else {\n            w = width || this.width;\n            x = left - (this.parent ? this.parent.left : 0);\n            right = left + w;\n            hC = left + w / 2;\n        }\n    } else if ((t = anchors.right) !== undefined) {\n        right = t - rM;\n        if ((hC = anchors.horizontalCenter) !== undefined) {\n            this.$isUsingImplicitWidth = false;\n            width = (right - hC) * 2;\n            x = 2 * hC - right - (this.parent ? this.parent.left : 0);\n            left = 2 * hC - right;\n        } else {\n            w = width || this.width;\n            x = right - w - (this.parent ? this.parent.left : 0);\n            left = right - w;\n            hC = right - w / 2;\n        }\n    } else if ((hC = anchors.horizontalCenter) !== undefined) {\n        w = width || this.width;\n        x = hC - w / 2 - (this.parent ? this.parent.left : 0);\n        left = hC - w / 2;\n        right = hC + w / 2;\n    } else {\n        if (this.parent && !this.parent.$properties.left.changed.isConnected(this, updateHGeometry))\n            this.parent.$properties.left.changed.connect(this, updateHGeometry);\n\n        w = width || this.width;\n        left = this.x + (this.parent ? this.parent.left : 0);\n        right = left + w;\n        hC = left + w / 2;\n    }\n\n    if (left !== undefined)\n        this.left = left;\n    if (hC !== undefined)\n        this.horizontalCenter = hC;\n    if (right !== undefined)\n        this.right = right;\n    if (x !== undefined)\n        this.x = x;\n    if (width !== undefined)\n        this.width = width;\n\n    this.$updatingGeometry = false;\n}\n\nfunction updateVGeometry(newVal, oldVal, propName) {\n    var anchors = this.anchors || this;\n    if (this.$updatingGeometry)\n        return;\n    this.$updatingGeometry = true;\n\n    var t, w, height, y, top, vC, bottom,\n        tM = anchors.topMargin || anchors.margins,\n        bM = anchors.bottomMargin || anchors.margins;\n\n    // Height\n    if (this.$isUsingImplicitHeight && propName == \"implicitHeight\")\n        height = this.implicitHeight;\n    else if (propName == \"height\")\n        this.$isUsingImplicitHeight = false;\n\n    // Position TODO: Layouts\n    if ((t = anchors.fill) !== undefined) {\n        if (!t.$properties.top.changed.isConnected(this, updateVGeometry))\n            t.$properties.top.changed.connect(this, updateVGeometry);\n        if (!t.$properties.height.changed.isConnected(this, updateVGeometry))\n            t.$properties.height.changed.connect(this, updateVGeometry);\n\n        this.$isUsingImplicitHeight = false;\n        height = t.height - tM - bM;\n        y = t.top - (this.parent ? this.parent.top : 0) + tM;\n        top = t.top + tM;\n        bottom = t.bottom - bM;\n        vC = (top + bottom) / 2;\n    } else if ((t = anchors.centerIn) !== undefined) {\n        if (!t.$properties.verticalCenter.changed.isConnected(this, updateVGeometry))\n            t.$properties.verticalCenter.changed.connect(this, updateVGeometry);\n\n        w = height || this.height;\n        vC = t.verticalCenter;\n        y = vC - w / 2 - (this.parent ? this.parent.top : 0);\n        top = vC - w / 2;\n        bottom = vC + w / 2;\n    } else if ((t = anchors.top) !== undefined) {\n        top = t + tM\n        if ((u = anchors.bottom) !== undefined) {\n            bottom = u - bM;\n            this.$isUsingImplicitHeight = false;\n            height = bottom - top;\n            y = top - (this.parent ? this.parent.top : 0);\n            vC = (bottom + top) / 2;\n        } else if ((vC = anchors.verticalCenter) !== undefined) {\n            this.$isUsingImplicitHeight = false;\n            height = (vC - top) * 2;\n            y = top - (this.parent ? this.parent.top : 0);\n            bottom = 2 * vC - top;\n        } else {\n            w = height || this.height;\n            y = top - (this.parent ? this.parent.top : 0);\n            bottom = top + w;\n            vC = top + w / 2;\n        }\n    } else if ((t = anchors.bottom) !== undefined) {\n        bottom = t - bM;\n        if ((vC = anchors.verticalCenter) !== undefined) {\n            this.$isUsingImplicitHeight = false;\n            height = (bottom - vC) * 2;\n            y = 2 * vC - bottom - (this.parent ? this.parent.top : 0);\n            top = 2 * vC - bottom;\n        } else {\n            w = height || this.height;\n            y = bottom - w - (this.parent ? this.parent.top : 0);\n            top = bottom - w;\n            vC = bottom - w / 2;\n        }\n    } else if ((vC = anchors.verticalCenter) !== undefined) {\n        w = height || this.height;\n        y = vC - w / 2 - (this.parent ? this.parent.top : 0);\n        top = vC - w / 2;\n        bottom = vC + w / 2;\n    } else {\n        if (this.parent && !this.parent.$properties.top.changed.isConnected(this, updateVGeometry))\n            this.parent.$properties.top.changed.connect(this, updateVGeometry);\n\n        w = height || this.height;\n        top = this.y + (this.parent ? this.parent.top : 0);\n        bottom = top + w;\n        vC = top + w / 2;\n    }\n\n    if (top !== undefined)\n        this.top = top;\n    if (vC !== undefined)\n        this.verticalCenter = vC;\n    if (bottom !== undefined)\n        this.bottom = bottom;\n    if (y !== undefined)\n        this.y = y;\n    if (height !== undefined)\n        this.height = height;\n\n    this.$updatingGeometry = false;\n}\n\n\n","/**\n * Create QML binding.\n * @param {Variant} val Sourcecode or function representing the binding\n * @param {Array} tree Parser tree of the binding\n * @return {Object} Object representing the binding\n */\nglobal.QMLBinding = function(val, tree) {\n    // this.function states whether the binding is a simple js statement or a function containing a\n    // return statement. We decide this on whether it is a code block or not. If it is, we require a\n    // return statement. If it is a code block it could though also be a object definition, so we\n    // need to check that as well (it is, if the content is labels).\n    this.function = tree && tree[0] == \"block\" && tree[1][0] && tree[1][0][0] !== \"label\";\n    this.src = val;\n}\n\nglobal.QMLBinding.prototype.toJSON = function() {\n    return {src: this.src,\n        deps: JSON.stringify(this.deps),\n        tree: JSON.stringify(this.tree) };\n}\n\n/**\n * Compile binding. Afterwards you may call binding.eval to evaluate.\n */\nQMLBinding.prototype.compile = function() {\n    this.eval = new Function('__executionObject', '__executionContext', \"with(__executionContext) with(__executionObject) \" + ( this.function ? \"\" : \"return \" ) + this.src);\n}\n","/* @license\n\n  Copyright (c) 2011 Lauri Paimen <lauri@paimen.info>\n  Copyright (c) 2015 Pavel Vasev <pavel.vasev@gmail.com> - initial\n                     and working import implementation.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions\n  are met:\n\n      * Redistributions of source code must retain the above\n        copyright notice, this list of conditions and the following\n        disclaimer.\n\n      * Redistributions in binary form must reproduce the above\n        copyright notice, this list of conditions and the following\n        disclaimer in the documentation and/or other materials\n        provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n  THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  SUCH DAMAGE.\n*/\n\n\n/*\n * Misc classes for importing files.\n *\n * Currently the file contains a lot of unused code for future\n * purposes. Most of it can be rewritten as there is now Javascript parser\n * available.\n *\n * Exports:\n *\n * - getUrlContents(url) -- get URL contents. Returns contents or false in\n *   error.\n *\n * - Some other stuff not currently used/needed.\n *\n *\n */\n(function() {\n\nfunction parseQML(file) {\n    var contents = getUrlContents(file + \".js\");\n    if (contents) {\n        console.log(\"Using pre-processed content for \" + file);\n        return new Function(\"return \" + contents)();\n    } else {\n        contents = getUrlContents(file);\n        if (contents) {\n            // todo: use parser/compiler here\n            console.log(\"todo: add parser to import.js \" + file);\n        } else {\n            console.log(\"warn: Fetch failed for \" + file);\n        }\n    }\n}\n\n\n/**\n * Get URL contents. EXPORTED.\n * @param url {String} Url to fetch.\n * @param skipExceptions {bool} when turned on, ignore exeptions and return false. This feature is used by readQmlDir.\n * @private\n * @return {mixed} String of contents or false in errors.\n *\n * Q1: can someone provide use-case when we need caching here?\n * A1:\n * Q2: should errors be cached? (now they aren't)\n * A2:\n \n * Q3: split getUrlContents into: getUrlContents, getUrlContentsWithCaching, getUrlContentsWithoutErrors..\n */\ngetUrlContents = function (url, skipExceptions) {\n    if (typeof urlContentCache[url] == 'undefined') {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", url, false);\n\n      if (skipExceptions)\n        { try { xhr.send(null); } catch (e) { return false; } } /* it is OK to not have logging here, because DeveloperTools already will have red log record */\n      else\n        xhr.send(null);\n\n      if (xhr.status != 200 && xhr.status != 0) { // 0 if accessing with file://\n          console.log(\"Retrieving \" + url + \" failed: \" + xhr.responseText, xhr);\n          return false;\n      }\n      urlContentCache[url] = xhr.responseText;\n    }\n    return urlContentCache[url];\n}\nif (typeof global.urlContentCache == 'undefined')\n  global.urlContentCache = {};\n\n/**\n * Read qmldir spec file at directory. EXPORTED.\n * @param url Url of the directory\n * @return {Object} Object, where .internals lists qmldir internal references\n *                          and .externals lists qmldir external references.\n */\n\n/*  Note on how importing works.\n\n   * parseQML gives us `tree.$imports` variable, which contains information from `import` statements.\n\n   * After each call to parseQML, we call engine.loadImports(tree.$imports).\n     It in turn invokes readQmlDir() calls for each import, with respect to current component base path and engine.importPathList().\n\n   * We keep all component names from all qmldir files in global variable `engine.qmldir`.\n   \n   * In construct() function, we use `engine.qmldir` for component url lookup.\n\n   Reference import info: http://doc.qt.io/qt-5/qtqml-syntax-imports.html \n   Also please look at notes and TODO's in qtcore.js::loadImports() and qtcore.js::construct() methods.\n*/\n \nreadQmlDir = function (url) {\n    // in case 'url' is empty, do not attach \"/\"\n    // Q1: when this happen?\n    var qmldirFileUrl = url.length > 0 ? (url + \"/qmldir\") : \"qmldir\";\n\n    var qmldir = getUrlContents( qmldirFileUrl, true), // loading url contents with skipping errors\n        lines,\n        line,\n        internals = {},\n        externals = {},\n        match,\n        i;\n\n    if (qmldir === false) {\n        return false;\n    }\n\n    // we have to check for \"://\" \n    // In that case, item path is meant to be absolute, and we have no need to prefix it with base url\n    function makeurl( path ) {\n       if (path.indexOf(\"://\") > 0) return path;\n       return url + \"/\" + path;\n    }\n\n    lines = qmldir.split(/\\r?\\n/);\n    for (i = 0; i < lines.length; i++) {\n        // trim\n        line = lines[i].replace(/^\\s+|\\s+$/g, \"\");\n        if (!line.length || line[0] == \"#\") {\n            // Empty line or comment\n            continue;\n        }\n        match = line.split(/\\s+/);\n        if (match.length == 2 || match.length == 3) {\n            if (match[0] == \"plugin\") {\n                console.log(url + \": qmldir plugins are not supported!\");\n            } else if (match[0] == \"internal\") {\n                internals[match[1]] = { url: makeurl( match[2] ) };\n            } else {\n                if (match.length == 2) {\n                    externals[match[0]] = { url: makeurl( match[1] ) };\n                } else {\n                    externals[match[0]] = { url: makeurl( match[2] ), version: match[1] };\n                }\n            }\n        } else {\n            console.log(url + \": unmatched: \" + line);\n        }\n    }\n    return {internals: internals, externals: externals};\n}\n\n\n/**\n * Import and parse javascript file. EXPORTED.\n * @return {object} Object which has \"var\"s and functions from file as keys, or\n *         undefined if operation fails\n */\nimportJs = function (filename) {\n\n    // todo: .pragma support\n\n    // Exports as follow:\n    // function a() { function b() {} } exports only a.\n    // var a = function b(){} exports a and b. Not sure if b should be exported.\n    //                        rare case, however.\n    // var a = function(){} exports only a.\n\n    var i,\n        src = getUrlContents(filename),\n        exports = [];\n\n    if (src === false) {\n        return;\n    }\n\n    // Analyse source\n    exports = readExports(src);\n    console.log(filename + \" exports:\", exports);\n\n    // Wrap source to function to retain private scope of the variables.\n    // Make that function return an object.\n    // That object contains getters and setters for exported stuff.\n    // Add () to execute the function.\n    src += \";return {\";\n    for (i = 0; i < exports.length; i++) {\n        // create getters and setters for properties\n        // keeps variables synced better\n        src += \"get \" + exports[i] + \"(){return \" + exports[i] + \"},\";\n        src += \"set \" + exports[i] + \"(){\" + exports[i] + \" = arguments[0]},\";\n        // without getters and setters:\n        // src += exports[i] + \":\" + exports[i] + \",\";\n    }\n    src += \"}\";\n\n    // evaluate source to get the object.\n    return new Function(src)();\n}\n\n/**\n * Read code for variables and functions which are exported to qml\n * @private\n * @param src source code\n * @return Array Array of local variable names to export\n */\nfunction readExports(src) {\n\n    // Eat src until str is found. Recurse if recursive set.\n    function eatUntil(src, str, recursive) {\n        var i;\n        if (!recursive) {\n            i = src.indexOf(str);\n            if (i == -1) {\n                console.log(\"eof encountered, \" + str + \" expected.\");\n                return \"\";\n            }\n        } else {\n            i = 0;\n            while (i < src.length) {\n                if (src.substr(i, str.length) == str) {\n                    break;\n                }\n                switch(src[i]) {\n                 case \"{\": // inner block\n                    src = eatUntil(src.substr(i + 1), \"}\", true );\n                    i = 0;\n                    break;\n                 case \"(\": // Parentheses\n                    src = eatUntil(src.substr(i + 1), \")\", true );\n                    i = 0;\n                    break;\n                 case \"/\": // Possible beginning of comment\n                    if (src[i + 1] == \"/\") {\n                        src = eatUntil(src.substr(i + 1), \"\\n\");\n                        i = 0;\n                    } else if (src[i + 1] == \"*\") {\n                        src = eatUntil(src.substr(i + 1), \"*/\");\n                        i = 0;\n                    } else {\n                        i++;\n                    }\n                    break;\n                 default:\n                    i++;\n                }\n            }\n        }\n        return src.substr(i + str.length);\n    }\n\n    // Strip comments and code blocks from the input source\n    // This is quite similar with eatCodeBlock but still a bit different.\n    // If either section has bugs, check the other section, too!\n    var i = 0,\n        // Code without blocks and comments\n        semi = \"\",\n        // todo: these doesn't match with exports containing \"$\"\n        matcher = /var\\s+\\w+|function\\s+\\w+/g,\n        matches,\n        tmp,\n        exports = [];\n\n    while (i < src.length) {\n        switch (src[i]) {\n         case \"{\": // code block\n            src = eatUntil(src.substr(i + 1), \"}\", true);\n            i = 0;\n            break;\n         case \"(\": // parentheses\n            src = eatUntil(src.substr(i + 1), \")\", true);\n            i = 0;\n            break;\n         case \"/\": // comment\n            if (src[i + 1] == \"/\") {\n                src = eatUntil(src.substr(i + 1), \"\\n\");\n                i = 0;\n            } else if (src[i + 1] == \"*\") {\n                src = eatUntil(src.substr(i + 1), \"*/\");\n                i = 0;\n            } else {\n                semi += src[i];\n                i++;\n            }\n            break;\n        default:\n            semi += src[i];\n            i++;\n            break;\n        }\n    }\n\n    // Search exports from semi\n    matches = semi.match(matcher);\n\n    // matches now contain strings defined in matcher. Re-match these to get\n    // exports. Matching can be done in one step, but I couldn't get it working\n    // so bear this extra step.\n    for (i = 0; i < matches.length; i++) {\n        tmp = /\\w+\\s+(\\w+)/.exec(matches[i]);\n        if (tmp) {\n            exports.push(tmp[1]);\n        }\n    }\n    return exports;\n}\n\n})();\n","global.qrc = {\n  includesFile: function(path) {\n    return typeof qrc[path] != 'undefined';\n  }\n};\n","global.Qt = {\n  rgba: function(r,g,b,a) {\n    return \"rgba(\"\n      + Math.round(r * 255) + \",\"\n      + Math.round(g * 255) + \",\"\n      + Math.round(b * 255) + \",\"\n      + a + \")\";\n  },\n  openUrlExternally: function(url) {\n    page = window.open(url, '_blank');\n    page.focus();\n  },\n  // Load file, parse and construct as Component (.qml)\n  //FIXME: remove the parameter executionContext and get it autonomously.\n  createComponent: function(name, executionContext) {\n    if (name in engine.components)\n        return engine.components[name];\n\n    var nameIsUrl = name.indexOf(\"//\") >= 0 || name.indexOf(\":/\") >= 0; // e.g. // in protocol, or :/ in disk urls (D:/)\n\n    // Do not perform path lookups if name starts with @ sign.\n    // This is used when we load components from qmldir files\n    // because in that case we do not need any lookups.\n    if (name.length > 0 && name[0] == \"@\") {\n      nameIsUrl = true;\n      name = name.substr( 1,name.length-1 );\n    }\n\n    var file = nameIsUrl ? name : engine.$basePath + name;\n\n    var src = getUrlContents(file, true);\n    // if failed to load, and provided name is not direct url, try to load from dirs in importPathList()\n    if (src==false && !nameIsUrl) {\n      var moredirs = engine.importPathList();\n\n      for (var i=0; i<moredirs.length; i++) {\n        file = moredirs[i] + name;\n        src = getUrlContents(file, true);\n        if (src !== false) break;\n      }\n    }\n\n    // When createComponent failed to load content from all probable sources, it should return undefined.\n    if (src === false)\n      return undefined;\n\n    var tree = parseQML(src);\n\n    if (tree.$children.length !== 1)\n        console.error(\"A QML component must only contain one root element!\");\n\n    var component = new QMLComponent({ object: tree, context: executionContext });\n    component.$basePath = engine.extractBasePath( file );\n    component.$imports = tree.$imports;\n    component.$file = file; // just for debugging\n\n    engine.loadImports( tree.$imports,component.$basePath );\n\n    engine.components[name] = component;\n    return component;\n  },\n\n    // Returns url resolved relative to the URL of the caller.\n  // http://doc.qt.io/qt-5/qml-qtqml-qt.html#resolvedUrl-method\n  resolvedUrl: function(url)\n  {\n    if (!url || !url.substr) // url is not a string object\n      return url;\n\n    // Must check for cases: D:/, file://, http://, or slash at the beginning. \n    // This means the url is absolute => we have to skip processing (except removing dot segments).\n    if (url == \"\" || url.indexOf(\":/\") != -1 || url.indexOf(\"/\") == 0)\n      return engine.removeDotSegments( url );\n\n    // we have $basePath variable placed in context of \"current\" document\n    // this is done in construct() function\n\n    // let's go to the callers and inspect their arguments\n    // The 2-nd argument of the callers we hope is context object\n    // e.g. see calling signature of bindings and signals\n\n    // Actually Qt cpp code is doing the same; the difference is that they know calling context\n    // https://qt.gitorious.org/qt/qtdeclarative/source/eeaba26596d447c531dfac9d6e6bf5cfe4537813:src/qml/qml/v8/qqmlbuiltinfunctions.cpp#L833\n\n    var detectedBasePath = \"\";\n    var currentCaller = Qt.resolvedUrl.caller;\n    var maxcount = 10;\n    while (maxcount-- > 0 && currentCaller) {\n      if (currentCaller.arguments[1] && currentCaller.arguments[1][\"$basePath\"])\n      {\n        detectedBasePath = currentCaller.arguments[1][\"$basePath\"];\n        break;\n      }\n      currentCaller = currentCaller.caller;\n    }\n\n    return engine.removeDotSegments( detectedBasePath + url )\n  },\n\n  // Buttons masks\n  LeftButton: 1,\n  RightButton: 2,\n  MiddleButton: 4,\n  // Modifiers masks\n  NoModifier: 0,\n  ShiftModifier: 1,\n  ControlModifier: 2,\n  AltModifier: 4,\n  MetaModifier: 8,\n  KeypadModifier: 16, // Note: Not available in web\n  // Layout directions\n  LeftToRight: 0,\n  RightToLeft: 1,\n  // Orientations\n  Vertical: 0,\n  Horizontal: 1,\n  // Keys\n  Key_Escape: 27,\n  Key_Tab: 9,\n  Key_Backtab: 245,\n  Key_Backspace: 8,\n  Key_Return: 13,\n  Key_Enter: 13,\n  Key_Insert: 45,\n  Key_Delete: 46,\n  Key_Pause: 19,\n  Key_Print: 42,\n  Key_SysReq: 0,\n  Key_Clear: 12,\n  Key_Home: 36,\n  Key_End: 35,\n  Key_Left: 37,\n  Key_Up: 38,\n  Key_Right: 39,\n  Key_Down: 40,\n  Key_PageUp: 33,\n  Key_PageDown: 34,\n  Key_Shift: 16,\n  Key_Control: 17,\n  Key_Meta: 91,\n  Key_Alt: 18,\n  Key_AltGr: 0,\n  Key_CapsLock: 20,\n  Key_NumLock: 144,\n  Key_ScrollLock: 145,\n  Key_F1: 112, Key_F2: 113, Key_F3: 114, Key_F4: 115, Key_F5: 116, Key_F6: 117, Key_F7: 118, Key_F8: 119, Key_F9: 120, Key_F10: 121, Key_F11: 122, Key_F12: 123, Key_F13: 124, Key_F14: 125, Key_F15: 126, Key_F16: 127, Key_F17: 128, Key_F18: 129, Key_F19: 130, Key_F20: 131, Key_F21: 132, Key_F22: 133, Key_F23: 134, Key_F24: 135, Key_F25: 0, Key_F26: 0, Key_F27: 0, Key_F28: 0, Key_F29: 0, Key_F30: 0, Key_F31: 0, Key_F32: 0, Key_F33: 0, Key_F34: 0, Key_F35: 0,\n  Key_Super_L: 0,\n  Key_Super_R: 0,\n  Key_Menu: 0,\n  Key_Hyper_L: 0,\n  Key_Hyper_R: 0,\n  Key_Help: 6,\n  Key_Direction_L: 0,\n  Key_Direction_R: 0,\n  Key_Space: 32,\n  Key_Any:   32,\n  Key_Exclam: 161,\n  Key_QuoteDbl: 162,\n  Key_NumberSign: 163,\n  Key_Dollar: 164,\n  Key_Percent: 165,\n  Key_Ampersant: 166,\n  Key_Apostrophe: 222,\n  Key_ParenLeft: 168,\n  Key_ParenRight: 169,\n  Key_Asterisk: 170,\n  Key_Plus: 171,\n  Key_Comma: 188,\n  Key_Minus: 173,\n  Key_Period: 190,\n  Key_Slash: 191,\n  Key_0: 48, Key_1: 49, Key_2: 50, Key_3: 51, Key_4: 52, Key_5: 53, Key_6: 54, Key_7: 55, Key_8: 56, Key_9: 57,\n  Key_Colon: 58,\n  Key_Semicolon: 59,\n  Key_Less: 60,\n  Key_Equal: 61,\n  Key_Greater: 62,\n  Key_Question: 63,\n  Key_At: 64,\n  Key_A: 65, Key_B: 66, Key_C: 67, Key_D: 68, Key_E: 69, Key_F: 70, Key_G: 71, Key_H: 72, Key_I: 73, Key_J: 74, Key_K: 75, Key_L: 76, Key_M: 77, Key_N: 78, Key_O: 79, Key_P: 80, Key_Q: 81, Key_R: 82, Key_S: 83, Key_T: 84, Key_U: 85, Key_V: 86, Key_W: 87, Key_X: 88, Key_Y: 89, Key_Z: 90,\n  Key_BracketLeft: 219,\n  Key_Backslash: 220,\n  Key_BracketRight: 221,\n  Key_AsciiCircum: 160,\n  Key_Underscore: 167,\n  Key_QuoteLeft: 0,\n  Key_BraceLeft: 174,\n  Key_Bar: 172,\n  Key_BraceRight: 175,\n  Key_AsciiTilde: 176,\n  Key_Back: 0,\n  Key_Forward: 0,\n  Key_Stop: 0,\n  Key_VolumeDown: 182,\n  Key_VolumeUp: 183,\n  Key_VolumeMute: 181,\n  Key_Yes: 0,\n  Key_multiply: 106,\n  Key_add: 107,\n  Key_substract: 109,\n  Key_divide: 111,\n  Key_News: 0,\n  Key_OfficeHome: 0,\n  Key_Option: 0,\n  Key_Paste: 0,\n  Key_Phone: 0,\n  Key_Calendar: 0,\n  Key_Reply: 0,\n  Key_Reload: 0,\n  Key_RotateWindows: 0,\n  Key_RotationPB: 0,\n  Key_RotationKB: 0,\n  Key_Save: 0,\n  Key_Send: 0,\n  Key_Spell: 0,\n  Key_SplitScreen: 0,\n  Key_Support: 0,\n  Key_TaskPane: 0,\n  Key_Terminal: 0,\n  Key_Tools: 0,\n  Key_Travel: 0,\n  Key_Video: 0,\n  Key_Word: 0,\n  Key_Xfer: 0,\n  Key_ZoomIn: 0,\n  Key_ZoomOut: 0,\n  Key_Away: 0,\n  Key_Messenger: 0,\n  Key_WebCam: 0,\n  Key_MailForward: 0,\n  Key_Pictures: 0,\n  Key_Music: 0,\n  Key_Battery: 0,\n  Key_Bluetooth: 0,\n  Key_WLAN: 0,\n  Key_UWB: 0,\n  Key_AudioForward: 0,\n  Key_AudioRepeat: 0,\n  Key_AudioRandomPlay: 0,\n  Key_Subtitle: 0,\n  Key_AudioCycleTrack: 0,\n  Key_Time: 0,\n  Key_Hibernate: 0,\n  Key_View: 0,\n  Key_TopMenu: 0,\n  Key_PowerDown: 0,\n  Key_Suspend: 0,\n  Key_ContrastAdjust: 0,\n  Key_MediaLast: 0,\n  Key_unknown: -1,\n  Key_Call: 0,\n  Key_Camera: 0,\n  Key_CameraFocus: 0,\n  Key_Context1: 0,\n  Key_Context2: 0,\n  Key_Context3: 0,\n  Key_Context4: 0,\n  Key_Flip: 0,\n  Key_Hangup: 0,\n  Key_No: 0,\n  Key_Select: 93,\n  Key_Yes: 0,\n  Key_ToggleCallHangup: 0,\n  Key_VoiceDial: 0,\n  Key_LastNumberRedial: 0,\n  Key_Execute: 43,\n  Key_Printer: 42,\n  Key_Play: 250,\n  Key_Sleep: 95,\n  Key_Zoom: 251,\n  Key_Cancel: 3\n}\n","/**\n * Creates and returns a signal with the parameters specified in @p params.\n *\n * @param params Array with the parameters of the signal. Each element has to be\n *               an object with the two properties \"type\" and \"name\" specifying\n *               the datatype of the parameter and its name. The type is\n *               currently ignored.\n * @param options Options that allow finetuning of the signal.\n */\nglobal.Signal = function Signal(params, options) {\n    options = options || {};\n    var connectedSlots = [];\n    var obj = options.obj\n\n    var signal = function() {\n        for (var i in connectedSlots)\n            try {\n                connectedSlots[i].slot.apply(connectedSlots[i].thisObj, arguments);\n            } catch(err) {\n                console.log(err.message);\n            }\n    };\n    signal.parameters = params || [];\n    signal.connect = function() {\n        if (arguments.length == 1)\n            connectedSlots.push({thisObj: global, slot: arguments[0]});\n        else if (typeof arguments[1] == 'string' || arguments[1] instanceof String) {\n            if (arguments[0].$tidyupList && arguments[0] !== obj)\n                arguments[0].$tidyupList.push(this);\n            connectedSlots.push({thisObj: arguments[0], slot: arguments[0][arguments[1]]});\n        } else {\n            if (arguments[0].$tidyupList && (!obj || (arguments[0] !== obj && arguments[0] !== obj.$parent)))\n                arguments[0].$tidyupList.push(this);\n            connectedSlots.push({thisObj: arguments[0], slot: arguments[1]});\n        }\n\n        // Notify object of connect\n        if (options.obj && options.obj.$connectNotify) {\n            options.obj.$connectNotify(options);\n        }\n\n    }\n    signal.disconnect = function() {\n        var callType = arguments.length == 1 ? (arguments[0] instanceof Function ? 1 : 2)\n                       : (typeof arguments[1] == 'string' || arguments[1] instanceof String) ? 3 : 4;\n        for (var i = 0; i < connectedSlots.length; i++) {\n            var item = connectedSlots[i];\n            if ((callType == 1 && item.slot == arguments[0])\n                || (callType == 2 && item.thisObj == arguments[0])\n                || (callType == 3 && item.thisObj == arguments[0] && item.slot == arguments[0][arguments[1]])\n                || (item.thisObj == arguments[0] && item.slot == arguments[1])\n            ) {\n                if (item.thisObj)\n                    item.thisObj.$tidyupList.splice(item.thisObj.$tidyupList.indexOf(this), 1);\n                connectedSlots.splice(i, 1);\n                i--; // We have removed an item from the list so the indexes shifted one backwards\n            }\n        }\n\n        // Notify object of disconnect\n        if (options.obj && options.obj.$disconnectNotify) {\n            options.obj.$disconnectNotify(options);\n        }\n    }\n    signal.isConnected = function() {\n        var callType = arguments.length == 1 ? 1\n                       : (typeof arguments[1] == 'string' || arguments[1] instanceof String) ? 2 : 3;\n        for (var i in connectedSlots) {\n            var item = connectedSlots[i];\n            if ((callType == 1 && item.slot == arguments[0])\n                || (callType == 2 && item.thisObj == arguments[0] && item.slot == arguments[0][arguments[1]])\n                || (item.thisObj == arguments[0] && item.slot == arguments[1])\n            )\n                return true;\n        }\n        return false;\n    }\n    return signal;\n}\n\n","global.Font = {\n  // Capitalization\n  MixedCase: \"none\",\n  AllUppercase: \"uppercase\",\n  AllLowercase: \"lowercase\",\n  SmallCaps: \"smallcaps\",\n  Capitalize: \"capitalize\",\n  // Weight\n  Light: \"lighter\",\n  Normal: \"normal\",\n  DemiBold: \"600\",\n  Bold: \"bold\",\n  Black: \"bolder\",\n}\n","global.Easing = {\n  Linear: 1,\n  InQuad: 2,          OutQuad: 3,     InOutQuad: 4,           OutInQuad: 5,\n  InCubic: 6,         OutCubic: 7,    InOutCubic: 8,          OutInCubic: 9,\n  InQuart: 10,        OutQuart: 11,   InOutQuart: 12,         OutInQuart: 13,\n  InQuint: 14,        OutQuint: 15,   InOutQuint: 16,         OutInQuint: 17,\n  InSine: 18,         OutSine: 19,    InOutSine: 20,          OutInSine: 21,\n  InExpo: 22,         OutExpo: 23,    InOutExpo: 24,          OutInExpo: 25,\n  InCirc: 26,         OutCirc: 27,    InOutCirc: 28,          OutInCirc: 29,\n  InElastic: 30,      OutElastic: 31, InOutElastic: 32,       OutInElastic: 33,\n  InBack: 34,         OutBack: 35,    InOutBack: 36,          OutInBack: 37,\n  InBounce: 38,       OutBounce: 39,  InOutBounce: 40,        OutInBounce: 41\n}\n","global.addEventListener('load', function() {\n  var metaTags = document.getElementsByTagName('BODY');\n\n  for (var i = 0 ; i < metaTags.length ; ++i) {\n    var metaTag = metaTags[i];\n    var source  = metaTag.getAttribute('data-qml');\n\n    if (source != null) {\n      global.qmlEngine = new QMLEngine();\n      qmlEngine.loadFile(source);\n      qmlEngine.start();\n      break ;\n    }\n  }\n});\n","registerQmlType({\n  module:   'QtGraphicalEffects',\n  name:     'FastBlur',\n  versions: /.*/,\n  constructor: function QMLFastBlur(meta) {\n    QMLItem.call(this, meta);\n\n    var previousSource = null;\n    var filterObject;\n\n    createSimpleProperty(\"real\", this, \"radius\");\n    createSimpleProperty(\"var\",  this, \"source\");\n    this.radius = 0;\n    this.source = null;\n\n    var updateFilterObject = (function() {\n      filterObject = {\n        transformType: 'filter',\n        operation:     'blur',\n        parameters:    this.radius + 'px'\n      };\n    }).bind(this);\n\n    function stripEffectFromSource(source) {\n      if (previousSource != null) {\n        var index = previousSource.transform.indexOf(filterObject);\n\n        previousSource.transform.splice(index, 1);\n        previousSource.$updateTransform();\n      }\n    }\n\n    function updateEffect(source) {\n      console.log(\"updating effect\");\n      stripEffectFromSource(previousSource);\n      if (source != null && typeof source.transform != 'undefined') {\n        updateFilterObject();\n        console.log(\"updating effect:\", filterObject, source);\n        source.transform.push(filterObject);\n        source.$updateTransform();\n        previousSource = source;\n      } else {\n        previousSource = null;\n      }\n    }\n\n    this.radiusChanged.connect(this, (function(newVal) {\n      updateEffect(this.source);\n    }).bind(this));\n\n    this.sourceChanged.connect(this, (function(newVal) {\n      updateEffect(this.source);\n    }).bind(this));\n  }\n});\n","registerQmlType({\n  module:   'QtMobility',\n  name:     'GeoLocation',\n  versions: /.*/,\n  constructor: function QMLGeoLocation(meta) {\n    var self = this;\n    QMLItem.call(this, meta);\n\n    createSimpleProperty(\"double\", this, \"accuracy\");\n    createSimpleProperty(\"double\", this, \"altitude\");\n    createSimpleProperty(\"double\", this, \"altitudeAccuracy\");\n    createSimpleProperty(\"double\", this, \"heading\");\n    createSimpleProperty(\"string\", this, \"label\");\n    createSimpleProperty(\"double\", this, \"latitude\");\n    createSimpleProperty(\"double\", this, \"longitude\");\n    createSimpleProperty(\"double\", this, \"speed\");\n    createSimpleProperty(\"date\",   this, \"timestamp\");\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition\n    }\n\n    var updatePosition = (function(position) {\n      this.accuracy         = position.coords.accuracy;\n      this.altitude         = position.coords.altitude;\n      this.altitudeAccuracy = position.coords.altitudeAccuracy;\n      this.heading          = position.coords.heading;\n      this.latitude         = position.coords.latitude;\n      this.longitude        = position.coords.longitude;\n      this.speed            = position.coords.speed;\n      this.timestamp        = position.timestamp;\n    }).bind(this);\n\n    navigator.geolocation.getCurrentPosition(updatePosition);\n    navigator.geolocation.watchPosition(updatePosition);\n  }\n});\n","global.MediaPlayer = {\n  NoError: 0, ResourceError: 1, FormatError: 2, NetworkError: 4, AccessDenied: 8, ServiceMissing: 16,\n  StoppedState: 0, PlayingState: 1, PausedState: 2,\n  NoMedia: 0, Loading: 1, Loaded: 2, Buffering: 4, Stalled: 8, EndOfMedia: 16, InvalidMedia: 32, UnknownStatus: 64\n};\n\nglobal.VideoOutput = {\n  PreserveAspectFit: 0, PreserveAspectCrop: 1, Stretch: 2\n};\n\nregisterQmlType({\n  module: 'QtMultimedia',\n  name:   'Video',\n  versions: /^5\\./,\n  constructor: function QMLVideo(meta) {\n    var domVideo;\n    var runningEventListener = 0;\n    var volumeBackup;\n\n    QMLItem.call(this, meta);\n\n    this.dom.innerHTML = \"<video></video>\";\n    domVideo = this.dom.firstChild;\n    this.dom.firstChild.style.width = this.dom.firstChild.style.height = \"100%\";\n    this.dom.firstChild.style.margin = \"0\";\n\n    createSimpleProperty(\"bool\",   this, \"autoPlay\");\n    createSimpleProperty(\"enum\",   this, \"fillMode\");\n    createSimpleProperty(\"int\",    this, \"duration\");\n    createSimpleProperty(\"int\",    this, \"position\");\n    createSimpleProperty(\"bool\",   this, \"muted\");\n    createSimpleProperty(\"real\",   this, \"playbackRate\");\n    createSimpleProperty(\"enum\",   this, \"playbackState\");\n    createSimpleProperty(\"string\", this, \"source\");\n    createSimpleProperty(\"real\",   this, \"volume\");\n    createSimpleProperty(\"enum\",   this, \"status\");\n    createSimpleProperty(\"enum\",   this, \"error\");\n    this.status = MediaPlayer.NoMedia;\n    this.error = MediaPlayer.NoError;\n    this.fillMode = VideoOutput.PreserveAspectFit;\n    this.volume = domVideo.volume;\n    this.duration = domVideo.duration;\n    this.playbackState = MediaPlayer.StoppedState;\n    this.muted = false;\n\n    this.paused  = Signal();\n    this.playing = Signal();\n    this.stopped = Signal();\n\n    this.autoPlayChanged.connect(this, (function(newVal) {\n      domVideo.autoplay = newVal;\n    }).bind(this));\n\n    domVideo.addEventListener(\"play\", (function() {\n      this.playing();\n      this.playbackState = MediaPlayer.PlayingState;\n    }).bind(this));\n\n    domVideo.addEventListener(\"pause\", (function() {\n      this.paused();\n      this.playbackState = MediaPlayer.PausedState;\n    }).bind(this));\n\n    domVideo.addEventListener(\"timeupdate\", (function() {\n      runningEventListener++;\n      this.position = domVideo.currentTime * 1000;\n      runningEventListener--;\n    }).bind(this));\n\n    domVideo.addEventListener(\"ended\", (function() {\n      this.stopped();\n      this.playbackState = MediaPlayer.StoppedState;\n    }).bind(this));\n\n    domVideo.addEventListener(\"progress\", (function() {\n      if (domVideo.buffered.length > 0) {\n        this.progress = domVideo.buffered.end(0) / domVideo.duration;\n        this.status   = this.progress < 1 ? MediaPlayer.Buffering : MediaPlayer.Buffered;\n      }\n    }).bind(this));\n\n    domVideo.addEventListener(\"stalled\", (function() {\n      this.status = MediaPlayer.Stalled;\n    }).bind(this));\n\n    domVideo.addEventListener(\"canplaythrough\", (function() {\n      this.status = MediaPlayer.Buffered;\n    }).bind(this));\n\n    domVideo.addEventListener(\"loadstart\", (function() {\n      this.status = MediaPlayer.Loading;\n    }).bind(this));\n\n    domVideo.addEventListener(\"durationchanged\", (function() {\n      this.duration = domVideo.duration;\n    }).bind(this));\n\n    domVideo.addEventListener(\"volumechanged\", (function() {\n      runningEventListener++;\n      this.volume = demoVideo.volume;\n      runningEventListener--;\n    }).bind(this));\n\n    domVideo.addEventListener(\"suspend\", (function() {\n      this.error |= MediaPlayer.NetworkError;\n    }).bind(this));\n\n    domVideo.addEventListener(\"error\", (function() {\n      this.error |= MediaPlayer.ResourceError;\n    }).bind(this));\n\n    domVideo.addEventListener(\"ratechange\", (function() {\n      runningEventListener++;\n      this.playbackRate = domVideo.playbackRate;\n      runningEventListener--;\n    }).bind(this));\n\n    this.pause = (function() {\n      domVideo.pause();\n    }).bind(this);\n\n    this.play = (function() {\n      domVideo.play();\n    }).bind(this);\n\n    this.seek = (function(offset) {\n      domVideo.currentTime = offset * 1000;\n    }).bind(this);\n\n    this.stop = (function() {\n    }).bind(this);\n\n    this.mimetypeFromExtension = function(extension) {\n      var mimetypes = {\n        ogg: 'video/ogg',\n        ogv: 'video/ogg',\n        ogm: 'video/ogg',\n        mp4: 'video/mp4',\n        webm: 'video/webm'\n      };\n\n      if (typeof mimetypes[extension] == 'undefined')\n        return \"\";\n      return mimetypes[extension];\n    };\n\n    this.sourceChanged.connect(this, (function(source) {\n      var parts     = source.split('.');\n      var extension = parts[parts.length - 1];\n\n      domVideo.src = source;\n      if (domVideo.canPlayType(this.mimetypeFromExtension(extension.toLowerCase())) == \"\")\n        this.error |= MediaPlayer.FormatError;\n    }).bind(this));\n\n    this.positionChanged.connect(this, (function(currentTime) {\n      if (runningEventListener == 0)\n        domVideo.currentTime = currentTime / 1000;\n    }).bind(this));\n\n    this.volumeChanged.connect(this, (function(volume) {\n      if (runningEventListener == 0)\n        domVideo.volume = volume;\n    }).bind(this));\n\n    this.playbackRateChanged.connect(this, (function(playbackRate) {\n      if (runningEventListener == 0)\n        domVideo.playbackRate = playbackRate;\n    }).bind(this));\n\n    this.mutedChanged.connect(this, (function(newValue) {\n      if (newValue == true) {\n        volulmeBackup = domVideo.volume;\n        this.volume = 0;\n      } else {\n        this.volume = volumeBackup;\n      }\n    }).bind(this));\n\n    this.fillModeChanged.connect(this, (function(newValue) {\n      switch (newValue) {\n        case VideoOutput.Stretch:\n          domVideo.style.objectFit = 'fill';\n          break ;\n        case VideoOutput.PreserveAspectFit:\n          domVideo.style.objectFit = '';\n          break ;\n        case VideoOutput.PreserveAspectCrop:\n          domVideo.style.objectFit = 'cover';\n          break ;\n      }\n    }).bind(this));\n  }\n});\n","registerQmlType({\n  module:   'QtQuick.Controls',\n  name:     'CheckBox',\n  versions: /.*/,\n  constructor: function QMLCheckbox(meta) {\n    this.dom = document.createElement(\"label\");\n    QMLItem.call(this, meta);\n    var self = this;\n\n    var QMLFont = new getConstructor('QtQuick', '2.0', 'Font');\n    this.font = new QMLFont(this);\n\n    this.dom.innerHTML = \"<input type=\\\"checkbox\\\"><span></span>\";\n    this.dom.style.pointerEvents = \"auto\";\n    this.dom.firstChild.style.verticalAlign = \"text-bottom\";\n\n    createSimpleProperty(\"string\", this, \"text\");\n    createSimpleProperty(\"bool\", this, \"checked\");\n    createSimpleProperty(\"color\", this, \"color\");\n\n    this.Component.completed.connect(this, function() {\n        this.implicitHeight = this.dom.offsetHeight;\n        this.implicitWidth = this.dom.offsetWidth;\n    });\n    this.textChanged.connect(this, function(newVal) {\n        this.dom.children[1].innerHTML = newVal;\n        this.implicitHeight = this.dom.offsetHeight;\n        this.implicitWidth = this.dom.offsetWidth;\n    });\n    this.colorChanged.connect(this, function(newVal) {\n        this.dom.children[1].style.color = newVal;\n    });\n\n    this.dom.firstChild.onchange = function() {\n        self.checked = this.checked;\n    };\n  }\n});\n","registerQmlType({\n  module:   'QtQuick.Controls',\n  name:     'TextArea',\n  versions: /.*/,\n  constructor: function QMLTextArea(meta) {\n    QMLItem.call(this, meta);\n\n    var self = this;\n\n    var QMLFont = new getConstructor('QtQuick', '2.0', 'Font');\n    this.font = new QMLFont(this);\n\n    this.dom.innerHTML = \"<textarea></textarea>\"\n    this.dom.firstChild.style.pointerEvents = \"auto\";\n    this.dom.firstChild.style.width = \"100%\";\n    this.dom.firstChild.style.height = \"100%\";\n    // In some browsers text-areas have a margin by default, which distorts\n    // the positioning, so we need to manually set it to 0.\n    this.dom.firstChild.style.margin = \"0\";\n\n    createSimpleProperty(\"string\", this, \"text\", \"\");\n\n    this.Component.completed.connect(this, function() {\n        this.implicitWidth = this.dom.firstChild.offsetWidth;\n        this.implicitHeight = this.dom.firstChild.offsetHeight;\n    });\n\n    this.textChanged.connect(this, function(newVal) {\n        this.dom.firstChild.value = newVal;\n    });\n\n    function updateValue(e) {\n        if (self.text != self.dom.firstChild.value) {\n            self.text = self.dom.firstChild.value;\n        }\n    }\n\n    this.dom.firstChild.oninput = updateValue;\n    this.dom.firstChild.onpropertychanged = updateValue;\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'AnimatedImage',\n  versions: /.*/,\n  constructors: function QMLAnimatedImage(meta) {\n    QMLImage.call(this, meta);\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'Animation',\n  versions: /.*/,\n  constructor: function QMLAnimation(meta) {\n    QMLBaseObject.call(this, meta);\n\n    // Exports\n    this.Animation = {\n        Infinite: -1\n    };\n\n    createSimpleProperty(\"bool\", this, \"alwaysRunToEnd\");\n    createSimpleProperty(\"int\", this, \"loops\");\n    createSimpleProperty(\"bool\", this, \"paused\");\n    createSimpleProperty(\"bool\", this, \"running\");\n\n    this.alwaysRunToEnd = false;\n    this.loops = 1;\n    this.paused = false;\n    this.running = false;\n\n    // Methods\n    this.restart = function() {\n        this.stop();\n        this.start();\n    };\n    this.start = function() {\n        this.running = true;\n    }\n    this.stop = function() {\n        this.running = false;\n    }\n    this.pause = function() {\n        this.paused = true;\n    }\n    this.resume = function() {\n        this.paused = false;\n    }\n\n    // To be overridden\n    this.complete = unboundMethod;\n  }\n});\n\n","registerQmlType({\n  module: 'QtQuick',\n  name:   'Behavior',\n  versions: /.*/,\n  constructor: function QMLBehavior(meta) {\n    QMLBaseObject.call(this, meta);\n\n    createSimpleProperty(\"Animation\", this, \"animation\");\n    this.$defaultProperty = \"animation\";\n    createSimpleProperty(\"bool\", this, \"enabled\");\n\n    this.animationChanged.connect(this, function(newVal) {\n        newVal.target = this.$parent;\n        newVal.property = meta.object.$on;\n        this.$parent.$properties[meta.object.$on].animation = newVal;\n    });\n    this.enabledChanged.connect(this, function(newVal) {\n        this.$parent.$properties[meta.object.$on].animation = newVal ? this.animation : null;\n    });\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'BorderImage',\n  versions: /.*/,\n  constructor: function QMLBorderImage(meta) {\n    QMLItem.call(this, meta);\n    var self = this;\n\n    this.BorderImage = {\n        // tileMode\n        Stretch: \"stretch\",\n        Repeat: \"repeat\",\n        Round: \"round\",\n        // status\n        Null: 1,\n        Ready: 2,\n        Loading: 3,\n        Error: 4\n    }\n\n    createSimpleProperty(\"url\", this, \"source\");\n    createSimpleProperty(\"enum\", this, \"status\");\n    this.border = new QObject(this);\n    createSimpleProperty(\"int\", this.border, \"left\");\n    createSimpleProperty(\"int\", this.border, \"right\");\n    createSimpleProperty(\"int\", this.border, \"top\");\n    createSimpleProperty(\"int\", this.border, \"bottom\");\n    createSimpleProperty(\"enum\", this, \"horizontalTileMode\");\n    createSimpleProperty(\"enum\", this, \"verticalTileMode\");\n\n    this.source = \"\";\n    this.status = this.BorderImage.Null;\n    this.border.left = 0;\n    this.border.right = 0;\n    this.border.top = 0;\n    this.border.bottom = 0;\n    this.horizontalTileMode = this.BorderImage.Stretch;\n    this.verticalTileMode = this.BorderImage.Stretch;\n\n    this.sourceChanged.connect(this, function() {\n        this.dom.style.borderImageSource = \"url(\" + engine.$resolvePath(this.source) + \")\";\n    });\n    this.border.leftChanged.connect(this, updateBorder);\n    this.border.rightChanged.connect(this, updateBorder);\n    this.border.topChanged.connect(this, updateBorder);\n    this.border.bottomChanged.connect(this, updateBorder);\n    this.horizontalTileModeChanged.connect(this, updateBorder);\n    this.verticalTileModeChanged.connect(this, updateBorder);\n\n    function updateBorder() {\n        this.dom.style.MozBorderImageSource = \"url(\" + engine.$resolvePath(this.source) + \")\";\n        this.dom.style.MozBorderImageSlice = this.border.top + \" \"\n                                                + this.border.right + \" \"\n                                                + this.border.bottom + \" \"\n                                                + this.border.left + \" \"\n                                                + \"fill\";\n        this.dom.style.MozBorderImageRepeat = this.horizontalTileMode + \" \"\n                                                    + this.verticalTileMode;\n        this.dom.style.MozBorderImageWidth = this.border.top + \" \"\n                                                + this.border.right + \" \"\n                                                + this.border.bottom + \" \"\n                                                + this.border.left;\n\n        this.dom.style.webkitBorderImageSource = \"url(\" + engine.$resolvePath(this.source) + \")\";\n        this.dom.style.webkitBorderImageSlice = this.border.top + \" \"\n                                                + this.border.right + \" \"\n                                                + this.border.bottom + \" \"\n                                                + this.border.left + \" \"\n                                                + \"fill\";\n        this.dom.style.webkitBorderImageRepeat = this.horizontalTileMode + \" \"\n                                                    + this.verticalTileMode;\n        this.dom.style.webkitBorderImageWidth = this.border.top + \" \"\n                                                + this.border.right + \" \"\n                                                + this.border.bottom + \" \"\n                                                + this.border.left;\n\n        this.dom.style.OBorderImageSource = \"url(\" + engine.$resolvePath(this.source) + \")\";\n        this.dom.style.OBorderImageSlice = this.border.top + \" \"\n                                                + this.border.right + \" \"\n                                                + this.border.bottom + \" \"\n                                                + this.border.left + \" \"\n                                                + \"fill\";\n        this.dom.style.OBorderImageRepeat = this.horizontalTileMode + \" \"\n                                                    + this.verticalTileMode;\n        this.dom.style.OBorderImageWidth = this.border.top + \"px \"\n                                                + this.border.right + \"px \"\n                                                + this.border.bottom + \"px \"\n                                                + this.border.left + \"px\";\n\n        this.dom.style.borderImageSlice = this.border.top + \" \"\n                                                + this.border.right + \" \"\n                                                + this.border.bottom + \" \"\n                                                + this.border.left + \" \"\n                                                + \"fill\";\n        this.dom.style.borderImageRepeat = this.horizontalTileMode + \" \"\n                                                    + this.verticalTileMode;\n        this.dom.style.borderImageWidth = this.border.top + \"px \"\n                                                + this.border.right + \"px \"\n                                                + this.border.bottom + \"px \"\n                                                + this.border.left + \"px\";\n    }\n  }\n});\n","global.DoubleValidator = {\n  StandardNotation: 1, ScientificNotation: 2\n};\n\nregisterQmlType({\n  module:   'QtQuick',\n  name:     'DoubleValidator',\n  versions: /.*/,\n  constructor: function QMLDoubleValidator(meta) {\n    QMLItem.call(this, meta);\n\n    createSimpleProperty(\"real\", this, \"bottom\");\n    createSimpleProperty(\"real\", this, \"top\");\n    createSimpleProperty(\"int\",  this, \"decimals\");\n    createSimpleProperty(\"enum\", this, \"notation\");\n    this.bottom   = -Infinity;\n    this.top      = Infinity;\n    this.decimals = 1000;\n    this.notation = DoubleValidator.ScientificNotation;\n\n    var standardRegExp   = /^(-|\\+)?\\s*[0-9]+(\\.[0-9]+)?$/;\n    var scientificRegExp = /^(-|\\+)?\\s*[0-9]+(\\.[0-9]+)?(E(-|\\+)?[0-9]+)?$/;\n\n    this.getRegExpForNotation = (function(notation) {\n      switch (notation) {\n        case DoubleValidator.ScientificNotation:\n          return scientificRegExp;\n          break ;\n        case DoubleValidator.StandardNotation:\n          return standardRegExp;\n          break ;\n      }\n      return null;\n    }).bind(this);\n\n    function getDecimalsForNumber(number) {\n      if (Math.round(number) != number) {\n        var str = '' + number;\n\n        return /\\d*$/.exec(str)[0].length;\n      }\n      return 0;\n    }\n\n    this.validate = (function(string) {\n      var regExp     = this.getRegExpForNotation(this.notation);\n      var acceptable = regExp.test(string.trim());\n\n      if (acceptable) {\n        var value    = parseFloat(string);\n\n        acceptable   = this.bottom <= value && this.top >= value;\n        acceptable   = acceptable && getDecimalsForNumber(value) <= this.decimals;\n      }\n      return acceptable;\n    }).bind(this);\n  }\n});\n\n","registerQmlType({\n  module: 'QtQuick',\n  name:   'Font',\n  versions: /.*/,\n  constructor: function QMLFont(parent) {\n    QObject.call(this);\n    createSimpleProperty(\"bool\", this, \"bold\");\n    createSimpleProperty(\"enum\", this, \"capitalization\");\n    createSimpleProperty(\"string\", this, \"family\");\n    createSimpleProperty(\"bool\", this, \"italic\");\n    createSimpleProperty(\"real\", this, \"letterSpacing\");\n    createSimpleProperty(\"int\", this, \"pixelSize\");\n    createSimpleProperty(\"real\", this, \"pointSize\");\n    createSimpleProperty(\"bool\", this, \"strikeout\");\n    createSimpleProperty(\"bool\", this, \"underline\");\n    createSimpleProperty(\"enum\", this, \"weight\");\n    createSimpleProperty(\"real\", this, \"wordSpacing\");\n\n        this.pointSizeChanged.connect(function(newVal) {\n            parent.dom.firstChild.style.fontSize = newVal + \"pt\";\n        });\n        this.boldChanged.connect(function(newVal) {\n            parent.dom.firstChild.style.fontWeight =\n                parent.font.weight !== undefined ? parent.font.weight :\n                newVal ? \"bold\" : \"normal\";\n        });\n        this.capitalizationChanged.connect(function(newVal) {\n            parent.dom.firstChild.style.fontVariant =\n                newVal == \"smallcaps\" ? \"small-caps\" : \"normal\";\n            newVal = newVal == \"smallcaps\" ? \"none\" : newVal;\n            parent.dom.firstChild.style.textTransform = newVal;\n        });\n        this.familyChanged.connect(function(newVal) {\n            parent.dom.firstChild.style.fontFamily = newVal;\n        });\n        this.italicChanged.connect(function(newVal) {\n            parent.dom.firstChild.style.fontStyle = newVal ? \"italic\" : \"normal\";\n        });\n        this.letterSpacingChanged.connect(function(newVal) {\n            parent.dom.firstChild.style.letterSpacing = newVal !== undefined ? newVal + \"px\" : \"\";\n        });\n        this.pixelSizeChanged.connect(function(newVal) {\n            var val = newVal !== undefined ? newVal + \"px \"\n                : (parent.font.pointSize || 10) + \"pt\";\n            parent.dom.style.fontSize = val;\n            parent.dom.firstChild.style.fontSize = val;\n        });\n        this.pointSizeChanged.connect(function(newVal) {\n            var val = parent.font.pixelSize !== undefined ? parent.font.pixelSize + \"px \"\n                : (newVal || 10) + \"pt\";\n            parent.dom.style.fontSize = val;\n            parent.dom.firstChild.style.fontSize = val;\n        });\n        this.strikeoutChanged.connect(function(newVal) {\n            parent.dom.firstChild.style.textDecoration = newVal\n                ? \"line-through\"\n                : parent.font.underline\n                ? \"underline\"\n                : \"none\";\n        });\n        this.underlineChanged.connect(function(newVal) {\n            parent.dom.firstChild.style.textDecoration = parent.font.strikeout\n                ? \"line-through\"\n                : newVal\n                ? \"underline\"\n                : \"none\";\n        });\n        this.weightChanged.connect(function(newVal) {\n            parent.dom.firstChild.style.fontWeight =\n                newVal !== undefined ? newVal :\n                parent.font.bold ? \"bold\" : \"normal\";\n        });\n        this.wordSpacingChanged.connect(function(newVal) {\n            parent.dom.firstChild.style.wordSpacing = newVal !== undefined ? newVal + \"px\" : \"\";\n        });\n  }\n});\n\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'FontLoader',\n  versions: /.*/,\n  constructor: function QMLFontLoader(meta) {\n    QMLBaseObject.call(this, meta);\n\n    // Exports.\n    this.FontLoader = {\n        // status\n        Null: 0,\n        Ready: 1,\n        Loading: 2,\n        Error: 3\n    }\n\n    createSimpleProperty(\"string\", this, \"name\");\n    createSimpleProperty(\"url\", this, \"source\");\n    createSimpleProperty(\"enum\", this, \"status\");\n\n    this.status = this.FontLoader.Null;\n\n    var self = this,\n        domStyle = document.createElement('style'),\n        lastName = '',\n        inTouchName = false;\n\n    // Maximum timeout is the maximum time for a font to load. If font isn't loaded in this time, the status is set to Error.\n    // For both cases (with and without FontLoader.js) if the font takes more than the maximum timeout to load,\n    // dimensions recalculations for elements that are using this font will not be triggered or will have no effect.\n\n    // FontLoader.js uses only the last timeout. The state and name properties are set immediately when the font loads.\n    // If the font could not be loaded, the Error status will be set only when this timeout expires.\n    // If the font loading takes more than the timeout, the name property is set, but the status is set to Error.\n\n    // Fallback sets the font name immediately and touches it several times to trigger dimensions recalcuations.\n    // The status is set to Error and should not be used.\n    var timeouts = [20, 50, 100, 300, 500, 1000, 3000, 5000, 10000, 15000]; // 15 seconds maximum\n\n    function cycleTouchName(fontName, i) {\n        if (lastName !== fontName)\n            return;\n        if (i > 0) {\n            var name = self.name;\n            inTouchName = true;\n            // Calling self.nameChanged() is not enough, we have to actually change the value to flush the bindings.\n            self.name = 'sans-serif';\n            self.name = name;\n            inTouchName = false;\n        }\n        if (i < timeouts.length) {\n            setTimeout(function() {\n                cycleTouchName(fontName, i + 1);\n            }, timeouts[i] - (i > 0 ? timeouts[i - 1] : 0));\n        }\n    }\n\n    function loadFont(fontName) {\n        if ((lastName === fontName) || inTouchName)\n           return;\n        lastName = fontName;\n\n        if (!fontName) {\n            self.status = self.FontLoader.Null;\n            return;\n        }\n        self.status = self.FontLoader.Loading;\n        if (typeof FontLoader !== 'undefined') {\n            var fontLoader = new FontLoader([fontName], {\n                \"fontsLoaded\": function(error) {\n                    if (error !== null) {\n                        if ((lastName === fontName) && (error.notLoadedFontFamilies[0] === fontName)) {\n                            self.name = fontName; // Set the name for the case of font loading after the timeout.\n                            self.status = self.FontLoader.Error;\n                        }\n                    }\n                },\n                \"fontLoaded\": function(fontFamily) {\n                    if ((lastName === fontName) && (fontFamily == fontName)) {\n                        self.name = fontName;\n                        self.status = self.FontLoader.Ready;\n                    }\n                }\n            }, timeouts[timeouts.length - 1]);\n            FontLoader.testDiv = null; // Else I get problems loading multiple fonts (FontLoader.js bug?)\n            fontLoader.loadFonts();\n        } else {\n            console.warn('FontLoader.js library is not loaded.\\nYou should load https://github.com/smnh/FontLoader if you want to use QtQuick FontLoader elements.')\n            self.status = self.FontLoader.Error; // You should not rely on 'status' property without FontLoader.js.\n            self.name = fontName;\n            cycleTouchName(fontName, 0)\n        }\n    }\n\n    this.sourceChanged.connect(this, function(font_src) {\n        var fontName = 'font_' + ((new Date()).getTime()).toString(36) + '_' + (Math.round(Math.random() * 1e15)).toString(36);\n        domStyle.innerHTML = '@font-face { font-family: \\'' + fontName + '\\'; src: url(\\'' + engine.$resolvePath(font_src) + '\\'); }';\n        document.getElementsByTagName('head')[0].appendChild(domStyle);\n        loadFont(fontName);\n    });\n\n    this.nameChanged.connect(this, loadFont);\n  }\n});\n","registerQmlType({\n  module: 'QtQuick',\n  name:   'Image',\n  versions: /.*/,\n  constructor: function QMLImage(meta) {\n    QMLItem.call(this, meta);\n    var img = new Image(),\n        self = this;\n\n    // Exports.\n    this.Image = {\n        // fillMode\n        Stretch: 1,\n        PreserveAspectFit: 2,\n        PreserveAspectCrop: 3,\n        Tile: 4,\n        TileVertically: 5,\n        TileHorizontally: 6,\n        // status\n        Null: 1,\n        Ready: 2,\n        Loading: 3,\n        Error: 4\n    }\n\n    // no-op properties\n    createSimpleProperty(\"bool\", this, \"asynchronous\");\n    createSimpleProperty(\"bool\", this, \"cache\");\n    createSimpleProperty(\"bool\", this, \"smooth\");\n\n    createSimpleProperty(\"enum\", this, \"fillMode\");\n    createSimpleProperty(\"bool\", this, \"mirror\");\n    createSimpleProperty(\"real\", this, \"progress\");\n    createSimpleProperty(\"url\", this, \"source\");\n    createSimpleProperty(\"enum\", this, \"status\");\n\n    this.sourceSize = new QObject(this);\n\n    createSimpleProperty(\"int\", this.sourceSize, \"width\");\n    createSimpleProperty(\"int\", this.sourceSize, \"height\");\n\n    this.asynchronous = true;\n    this.cache = true;\n    this.smooth = true;\n    this.fillMode = this.Image.Stretch;\n    this.mirror = false;\n    this.progress = 0;\n    this.source = \"\";\n    this.status = this.Image.Null;\n    this.sourceSize.width = 0;\n    this.sourceSize.height = 0;\n\n    // Bind status to img element\n    img.onload = function() {\n        var w = img.naturalWidth;\n        var h = img.naturalHeight;\n        self.sourceSize.width = w;\n        self.sourceSize.height = h;\n        self.implicitWidth = w;\n        self.implicitHeight = h;\n\n        self.progress = 1;\n        self.status = self.Image.Ready;\n    }\n    img.onerror = function() {\n        self.status = self.Image.Error;\n    }\n\n    var updateFillMode = function(val) {\n      if (typeof val == 'undefined')\n        val = this.fillMode;\n      switch (val) {\n        default:\n        case this.Image.Stretch:\n          this.dom.style.backgroundRepeat   = 'auto';\n          this.dom.style.backgroundSize     = '100% 100%';\n          this.dom.style.backgroundPosition = 'auto';\n          break ;\n        case this.Image.Tile:\n          this.dom.style.backgroundRepeat   = 'auto';\n          this.dom.style.backgroundSize     = 'auto';\n          this.dom.style.backgroundPosition = 'auto';\n          break ;\n        case this.Image.PreserveAspectFit:\n          this.dom.style.backgroundRepeat   = 'no-repeat';\n          this.dom.style.backgroundSize     = 'contain';\n          this.dom.style.backgroundPosition = 'center';\n          break ;\n        case this.Image.PreserveAspectCrop:\n          this.dom.style.backgroundRepeat   = 'no-repeat';\n          this.dom.style.backgroundSize     = 'cover';\n          this.dom.style.backgroundPosition = 'center';\n          break ;\n        case this.Image.TileVertically:\n          this.dom.style.backgroundRepeat   = 'repeat-y';\n          this.dom.style.backgroundSize     = '100% auto';\n          this.dom.style.backgroundPosition = 'auto';\n          break ;\n        case this.Image.TileHorizontally:\n          this.dom.style.backgroundRepeat   = 'repeat-x';\n          this.dom.style.backgroundSize     = 'auto 100%';\n          this.dom.style.backgroundPosition = 'auto';\n          break ;\n      }\n    }\n    updateFillMode = updateFillMode.bind(this);\n\n    var updateMirroring = (function(val) {\n      var transformRule = 'scale(-1,1)';\n      if (!val)\n      {\n        var index = this.transform.indexOf(transformRule);\n\n        if (index >= 0)\n          this.transform.splice(index, 1);\n      }\n      else\n        this.transform.push(transformRule);\n      this.$updateTransform();\n    }).bind(this);\n\n    this.sourceChanged.connect(this, function(val) {\n        this.progress = 0;\n        this.status = this.Image.Loading;\n        this.dom.style.backgroundImage=\"url('\" + engine.$resolvePath(val) + \"')\";\n        img.src = engine.$resolvePath(val);\n        if (img.complete)\n          this.status = this.Image.Ready;\n        updateFillMode();\n    });\n\n    this.mirrorChanged.connect  (this, updateMirroring);\n    this.fillModeChanged.connect(this, updateFillMode);\n    this.$drawItem = function(c) {\n        updateFillMode();\n\n        if (this.status == this.Image.Ready) {\n            c.save();\n            c.drawImage(img, this.left, this.top, this.width, this.height);\n            c.restore();\n        } else {\n            console.log(\"Waiting for image to load\");\n        }\n    }\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'IntValidator',\n  versions: /.*/,\n  constructor: function QMLIntValidator(meta) {\n    QMLItem.call(this, meta);\n\n    createSimpleProperty(\"int\", this, \"bottom\");\n    createSimpleProperty(\"int\", this, \"top\");\n    this.bottom = -2147483647;\n    this.top    = 2147483647;\n\n    this.validate = (function(string) {\n      var regExp     = /^(-|\\+)?\\s*[0-9]+$/;\n      var acceptable = regExp.test(string.trim());\n\n      if (acceptable) {\n        var value    = parseInt(string);\n\n        acceptable   = this.bottom <= value && this.top >= value;\n      }\n      return acceptable;\n    }).bind(this);\n  }\n});\n\n","registerQmlType({\n  module: 'QtQuick',\n  name:   'ListElement',\n  versions: /.*/,\n  constructor: function QMLListElement(meta) {\n    QMLBaseObject.call(this, meta);\n\n    for (var i in meta.object) {\n        if (i[0] != \"$\") {\n            createSimpleProperty(\"variant\", this, i);\n        }\n    }\n    applyProperties(meta.object, this, this, this.$context);\n  }\n});\n","registerQmlType({\n  module: 'QtQuick',\n  name:   'ListModel',\n  versions: /.*/,\n  constructor: function QMLListModel(meta) {\n    QMLBaseObject.call(this, meta);\n    var self = this,\n    firstItem = true;\n    var QMLListElement = getConstructor('QtQuick', '2.0', 'ListElement');\n\n    createSimpleProperty(\"int\", this, \"count\");\n    createSimpleProperty(\"list\", this, \"$items\");\n    this.$defaultProperty = \"$items\";\n    this.$items = [];\n    this.$model = new JSItemModel();\n    this.count = 0;\n\n    this.$itemsChanged.connect(this, function(newVal) {\n        if (firstItem) {\n            firstItem = false;\n            var roleNames = [];\n            var dict = newVal[0];\n            for (var i in (dict instanceof QMLListElement) ? dict.$properties : dict) {\n                if (i != \"index\")\n                    roleNames.push(i);\n            }\n            this.$model.setRoleNames(roleNames);\n        }\n        this.count = this.$items.length;\n    });\n\n    this.$model.data = function(index, role) {\n        return self.$items[index][role];\n    }\n    this.$model.rowCount = function() {\n        return self.$items.length;\n    }\n\n    this.append = function(dict) {\n        this.insert(this.$items.length, dict);\n    }\n    this.clear = function() {\n        this.$items = [];\n        this.$model.modelReset();\n        this.count = 0;\n    }\n    this.get = function(index) {\n        return this.$items[index];\n    }\n    this.insert = function(index, dict) {\n        this.$items.splice(index, 0, dict);\n        this.$itemsChanged(this.$items);\n        this.$model.rowsInserted(index, index+1);\n    }\n    this.move = function(from, to, n) {\n        var vals = this.$items.splice(from, n);\n        for (var i = 0; i < vals.length; i++) {\n            this.$items.splice(to + i, 0, vals[i]);\n        }\n        this.$model.rowsMoved(from, from+n, to);\n    }\n    this.remove = function(index) {\n        this.$items.splice(index, 1);\n        this.$model.rowsRemoved(index, index+1);\n        this.count = this.$items.length;\n    }\n    this.set = function(index, dict) {\n        this.$items[index] = dict;\n    }\n    this.setProperty = function(index, property, value) {\n        this.$items[index][property] = value;\n    }\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'ListView',\n  versions: /.*/,\n  constructor: function QMLListView(meta) {\n    var self = this;\n    var QMLRepeater = getConstructor('QtQuick', '2.0', 'Repeater');\n    QMLRepeater.call(this, meta);\n\n    createSimpleProperty(\"enum\", this, \"orientation\");\n    createSimpleProperty(\"real\", this, \"spacing\");\n\n    this.container = function() { return self; }\n    this.modelChanged.connect(styleChanged);\n    this.delegateChanged.connect(styleChanged);\n    this.orientationChanged.connect(styleChanged);\n    this.spacingChanged.connect(styleChanged);\n\n    this._childrenInserted.connect(applyStyleOnItem)\n\n    function applyStyleOnItem($item) {\n      $item.dom.style.position = 'initial';\n      if (self.orientation == Qt.Horizontal) {\n        $item.dom.style.display = 'inline-block';\n        if ($item != self.$items[0])\n          $item.dom.style[\"margin-left\"] = self.spacing + \"px\";\n      }\n      else {\n        $item.dom.style.display = 'block';\n        if ($item != self.$items[0])\n          $item.dom.style[\"margin-top\"] = self.spacing + \"px\";\n      }\n    }\n\n    function styleChanged() {\n      for (var i = 0 ; i < self.$items.length ; ++i) {\n        applyStyleOnItem(self.$items[i]);\n      }\n    }\n  }\n});\n","/**\n *\n * Loader is used to dynamically load QML components.\n *\n * Loader can load a QML file (using the source property)\n * or a Component object (using the sourceComponent property).\n * It is useful for delaying the creation of a component until\n * it is required: for example, when a component should be created\n * on demand, or when a component should not be created unnecessarily\n * for performance reasons.\n *\n */\n\nregisterQmlType({\n    module: 'QtQuick',\n    name: 'Loader',\n    versions: /.*/,\n    constructor: function(meta) {\n        QMLItem.call(this, meta);\n\n        var self = this;\n\n        createSimpleProperty('bool', this, 'active');\n        createSimpleProperty('bool', this, 'asynchronous');\n        createSimpleProperty('var', this, 'item');\n        createSimpleProperty('real', this, 'progress');\n        createSimpleProperty('url', this, 'source');\n        createSimpleProperty('Component', this, 'sourceComponent');\n        createSimpleProperty('enum', this, 'status');\n\n        this.active = true;\n        this.asynchronous = false;\n        this.item = null;\n        this.progress = 0.0;\n        this.source = null;\n        this.sourceComponent = null;\n        this.status = 1;\n\n        this.loaded = Signal();\n\n        this.qml = 'not set';\n        this.sourceUrl = 'empty';\n        this.qmlSource = 'empty';\n\n    this.setSource = function(url, options) {\n            this.props = options;\n            this.sourceUrl = url;\n            this.qmlSource = getUrlContents(url);\n            return;\n        }\n\n    }\n});\n","registerQmlType({\n  module: 'QtQuick',\n  name:   'MouseArea',\n  versions: /.*/,\n  constructor: function QMLMouseArea(meta) {\n    QMLItem.call(this, meta);\n    var self = this;\n\n    this.dom.style.pointerEvents = \"all\";\n\n    // IE does not handle mouse clicks to transparent divs, so we have\n    // to set a background color and make it invisible using opacity\n    // as that doesn't affect the mouse handling.\n    this.dom.style.backgroundColor = \"white\";\n    this.dom.style.opacity = 0;\n\n    createSimpleProperty(\"variant\", this, \"acceptedButtons\");\n    createSimpleProperty(\"bool\", this, \"enabled\");\n    createSimpleProperty(\"bool\", this, \"hoverEnabled\");\n    createSimpleProperty(\"real\", this, \"mouseX\");\n    createSimpleProperty(\"real\", this, \"mouseY\");\n    createSimpleProperty(\"bool\", this, \"pressed\");\n    createSimpleProperty(\"bool\", this, \"containsMouse\");\n    this.clicked = Signal([{type: \"variant\", name: \"mouse\"}]);\n    this.entered = Signal();\n    this.exited = Signal();\n    this.positionChanged = Signal([{type: \"variant\", name: \"mouse\"}]);\n\n    this.acceptedButtons = Qt.LeftButton;\n    this.enabled = true;\n    this.hoverEnabled = false;\n    this.containsMouse = false;\n\n    function eventToMouse(e) {\n        return {\n            accepted: true,\n            button: e.button == 0 ? Qt.LeftButton :\n                    e.button == 1 ? Qt.MiddleButton :\n                    e.button == 2 ? Qt.RightButton :\n                    0,\n            modifiers: (e.ctrlKey * Qt.CtrlModifier)\n                    | (e.altKey * Qt.AltModifier)\n                    | (e.shiftKey * Qt.ShiftModifier)\n                    | (e.metaKey * Qt.MetaModifier),\n            x: (e.offsetX || e.layerX),\n            y: (e.offsetY || e.layerY)\n        };\n    }\n    function handleClick(e) {\n        var mouse = eventToMouse(e);\n\n        if (self.enabled && self.acceptedButtons & mouse.button) {\n            self.clicked(mouse);\n        }\n        // This decides whether to show the browser's context menu on right click or not\n        return !(self.acceptedButtons & Qt.RightButton);\n    }\n    this.dom.onclick = handleClick;\n    this.dom.oncontextmenu = handleClick;\n    this.dom.onmousedown = function(e) {\n        if (self.enabled) {\n            var mouse = eventToMouse(e);\n            self.mouseX = mouse.x;\n            self.mouseY = mouse.y;\n            self.pressed = true;\n        }\n    }\n    this.dom.onmouseup = function(e) {\n        self.pressed = false;\n    }\n    this.dom.onmouseover = function(e) {\n        self.containsMouse = true;\n        self.entered();\n    }\n    this.dom.onmouseout = function(e) {\n        self.containsMouse = false;\n        self.exited();\n    }\n    this.dom.onmousemove = function(e) {\n        if (self.enabled && (self.hoverEnabled || self.pressed)) {\n            var mouse = eventToMouse(e);\n            self.positionChanged(mouse);\n            self.mouseX = mouse.x;\n            self.mouseY = mouse.y;\n        }\n    }\n  }\n});\n","registerQmlType({\n  module: 'QtQuick',\n  name:   'NumberAnimation',\n  versions: /.*/,\n  constructor: function QMLNumberAnimation(meta) {\n    var QMLPropertyAnimation = getConstructor('QtQuick', '2.0', 'PropertyAnimation');\n\n    QMLPropertyAnimation.call(this, meta);\n    var at = 0,\n        loop = 0,\n        self = this;\n\n    engine.$addTicker(ticker);\n\n    function ticker(now, elapsed) {\n        if ((self.running || loop === -1) && !self.paused) { // loop === -1 is a marker to just finish this run\n            if (at == 0 && loop == 0 && !self.$actions.length)\n                self.$redoActions();\n            at += elapsed / self.duration;\n            if (at >= 1)\n                self.complete();\n            else\n                for (var i in self.$actions) {\n                    var action = self.$actions[i],\n                        value = self.easing.$valueForProgress(at) * (action.to - action.from) + action.from;\n                    action.target.$properties[action.property].set(value, true);\n                }\n        }\n    }\n\n    function startLoop() {\n        for (var i in this.$actions) {\n            var action = this.$actions[i];\n            action.from = action.from !== undefined ? action.from : action.target[action.property];\n        }\n        at = 0;\n    }\n\n    this.runningChanged.connect(this, function(newVal) {\n        if (newVal) {\n            startLoop.call(this);\n            this.paused = false;\n        } else if (this.alwaysRunToEnd && at < 1) {\n            loop = -1; // -1 is used as a marker to stop\n        } else {\n            loop = 0;\n            this.$actions = [];\n        }\n    });\n\n    this.complete = function() {\n        for (var i in this.$actions) {\n            var action = this.$actions[i];\n            action.target.$properties[action.property].set(action.to, true);\n        }\n\n        if (++loop == this.loops)\n            this.running = false;\n        else if (!this.running)\n            this.$actions = [];\n        else\n            startLoop.call(this);\n    }\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'ParallelAnimation',\n  versions: /.*/,\n  constructor: function QMLParallelAnimation(meta) {\n    var QMLAnimation = getConstructor('QtQuick', '2.0', 'Animation');\n    QMLAnimation.call(this, meta);\n    var curIndex,\n        passedLoops,\n        i;\n\n    this.Animation = { Infinite: Math.Infinite }\n    createSimpleProperty(\"list\", this, \"animations\");\n    this.$defaultProperty = \"animations\";\n    this.animations = [];\n    this.$runningAnimations = 0;\n\n    this.animationsChanged.connect(this, function() {\n        for (i = 0; i < this.animations.length; i++) {\n            if (!this.animations[i].runningChanged.isConnected(this, animationFinished))\n                this.animations[i].runningChanged.connect(this, animationFinished);\n        }\n    });\n\n    function animationFinished(newVal) {\n        this.$runningAnimations += newVal ? 1 : -1;\n        if (this.$runningAnimations === 0)\n            this.running = false;\n    }\n\n    this.start = function() {\n        if (!this.running) {\n            this.running = true;\n            for (i = 0; i < this.animations.length; i++)\n                this.animations[i].start();\n        }\n    }\n    this.stop = function() {\n        if (this.running) {\n            for (i = 0; i < this.animations.length; i++)\n                this.animations[i].stop();\n            this.running = false;\n        }\n    }\n    this.complete = this.stop;\n\n    engine.$registerStart(function() {\n        if (self.running) {\n            self.running = false; // toggled back by start();\n            self.start();\n        }\n    });\n    engine.$registerStop(function() {\n        self.stop();\n    });\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'PropertyAnimation',\n  versions: /.*/,\n  constructor: function QMLPropertyAnimation(meta) {\n    var QMLAnimation = getConstructor('QtQuick', '2.0', 'Animation');\n    QMLAnimation.call(this, meta);\n\n    createSimpleProperty(\"int\", this, \"duration\");\n    createSimpleProperty(\"real\", this, \"from\");\n    createSimpleProperty(\"string\", this, \"properties\");\n    createSimpleProperty(\"string\", this, \"property\");\n    createSimpleProperty(\"QtObject\", this, \"target\");\n    createSimpleProperty(\"list\", this, \"targets\");\n    createSimpleProperty(\"real\", this, \"to\");\n\n    this.easing = new QObject(this);\n    createSimpleProperty(\"enum\", this.easing, \"type\");\n    createSimpleProperty(\"real\", this.easing, \"amplitude\");\n    createSimpleProperty(\"real\", this.easing, \"overshoot\");\n    createSimpleProperty(\"real\", this.easing, \"period\");\n\n    this.easing.$valueForProgress = function(t) {\n        switch(this.type) {\n            // Quad\n            case Easing.InQuad: return Math.pow(t, 2);\n            case Easing.OutQuad: return -Math.pow(t - 1, 2) + 1;\n            case Easing.InOutQuad:\n                if (t < 0.5)\n                    return 2 * Math.pow(t, 2);\n                return -2 * Math.pow(t - 1, 2) + 1;\n            case Easing.OutInQuad:\n                if (t < 0.5)\n                    return -2 * Math.pow(t - 0.5, 2) + 0.5;\n                return 2 * Math.pow(t - 0.5, 2) + 0.5;\n            // Cubic\n            case Easing.InCubic: return Math.pow(t, 3);\n            case Easing.OutCubic: return Math.pow(t - 1, 3) + 1;\n            case Easing.InOutCubic:\n                if (t < 0.5)\n                    return 4 * Math.pow(t, 3);\n                return 4 * Math.pow(t - 1, 3) + 1;\n            case Easing.OutInCubic:\n                return 4 * Math.pow(t - 0.5, 3) + 0.5;\n            // Quart\n            case Easing.InQuart: return Math.pow(t, 4);\n            case Easing.OutQuart: return -Math.pow(t - 1, 4) + 1;\n            case Easing.InOutQuart:\n                if (t < 0.5)\n                    return 8 * Math.pow(t, 4);\n                return -8 * Math.pow(t - 1, 4) + 1;\n            case Easing.OutInQuart:\n                if (t < 0.5)\n                    return -8 * Math.pow(t - 0.5, 4) + 0.5;\n                return 8 * Math.pow(t - 0.5, 4) + 0.5;\n            // Quint\n            case Easing.InQuint: return Math.pow(t, 5);\n            case Easing.OutQuint: return Math.pow(t - 1, 5) + 1;\n            case Easing.InOutQuint:\n                if (t < 0.5)\n                    return 16 * Math.pow(t, 5);\n                return 16 * Math.pow(t - 1, 5) + 1;\n            case Easing.OutInQuint:\n                if (t < 0.5)\n                    return 16 * Math.pow(t - 0.5, 5) + 0.5;\n                return 16 * Math.pow(t - 0.5, 5) + 0.5;\n            // Sine\n            case Easing.InSine: return -Math.cos(0.5 * Math.PI * t) + 1;\n            case Easing.OutSine: return Math.sin(0.5 * Math.PI * t);\n            case Easing.InOutSine: return -0.5 * Math.cos(Math.PI * t) + 0.5;\n            case Easing.OutInSine:\n                if (t < 0.5)\n                    return 0.5 * Math.sin(Math.PI * t);\n                return -0.5 * Math.sin(Math.PI * t) + 1;\n            // Expo\n            case Easing.InExpo: return (1/1023) * (Math.pow(2, 10*t) - 1);\n            case Easing.OutExpo: return -(1024/1023) * (Math.pow(2, -10*t) - 1);\n            case Easing.InOutExpo:\n                if (t < 0.5)\n                    return (1/62) * (Math.pow(2, 10*t) - 1);\n                return -(512/31) * Math.pow(2, -10*t) + (63/62);\n            case Easing.OutInExpo:\n                if (t < 0.5)\n                    return -(16/31) * (Math.pow(2, -10*t) - 1);\n                return (1/1984) * Math.pow(2, 10*t) + (15/31);\n            // Circ\n            case Easing.InCirc: return 1 - Math.sqrt(1 - t*t);\n            case Easing.OutCirc: return Math.sqrt(1 - Math.pow(t - 1, 2));\n            case Easing.InOutCirc:\n                if (t < 0.5)\n                    return 0.5 * (1 - Math.sqrt(1 - 4*t*t));\n                return 0.5 * (Math.sqrt(1 - 4 * Math.pow(t - 1, 2)) + 1);\n            case Easing.OutInCirc:\n                if (t < 0.5)\n                    return 0.5 * Math.sqrt(1 - Math.pow(2 * t - 1, 2));\n                return 0.5 * (2 - Math.sqrt(1 - Math.pow(2 * t - 1, 2)));\n            // Elastic\n            case Easing.InElastic:\n                return -this.amplitude * Math.pow(2, 10 * t - 10)\n                        * Math.sin(2 * t * Math.PI / this.period - Math.asin(1 / this.amplitude));\n            case Easing.OutElastic:\n                return this.amplitude * Math.pow(2, -10 * t)\n                        * Math.sin(2 * t * Math.PI / this.period - Math.asin(1 / this.amplitude))\n                        + 1;\n            case Easing.InOutElastic:\n                if (t < 0.5)\n                    return -0.5 * this.amplitude * Math.pow(2, 20 * t - 10)\n                            * Math.sin(4 * t * Math.PI / this.period - Math.asin(1 / this.amplitude));\n                return -0.5 * this.amplitude * Math.pow(2, -20 * t + 10)\n                        * Math.sin(4 * t * Math.PI / this.period + Math.asin(1 / this.amplitude))\n                        + 1;\n            case Easing.OutInElastic:\n                if (t < 0.5)\n                    return 0.5 * this.amplitude * Math.pow(2, -20 * t)\n                            * Math.sin(4 * t * Math.PI / this.period - Math.asin(1 / this.amplitude))\n                            + 0.5;\n                return -0.5 * this.amplitude * Math.pow(2, 20 * t - 20)\n                        * Math.sin(4 * t * Math.PI / this.period - Math.asin(1 / this.amplitude))\n                        + 0.5;\n            // Back\n            case Easing.InBack: return (this.overshoot + 1) * Math.pow(t, 3) - this.overshoot * Math.pow(t, 2);\n            case Easing.OutBack: return (this.overshoot + 1) * Math.pow(t - 1, 3) + this.overshoot * Math.pow(t - 1, 2) + 1;\n            case Easing.InOutBack:\n                if (t < 0.5)\n                    return 4 * (this.overshoot + 1) * Math.pow(t, 3) - 2 * this.overshoot * Math.pow(t, 2);\n                return 0.5 * (this.overshoot + 1) * Math.pow(2 * t - 2, 3) + this.overshoot/2 * Math.pow(2 * t - 2, 2) + 1;\n            case Easing.OutInBack:\n                if (t < 0.5)\n                    return 0.5 * ((this.overshoot + 1) * Math.pow(2 * t - 1, 3) + this.overshoot * Math.pow(2 * t - 1, 2) + 1);\n                return 4 * (this.overshoot + 1) * Math.pow( t - 0.5, 3) - 2 * this.overshoot * Math.pow(t - 0.5, 2) + 0.5;\n            // Bounce\n            case Easing.InBounce:\n                if (t < 1/11) return -this.amplitude * (121/16) * (t*t - (1/11)*t);\n                if (t < 3/11) return -this.amplitude * (121/16) * (t*t - (4/11)*t + (3/121));\n                if (t < 7/11) return -this.amplitude * (121/16) * (t*t - (10/11)*t + (21/121));\n                return -(121/16) * (t*t - 2*t + 1) + 1;\n            case Easing.OutBounce:\n                if (t < 4/11) return (121/16) * t*t;\n                if (t < 8/11) return this.amplitude * (121/16) * (t*t - (12/11)*t + (32/121)) + 1;\n                if (t < 10/11) return this.amplitude * (121/16) * (t*t - (18/11)*t + (80/121)) + 1;\n                return this.amplitude * (121/16) * (t*t - (21/11)*t + (10/11)) + 1;\n            case Easing.InOutBounce:\n                if (t < 1/22) return -this.amplitude * (121/8) * (t*t - (1/22)*t);\n                if (t < 3/22) return -this.amplitude * (121/8) * (t*t - (2/11)*t + (3/484));\n                if (t < 7/22) return -this.amplitude * (121/8) * (t*t - (5/11)*t + (21/484));\n                if (t < 11/22) return -(121/8) * (t*t - t + 0.25) + 0.5;\n                if (t < 15/22) return (121/8) * (t*t - t) + (137/32);\n                if (t < 19/22) return this.amplitude * (121/8) * (t*t - (17/11)*t + (285/484)) + 1;\n                if (t < 21/22) return this.amplitude * (121/8) * (t*t - (20/11)*t + (399/484)) + 1;\n                return this.amplitude * (121/8) * (t*t - (43/22)*t + (21/22)) + 1;\n            case Easing.OutInBounce:\n                if (t < 4/22) return (121/8) * t*t;\n                if (t < 8/22) return -this.amplitude * (121/8) * (t*t - (6/11)*t + (8/121)) + 0.5;\n                if (t < 10/22) return -this.amplitude * (121/8) * (t*t - (9/11)*t + (20/121)) + 0.5;\n                if (t < 11/22) return -this.amplitude * (121/8) * (t*t - (21/22)*t + (5/22)) + 0.5;\n                if (t < 12/22) return this.amplitude * (121/8) * (t*t - (23/22)*t + (3/11)) + 0.5;\n                if (t < 14/22) return this.amplitude * (121/8) * (t*t - (13/11)*t + (42/121)) + 0.5;\n                if (t < 18/22) return this.amplitude * (121/8) * (t*t - (16/11)*t + (63/121)) + 0.5;\n                return -(121/8) * (t*t - 2*t + (117/121)) + 0.5;\n            // Default\n            default:\n                console.log(\"Unsupported animation type: \", this.type);\n            // Linear\n            case Easing.Linear:\n                return t;\n        }\n    }\n\n    this.$redoActions = function() {\n        this.$actions = [];\n        for (var i = 0; i < this.$targets.length; i++) {\n            for (var j in this.$props) {\n                this.$actions.push({\n                    target: this.$targets[i],\n                    property: this.$props[j],\n                    from: this.from,\n                    to: this.to\n                });\n            }\n        }\n    }\n    function redoProperties() {\n        this.$props = this.properties.split(\",\");\n\n        // Remove whitespaces\n        for (var i = 0; i < this.$props.length; i++) {\n            var matches = this.$props[i].match(/\\w+/);\n            if (matches) {\n                this.$props[i] = matches[0];\n            } else {\n                this.$props.splice(i, 1);\n                i--;\n            }\n        }\n        // Merge properties and property\n        if (this.property && this.$props.indexOf(this.property) === -1)\n            this.$props.push(this.property);\n    }\n    function redoTargets() {\n        this.$targets = this.targets.slice();\n\n        if (this.target && this.$targets.indexOf(this.target) === -1)\n            this.$targets.push(this.target);\n    }\n\n    this.duration = 250;\n    this.easing.type = Easing.Linear;\n    this.easing.amplitude = 1;\n    this.easing.period = 0.3;\n    this.easing.overshoot = 1.70158;\n    this.$props = [];\n    this.$targets = [];\n    this.$actions = [];\n    this.properties = \"\";\n    this.targets = [];\n\n    this.targetChanged.connect(this, redoTargets);\n    this.targetsChanged.connect(this, redoTargets);\n    this.propertyChanged.connect(this, redoProperties);\n    this.propertiesChanged.connect(this, redoProperties);\n\n    if (meta.object.$on !== undefined) {\n        this.property = meta.object.$on;\n        this.target = this.$parent;\n    }\n  }\n});\n\n","registerQmlType({\n  module: 'QtQuick',\n  name:   'Rectangle',\n  versions: /.*/,\n  constructor: function QMLRectangle(meta) {\n    QMLItem.call(this, meta);\n\n    createSimpleProperty(\"color\", this, \"color\");\n    createSimpleProperty(\"real\", this, \"radius\");\n\n    this.border = new QObject(this);\n    createSimpleProperty(\"color\", this.border, \"color\");\n    createSimpleProperty(\"int\", this.border, \"width\");\n\n    this.border.color = 'black';\n    this.border.width = 1;\n\n    this.colorChanged.connect(this, function(newVal) {\n        this.css.backgroundColor = newVal;\n    });\n    this.radiusChanged.connect(this, function(newVal) {\n        this.css.borderRadius = newVal + 'px';\n    });\n    this.border.colorChanged.connect(this, function(newVal) {\n        this.css.borderColor = newVal;\n        this.css.borderWidth = this.border.width + 'px';\n    });\n    this.border.widthChanged.connect(this, function(newVal) {\n        this.css.borderWidth = newVal + 'px';\n    });\n\n    this.color = \"white\";\n    this.radius = 0;\n    this.css.borderWidth ='0px';\n    this.css.borderStyle = 'solid';\n    this.css.borderColor = 'black';\n\n    this.$drawItem = function(c) {\n        c.save();\n        c.fillStyle = this.color;\n        c.strokeStyle = this.border.color;\n        c.lineWidth = this.border.width;\n\n        if (!this.radius) {\n            c.fillRect(this.left, this.top, this.width, this.height);\n            c.strokeRect(this.left, this.top, this.width, this.height);\n        } else {\n            var r = this.left + this.width;\n            var b = this.top + this.height;\n            c.beginPath();\n            c.moveTo(this.left + this.radius, this.top);\n            c.lineTo(r - this.radius, this.top);\n            c.quadraticCurveTo(r, this.top, r, this.top + this.radius);\n            c.lineTo(r, this.top + this.height - this.radius);\n            c.quadraticCurveTo(r, b, r - this.radius, b);\n            c.lineTo(this.left + this.radius, b);\n            c.quadraticCurveTo(this.left, b, this.left, b - this.radius);\n            c.lineTo(this.left, this.top + this.radius);\n            c.quadraticCurveTo(this.left, this.top, this.left + this.radius, this.top);\n            c.stroke();\n            c.fill();\n        }\n        c.restore();\n    }\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'RegExpValidator',\n  versions: /.*/,\n  constructor: function QMLRegExpValidator(meta) {\n    QMLItem.call(this, meta);\n\n    createSimpleProperty(\"var\", this, \"regExp\");\n\n    this.validate = (function(string) {\n      if (typeof this.regExp == 'undefined' || this.regExp == null)\n        return true;\n      return this.regExp.test(string);\n    }).bind(this);\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'Repeater',\n  versions: /.*/,\n  constructor: function QMLRepeater(meta) {\n    QMLItem.call(this, meta);\n    var self = this;\n    var QMLListModel = getConstructor('QtQuick', '2.0', 'ListModel');\n\n    createSimpleProperty(\"Component\", this, \"delegate\");\n    this.container = function() { return this.parent; }\n    this.$defaultProperty = \"delegate\";\n    createSimpleProperty(\"variant\", this, \"model\");\n    createSimpleProperty(\"int\", this, \"count\");\n    this.$completed = false;\n    this.$items = []; // List of created items\n    this._childrenInserted = Signal();\n\n    this.modelChanged.connect(applyModel);\n    this.delegateChanged.connect(applyModel);\n    this.parentChanged.connect(applyModel);\n\n    this.model = 0;\n    this.count = 0;\n\n    this.itemAt = function(index) {\n        return this.$items[index];\n    }\n\n    function callOnCompleted(child) {\n        child.Component.completed();\n        for (var i = 0; i < child.children.length; i++)\n            callOnCompleted(child.children[i]);\n    }\n    function insertChildren(startIndex, endIndex) {\n        for (var index = startIndex; index < endIndex; index++) {\n            var newItem = self.delegate.createObject(self);\n\n            createSimpleProperty(\"int\", newItem, \"index\");\n            var model = self.model instanceof QMLListModel ? self.model.$model : self.model;\n            for (var i in model.roleNames) {\n                if (typeof newItem.$properties[model.roleNames[i]] == 'undefined')\n                  createSimpleProperty(\"variant\", newItem, model.roleNames[i]);\n                newItem.$properties[model.roleNames[i]].set(model.data(index, model.roleNames[i]), true, newItem, self.model.$context);\n            }\n\n            self.container().children.splice(self.parent.children.indexOf(self) - self.$items.length + index, 0, newItem);\n            newItem.parent = self.container();\n            self.container().childrenChanged();\n            self.$items.splice(index, 0, newItem);\n\n            newItem.index = index;\n\n            // TODO debug this. Without check to Init, Completed sometimes called twice.. But is this check correct?\n            if (engine.operationState !== QMLOperationState.Init && engine.operationState !== QMLOperationState.Idle) {\n                // We don't call those on first creation, as they will be called\n                // by the regular creation-procedures at the right time.\n                engine.$initializePropertyBindings();\n                callOnCompleted(newItem);\n            }\n        }\n        for (var i = endIndex; i < self.$items.length; i++)\n            self.$items[i].index = i;\n\n        self.count = self.$items.length;\n    }\n\n    function applyModel() {\n        if (!self.delegate || !self.parent)\n            return;\n        var model = self.model instanceof QMLListModel ? self.model.$model : self.model;\n        if (model instanceof JSItemModel) {\n            model.dataChanged.connect(function(startIndex, endIndex, roles) {\n                if (!roles)\n                    roles = model.roleNames;\n                for (var index = startIndex; index <= endIndex; index++) {\n                    for (var i in roles) {\n                        self.$items[index].$properties[roles[i]].set(model.data(index, roles[i]), true, self.$items[index], self.model.$context);\n                    }\n                }\n            });\n            model.rowsInserted.connect(insertChildren);\n            model.rowsMoved.connect(function(sourceStartIndex, sourceEndIndex, destinationIndex) {\n                var vals = self.$items.splice(sourceStartIndex, sourceEndIndex-sourceStartIndex);\n                for (var i = 0; i < vals.length; i++) {\n                    self.$items.splice(destinationIndex + i, 0, vals[i]);\n                }\n                var smallestChangedIndex = sourceStartIndex < destinationIndex\n                                        ? sourceStartIndex : destinationIndex;\n                for (var i = smallestChangedIndex; i < self.$items.length; i++) {\n                    self.$items[i].index = i;\n                }\n            });\n            model.rowsRemoved.connect(function(startIndex, endIndex) {\n                removeChildren(startIndex, endIndex);\n                for (var i = startIndex; i < self.$items.length; i++) {\n                    self.$items[i].index = i;\n                }\n                self.count = self.$items.length;\n            });\n            model.modelReset.connect(function() {\n                removeChildren(0, self.$items.length);\n                insertChildren(0, model.rowCount());\n            });\n\n            insertChildren(0, model.rowCount());\n        } else if (typeof model == \"number\") {\n            // must be more elegant here.. do not delete already created models..\n            //removeChildren(0, self.$items.length);\n            //insertChildren(0, model);\n\n            if (self.$items.length > model) {\n               // have more than we need\n               removeChildren(model,self.$items.length);\n            }\n            else\n            {\n               // need more\n               insertChildren(self.$items.length,model);\n            }\n\n        }\n    }\n\n    function removeChildren(startIndex, endIndex) {\n        var removed = self.$items.splice(startIndex, endIndex - startIndex);\n        for (var index in removed) {\n            removed[index].$delete();\n            removed[index].parent = undefined;\n            removeChildProperties(removed[index]);\n        }\n    }\n    function removeChildProperties(child) {\n        engine.completedSignals.splice(engine.completedSignals.indexOf(child.Component.completed), 1);\n        for (var i = 0; i < child.children.length; i++)\n            removeChildProperties(child.children[i])\n    }\n  }\n});\n","registerQmlType({\n  module: 'QtQuick',\n  name:   'Rotation',\n  versions: /.*/,\n  constructor: function QMLRotation(meta) {\n    QMLBaseObject.call(this, meta);\n\n    createSimpleProperty(\"real\", this, \"angle\");\n\n    this.axis = new QObject(this);\n    createSimpleProperty(\"real\", this.axis, \"x\");\n    createSimpleProperty(\"real\", this.axis, \"y\");\n    createSimpleProperty(\"real\", this.axis, \"z\");\n\n    this.origin = new QObject(this);\n    createSimpleProperty(\"real\", this.origin, \"x\");\n    createSimpleProperty(\"real\", this.origin, \"y\");\n\n    function updateOrigin() {\n        this.$parent.dom.style.transformOrigin = this.origin.x + \"px \" + this.origin.y + \"px\";\n        this.$parent.dom.style.MozTransformOrigin = this.origin.x + \"px \" + this.origin.y + \"px\";    // Firefox\n        this.$parent.dom.style.webkitTransformOrigin = this.origin.x + \"px \" + this.origin.y + \"px\"; // Chrome, Safari and Opera\n    }\n    this.angleChanged.connect(this.$parent, this.$parent.$updateTransform);\n    this.axis.xChanged.connect(this.$parent, this.$parent.$updateTransform);\n    this.axis.yChanged.connect(this.$parent, this.$parent.$updateTransform);\n    this.axis.zChanged.connect(this.$parent, this.$parent.$updateTransform);\n    this.origin.xChanged.connect(this, updateOrigin);\n    this.origin.yChanged.connect(this, updateOrigin);\n\n    this.angle = 0;\n    this.axis.x = 0;\n    this.axis.y = 0;\n    this.axis.z = 1;\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'Scale',\n  versions: /.*/,\n  constructor: function QMLScale(meta) {\n    QMLBaseObject.call(this, meta);\n\n    createSimpleProperty(\"real\", this, \"xScale\");\n    createSimpleProperty(\"real\", this, \"yScale\");\n\n    this.origin = new QObject(this);\n    createSimpleProperty(\"real\", this.origin, \"x\");\n    createSimpleProperty(\"real\", this.origin, \"y\");\n\n    function updateOrigin() {\n        this.$parent.dom.style.transformOrigin = this.origin.x + \"px \" + this.origin.y + \"px\";\n        this.$parent.dom.style.MozTransformOrigin = this.origin.x + \"px \" + this.origin.y + \"px\";    // Firefox\n        this.$parent.dom.style.webkitTransformOrigin = this.origin.x + \"px \" + this.origin.y + \"px\"; // Chrome, Safari and Opera\n    }\n    this.xScaleChanged.connect(this.$parent, this.$parent.$updateTransform);\n    this.yScaleChanged.connect(this.$parent, this.$parent.$updateTransform);\n    this.origin.xChanged.connect(this, updateOrigin);\n    this.origin.yChanged.connect(this, updateOrigin);\n\n    this.xScale = 0;\n    this.yScale = 0;\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'SequentialAnimation',\n  versions: /.*/,\n  constructor: function QMLSequentialAnimation(meta) {\n    var QMLAnimation = getConstructor('QtQuick', '2.0', 'Animation');\n    QMLAnimation.call(this, meta);\n    var curIndex,\n        passedLoops,\n        i,\n        self = this;\n\n    createSimpleProperty(\"list\", this, \"animations\");\n    this.$defaultProperty = \"animations\";\n    this.animations = [];\n\n    function nextAnimation(proceed) {\n        var anim;\n        if (self.running && !proceed) {\n            curIndex++;\n            if (curIndex < self.animations.length) {\n                anim = self.animations[curIndex];\n                console.log(\"nextAnimation\", self, curIndex, anim);\n                anim.start();\n            } else {\n                passedLoops++;\n                if (passedLoops >= self.loops) {\n                    self.complete();\n                } else {\n                    curIndex = -1;\n                    nextAnimation();\n                }\n            }\n        }\n    }\n\n    this.animationsChanged.connect(this, function() {\n        for (i = 0; i < this.animations.length; i++) {\n            if (!this.animations[i].runningChanged.isConnected(nextAnimation))\n                this.animations[i].runningChanged.connect(nextAnimation);\n        }\n    });\n\n    this.start = function() {\n        if (!this.running) {\n            this.running = true;\n            curIndex = -1;\n            passedLoops = 0;\n            nextAnimation();\n        }\n    }\n    this.stop = function() {\n        if (this.running) {\n            this.running = false;\n            if (curIndex < this.animations.length) {\n                this.animations[curIndex].stop();\n            }\n        }\n    }\n\n    this.complete = function() {\n        if (this.running) {\n            if (curIndex < this.animations.length) {\n                // Stop current animation\n                this.animations[curIndex].stop();\n            }\n            this.running = false;\n        }\n    }\n\n    engine.$registerStart(function() {\n        if (self.running) {\n            self.running = false; // toggled back by start();\n            self.start();\n        }\n    });\n    engine.$registerStop(function() {\n        self.stop();\n    });\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'State',\n  versions: /.*/,\n  constructor: function QMLState(meta) {\n    QMLBaseObject.call(this, meta);\n\n    createSimpleProperty(\"string\", this, \"name\");\n    createSimpleProperty(\"list\", this, \"changes\");\n    this.$defaultProperty = \"changes\";\n    createSimpleProperty(\"string\", this, \"extend\");\n    createSimpleProperty(\"bool\", this, \"when\");\n    this.changes = [];\n    this.$item = this.$parent;\n\n    this.whenChanged.connect(this, function(newVal) {\n        if (newVal)\n            this.$item.state = this.name;\n        else if (this.$item.state == this.name)\n            this.$item.state = \"\";\n    });\n\n    this.$getAllChanges = function() {\n        if (this.extend) {\n            for (var i = 0; i < this.$item.states.length; i++)\n                if (this.$item.states[i].name == this.extend)\n                    return this.$item.states[i].$getAllChanges().concat(this.changes);\n        } else\n            return this.changes;\n    }\n  }\n});\n","window.SystemPalette = {\n  Active:   \"active\",\n  Inactive: \"inactive\",\n  Disabled: \"disabled\"\n};\n\nwindow.platformsDetectors = [\n  //{ name: 'W8',      regexp: /Windows NT 6\\.2/ },\n  //{ name: 'W7',      regexp: /Windows NT 6\\.1/ },\n  //{ name: 'Windows', regexp: /Windows NT/ },\n  { name: 'OSX',     regexp: /Macintosh/ }\n];\n\nwindow.systemPalettes = {};\n\nregisterQmlType({\n  module: 'QtQuick',\n  name: 'SystemPalette',\n  versions: /.*/,\n  constructor: function QMLSystemPalette(meta) {\n    QMLBaseObject.call(this, meta);\n\n    createSimpleProperty(\"enum\", this, \"colorGroup\");\n\n    var attrs    = [ 'alternateBase', 'base', 'button', 'buttonText', 'dark', 'highlight', 'highlightedText', 'light', 'mid', 'midlight', 'shadow', 'text', 'window', 'windowText' ];\n    var platform = 'OSX';\n\n    for (var i = 0 ; i < attrs.length ; ++i)\n      createSimpleProperty(\"color\", this, attrs[i], { readOnly: true });\n    createSimpleProperty(\"enum\", this, \"colorGroup\");\n\n    this.colorGroupChanged.connect(this, (function (newVal) {\n      this.$canEditReadOnlyProperties = true;\n      for (var i = 0 ; i < attrs.length ; ++i) {\n        this[attrs[i]] = systemPalettes[platform][newVal][attrs[i]];\n      }\n      delete this.$canEditReadOnlyProperties;\n    }).bind(this));\n\n    // Detect OS\n    for (var i = 0 ; i < platformsDetectors.length ; ++i) {\n      if (platformsDetectors[i].regexp.test(navigator.userAgent)) {\n        platforms = platformsDetectors[i].name;\n        break ;\n      }\n    }\n  }\n});\n\nwindow.systemPalettes['OSX'] = {\n        'active': {\n          'alternateBase': '#f6f6f6',\n          'base':          '#ffffff',\n          'button':        '#ededed',\n          'buttonText':    '#000000',\n          'dark':          '#bfbfbf',\n          'highlight':     '#fbed73',\n          'highlightText': '#000000',\n          'light':         '#ffffff',\n          'mid':           '#a9a9a9',\n          'midlight':      '#f6f6f6',\n          'shadow':        '#8b8b8b',\n          'text':          '#000000',\n          'window':        '#ededed',\n          'windowText':    '#000000'\n        },\n        'inactive': {\n          'alternateBase': '#f6f6f6',\n          'base':          '#ffffff',\n          'button':        '#ededed',\n          'buttonText':    '#000000',\n          'dark':          '#bfbfbf',\n          'highlight':     '#d0d0d0',\n          'highlightText': '#000000',\n          'light':         '#ffffff',\n          'mid':           '#a9a9a9',\n          'midlight':      '#f6f6f6',\n          'shadow':        '#8b8b8b',\n          'text':          '#000000',\n          'window':        '#ededed',\n          'windowText':    '#000000'\n        },\n        'disabled': {\n          'alternateBase': '#f6f6f6',\n          'base':          '#ededed',\n          'button':        '#ededed',\n          'buttonText':    '#949494',\n          'dark':          '#bfbfbf',\n          'highlight':     '#d0d0d0',\n          'highlightText': '#7f7f7f',\n          'light':         '#ffffff',\n          'mid':           '#a9a9a9',\n          'midlight':      '#f6f6f6',\n          'shadow':        '#8b8b8b',\n          'text':          '#7f7f7f',\n          'window':        '#ededed',\n          'windowText':    '#7f7f7f'\n        }\n};\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'Text',\n  versions: /.*/,\n  constructor: function QMLText(meta) {\n    QMLItem.call(this, meta);\n\n    // We create another span inside the text to distinguish the actual\n    // (possibly html-formatted) text from child elements\n    this.dom.innerHTML = \"<span></span>\";\n    this.dom.style.pointerEvents = \"auto\";\n    this.dom.firstChild.style.width = \"100%\";\n    this.dom.firstChild.style.height = \"100%\";\n\n    // Creates font css description\n    function fontCss(font) {\n        var css = \"\";\n        css += font.italic ? \"italic \" : \"normal \";\n        css += font.capitalization == \"smallcaps\" ? \"small-caps \" : \"normal \";\n        // Canvas seems to only support bold yes or no\n        css += (font.weight == Font.Bold\n            || font.weight == Font.DemiBold\n            || font.weight == Font.Black\n            || font.bold) ? \"bold \" : \"normal \";\n        css += font.pixelSize !== undefined\n            ? font.pixelSize + \"px \"\n            : (font.pointSize || 10) + \"pt \";\n        css += this.lineHeight !== undefined ? this.lineHeight + \"px \" : \" \";\n        css += (font.family || \"sans-serif\") + \" \";\n        return css;\n    }\n\n    this.Text = {\n        // Wrap Mode\n        NoWrap: 0,\n        WordWrap: 1,\n        WrapAnywhere: 2,\n        Wrap: 3,\n        WrapAtWordBoundaryOrAnywhere: 3, // COMPAT\n        // Horizontal-Alignment\n        AlignLeft: \"left\",\n        AlignRight: \"right\",\n        AlignHCenter: \"center\",\n        AlignJustify: \"justify\",\n        // Style\n        Normal: 0,\n        Outline: 1,\n        Raised: 2,\n        Sunken: 3\n    }\n\n    var QMLFont = new getConstructor('QtQuick', '2.0', 'Font');\n    this.font   = new QMLFont(this);\n\n    createSimpleProperty(\"color\", this, \"color\");\n    createSimpleProperty(\"string\", this, \"text\");\n    createSimpleProperty(\"real\", this, \"lineHeight\");\n    createSimpleProperty(\"enum\", this, \"wrapMode\");\n    createSimpleProperty(\"enum\", this, \"horizontalAlignment\");\n    createSimpleProperty(\"enum\", this, \"style\");\n    createSimpleProperty(\"color\", this, \"styleColor\");\n\n    this.colorChanged.connect(this, function(newVal) {\n        this.dom.firstChild.style.color = newVal;\n    });\n    this.textChanged.connect(this, function(newVal) {\n        this.dom.firstChild.innerHTML = newVal;\n    });\n    this.lineHeightChanged.connect(this, function(newVal) {\n        this.dom.firstChild.style.lineHeight = newVal + \"px\";\n    });\n    this.wrapModeChanged.connect(this, function(newVal) {\n        switch (newVal) {\n            case 0:\n                this.dom.firstChild.style.whiteSpace = \"pre\";\n                break;\n            case 1:\n                this.dom.firstChild.style.whiteSpace = \"pre-wrap\";\n                break;\n            case 2:\n                this.dom.firstChild.style.whiteSpace = \"pre-wrap\";\n                this.dom.firstChild.style.wordBreak = \"break-all\";\n                break;\n            case 3:\n                this.dom.firstChild.style.whiteSpace = \"pre-wrap\";\n                this.dom.firstChild.style.wordWrap = \"break-word\";\n        };\n        // AlignJustify doesn't work with pre/pre-wrap, so we decide the\n        // lesser of the two evils to be ignoring \"\\n\"s inside the text.\n        if (this.horizontalAlignment == \"justify\")\n            this.dom.firstChild.style.whiteSpace = \"normal\";\n    });\n    this.horizontalAlignmentChanged.connect(this, function(newVal) {\n        this.dom.style.textAlign = newVal;\n        // AlignJustify doesn't work with pre/pre-wrap, so we decide the\n        // lesser of the two evils to be ignoring \"\\n\"s inside the text.\n        if (newVal == \"justify\")\n            this.dom.firstChild.style.whiteSpace = \"normal\";\n    });\n    this.styleChanged.connect(this, function(newVal) {\n        switch (newVal) {\n            case 0:\n                this.dom.firstChild.style.textShadow = \"none\";\n                break;\n            case 1:\n                var color = this.styleColor;\n                this.dom.firstChild.style.textShadow = \"1px 0 0 \" + color\n                    + \", -1px 0 0 \" + color\n                    + \", 0 1px 0 \" + color\n                    + \", 0 -1px 0 \" + color;\n                break;\n            case 2:\n                this.dom.firstChild.style.textShadow = \"1px 1px 0 \" + this.styleColor;\n                break;\n            case 3:\n                this.dom.firstChild.style.textShadow = \"-1px -1px 0 \" + this.styleColor;\n        };\n    });\n    this.styleColorChanged.connect(this, function(newVal) {\n        switch (this.style) {\n            case 0:\n                this.dom.firstChild.style.textShadow = \"none\";\n                break;\n            case 1:\n                this.dom.firstChild.style.textShadow = \"1px 0 0 \" + newVal\n                    + \", -1px 0 0 \" + newVal\n                    + \", 0 1px 0 \" + newVal\n                    + \", 0 -1px 0 \" + newVal;\n                break;\n            case 2:\n                this.dom.firstChild.style.textShadow = \"1px 1px 0 \" + newVal;\n                break;\n            case 3:\n                this.dom.firstChild.style.textShadow = \"-1px -1px 0 \" + newVal;\n        };\n    });\n\n    this.font.family = \"sans-serif\";\n    this.font.pointSize = 10;\n    this.wrapMode = this.Text.NoWrap;\n    this.color = \"black\";\n    this.text = \"\";\n\n    this.textChanged.connect(this, updateImplicitHeight);\n    this.textChanged.connect(this, updateImplicitWidth);\n    this.font.boldChanged.connect(this, updateImplicitHeight);\n    this.font.boldChanged.connect(this, updateImplicitWidth);\n    this.font.pixelSizeChanged.connect(this, updateImplicitHeight);\n    this.font.pixelSizeChanged.connect(this, updateImplicitWidth);\n    this.font.pointSizeChanged.connect(this, updateImplicitHeight);\n    this.font.pointSizeChanged.connect(this, updateImplicitWidth);\n    this.font.familyChanged.connect(this, updateImplicitHeight);\n    this.font.familyChanged.connect(this, updateImplicitWidth);\n    this.font.letterSpacingChanged.connect(this, updateImplicitHeight);\n    this.font.wordSpacingChanged.connect(this, updateImplicitWidth);\n\n    this.Component.completed.connect(this, updateImplicitHeight);\n    this.Component.completed.connect(this, updateImplicitWidth);\n\n    function updateImplicitHeight() {\n        var height;\n\n        if (this.text === undefined || this.text === \"\") {\n            height = 0;\n        } else {\n            height = this.dom ? this.dom.firstChild.offsetHeight : 0;\n        }\n\n        this.implicitHeight = height;\n    }\n\n    function updateImplicitWidth() {\n        var width;\n\n        if (this.text === undefined || this.text === \"\")\n            width = 0;\n        else\n            width = this.dom ? this.dom.firstChild.offsetWidth : 0;\n\n        this.implicitWidth = width;\n    }\n\n    this.$drawItem = function(c) {\n        c.save();\n        c.font = fontCss(this.font);\n        c.fillStyle = this.color;\n        c.textAlign = \"left\";\n        c.textBaseline = \"top\";\n        c.fillText(this.text, this.left, this.top);\n        c.restore();\n    }\n  }\n});\n","global.TextInput = {\n  Normal: 0, Password: 1, NoEcho: 2, PasswordEchoOnEdit: 3\n};\n\nregisterQmlType({\n  module:   'QtQuick',\n  name:     'TextInput',\n  versions: /.*/,\n  constructor: function QMLTextInput(meta) {\n    QMLItem.call(this, meta);\n\n    var self = this;\n\n    this.font = new getConstructor('QtQuick', '2.0', 'Font')(this);\n\n    this.dom.innerHTML = \"<input type=\\\"text\\\" disabled/>\"\n    this.dom.firstChild.style.pointerEvents = \"auto\";\n    // In some browsers text-inputs have a margin by default, which distorts\n    // the positioning, so we need to manually set it to 0.\n    this.dom.firstChild.style.margin = \"0\";\n    this.dom.firstChild.style.padding = \"0\";\n    this.dom.firstChild.style.width = \"100%\";\n    this.dom.firstChild.style.height = \"100%\";\n\n    this.setupFocusOnDom(this.dom.firstChild);\n\n    createSimpleProperty(\"string\", this, \"text\");\n    createSimpleProperty(\"int\",    this, \"maximumLength\");\n    createSimpleProperty(\"bool\",   this, \"readOnly\");\n    createSimpleProperty(\"var\",    this, \"validator\");\n    createSimpleProperty(\"enum\",   this, \"echoMode\");\n    this.accepted = Signal();\n    this.readOnly = false;\n    this.maximumLength = -1;\n    this.dom.firstChild.disabled = false;\n\n    this.Component.completed.connect(this, function() {\n        this.implicitWidth = this.dom.firstChild.offsetWidth;\n        this.implicitHeight = this.dom.firstChild.offsetHeight;\n    });\n\n    this.textChanged.connect(this, function(newVal) {\n        this.dom.firstChild.value = newVal;\n    });\n\n    this.echoModeChanged.connect(this, (function(newVal) {\n        switch (newVal) {\n          case TextInput.Normal:\n            this.dom.firstChild.type = \"text\";\n            break ;\n          case TextInput.Password:\n            this.dom.firstChild.type = \"password\";\n            break ;\n          case TextInput.NoEcho:\n            // Not supported, use password, that's nearest\n            this.dom.firstChild.type = \"password\";\n            break;\n          case TextInput.PasswordEchoOnEdit:\n            // Not supported, use password, that's nearest\n            this.dom.firstChild.type = \"password\";\n            break;\n        }\n    }).bind(this));\n\n    this.maximumLengthChanged.connect(this, function(newVal) {\n        if (newVal < 0)\n          newVal = null;\n        this.dom.firstChild.maxLength = newVal;\n    });\n\n    this.readOnlyChanged.connect(this, function(newVal) {\n        this.dom.firstChild.disabled = newVal;\n    });\n\n    this.Keys.pressed.connect(this, (function(e) {\n      if ((e.key == Qt.Key_Return || e.key == Qt.Key_Enter) &&\n          testValidator()) {\n        self.accepted();\n        e.accepted = true;\n      }\n    }).bind(this));\n\n    function testValidator() {\n      if (typeof self.validator != 'undefined' && self.validator != null)\n        return self.validator.validate(self.text);\n      return true;\n    }\n\n    function updateValue(e) {\n        if (self.text != self.dom.firstChild.value) {\n          self.$canEditReadOnlyProperties = true;\n          self.text = self.dom.firstChild.value;\n          self.$canEditReadOnlyProperties = false;\n        }\n    }\n\n    this.dom.firstChild.oninput = updateValue;\n    this.dom.firstChild.onpropertychanged = updateValue;\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'Timer',\n  versions: /.*/,\n  constructor: function QMLTimer(meta) {\n    QMLBaseObject.call(this, meta);\n    var prevTrigger,\n        self = this;\n\n    createSimpleProperty(\"int\", this, \"interval\");\n    createSimpleProperty(\"bool\", this, \"repeat\");\n    createSimpleProperty(\"bool\", this, \"running\");\n    createSimpleProperty(\"bool\", this, \"triggeredOnStart\");\n\n    this.interval = 1000;\n    this.repeat = false;\n    this.running = false;\n    this.triggeredOnStart = false;\n\n    // Create trigger as simple property. Reading the property triggers\n    // the function!\n    this.triggered = Signal();\n\n    engine.$addTicker(ticker);\n    function ticker(now, elapsed) {\n        if (self.running) {\n            if (now - prevTrigger >= self.interval) {\n                prevTrigger = now;\n                trigger();\n            }\n        }\n    }\n\n    this.start = function() {\n        if (!this.running) {\n            this.running = true;\n            prevTrigger = (new Date).getTime();\n            if (this.triggeredOnStart) {\n                trigger();\n            }\n        }\n    }\n    this.stop = function() {\n        if (this.running) {\n            this.running = false;\n        }\n    }\n    this.restart = function() {\n        this.stop();\n        this.start();\n    }\n\n    function trigger() {\n        if (!self.repeat)\n            // We set the value directly in order to be able to emit the runningChanged\n            // signal after triggered, like Qt does it.\n            self.$properties.running.val = false;\n\n        // Trigger this.\n        self.triggered();\n\n        if (!self.repeat)\n            // Emit changed signal manually after setting the value manually above.\n            self.runningChanged();\n    }\n\n    engine.$registerStart(function() {\n        if (self.running) {\n            self.running = false; // toggled back by self.start();\n            self.start();\n        }\n    });\n\n    engine.$registerStop(function() {\n        self.stop();\n    });\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'Transition',\n  versions: /.*/,\n  constructor: function QMLTransition(meta) {\n    QMLBaseObject.call(this, meta);\n\n    createSimpleProperty(\"list\", this, \"animations\");\n    this.$defaultProperty = \"animations\";\n    createSimpleProperty(\"string\", this, \"from\");\n    createSimpleProperty(\"string\", this, \"to\");\n    createSimpleProperty(\"bool\", this, \"reversible\");\n    this.animations = [];\n    this.$item = this.$parent;\n    this.from = \"*\";\n    this.to = \"*\";\n\n    this.$start = function(actions) {\n        for (var i = 0; i < this.animations.length; i++) {\n            var animation = this.animations[i];\n            animation.$actions = [];\n            for (var j in actions) {\n                var action = actions[j];\n                if ((animation.$targets.length === 0 || animation.$targets.indexOf(action.target) !== -1)\n                    && (animation.$props.length === 0 || animation.$props.indexOf(action.property) !== -1))\n                    animation.$actions.push(action);\n            }\n            animation.start();\n        }\n    }\n    this.$stop = function() {\n        for (var i = 0; i < this.animations.length; i++)\n            this.animations[i].stop();\n    }\n  }\n});\n","registerQmlType({\n  module:   'QtQuick',\n  name:     'Translate',\n  versions: /.*/,\n  constructor: function QMLTranslate(meta) {\n    QMLBaseObject.call(this, meta);\n\n    createSimpleProperty(\"real\", this, \"x\");\n    createSimpleProperty(\"real\", this, \"y\");\n\n    this.xChanged.connect(this.$parent, this.$parent.$updateTransform);\n    this.yChanged.connect(this.$parent, this.$parent.$updateTransform);\n\n    this.x = 0;\n    this.y = 0;\n  }\n});\n","// WARNING: Can have wrong behavior if url is changed while the socket is in Connecting state.\n// TODO: Recheck everything.\n\nregisterQmlType({\n  module:   'QtWebSockets',\n  name:     'WebSocket',\n  versions: /.*/,\n  constructor: function QMLWebSocket(meta) {\n    QMLBaseObject.call(this, meta);\n\n    // Exports.\n    this.WebSocket = {\n        // status\n        Connecting: 0,\n        Open: 1,\n        Closing: 2,\n        Closed: 3,\n        Error: 4\n    }\n\n    createSimpleProperty(\"bool\", this, \"active\");\n    createSimpleProperty(\"enum\", this, \"status\");\n    createSimpleProperty(\"string\", this, \"errorString\");\n    createSimpleProperty(\"url\", this, \"url\");\n\n    this.textMessageReceived = Signal([{type: \"string\", name: \"message\"}]);\n\n    this.status = this.WebSocket.Closed;\n\n    var self = this,\n        socket,\n        reconnect = false;\n\n    this.sendTextMessage = function(message) {\n        if (this.status == this.WebSocket.Open)\n            socket.send(message);\n    }\n\n    function connectSocket() {\n        reconnect = false;\n\n        if (!self.url || !self.active)\n            return;\n\n        self.status = self.WebSocket.Connecting;\n        socket = new WebSocket(self.url);\n        socket.onopen = function() {\n            self.status = self.WebSocket.Open;\n        }\n        socket.onclose = function() {\n            self.status = self.WebSocket.Closed;\n            if (reconnect)\n                connectSocket();\n        }\n        socket.onerror = function(error) {\n            self.errorString = error.message;\n            self.status = self.WebSocket.Error;\n        }\n        socket.onmessage = function(message) {\n            self.textMessageReceived(message.data);\n        }\n    };\n\n    function reconnectSocket() {\n        reconnect = true;\n        if (self.status == self.WebSocket.Open) {\n            self.status = self.WebSocket.Closing;\n            socket.close()\n        } else if (self.status != self.WebSocket.Closing) {\n            connectSocket();\n        }\n    };\n\n    this.statusChanged.connect(this, function(status) {\n        if (status != self.WebSocket.Error)\n            self.errorString = \"\";\n    });\n    this.activeChanged.connect(this, reconnectSocket);\n    this.urlChanged.connect(this, reconnectSocket);\n  }\n});\n","(function() {\n  var uglify_parse;\n\n  if (typeof module !== 'undefined' && module.exports)\n    uglify_parse = require(\"uglify-js\").parse;\n  else\n    uglify_parse = parse;\n\n  global.importJavascriptInContext = function (jsData, $context) {\n    with($context) {\n      eval(jsData.source);\n      for (var i = 0 ; i < jsData.exports.length ; ++i) {\n        var symbolName = jsData.exports[i];\n        $context[symbolName] = eval(symbolName);\n      }\n    }\n  }\n\n  global.jsparse = function (source) {\n    var AST_Tree = uglify_parse(source);\n    var obj = { exports: [], source: source };\n\n    for (var i = 0 ; i < AST_Tree.body.length ; ++i) {\n      var element = AST_Tree.body[i];\n\n      switch (element.__proto__.TYPE) {\n        case \"VAR\":\n          obj.exports.push(element.definitions[0].name.name);\n          break ;\n        case \"Defun\":\n          obj.exports.push(element.name.name);\n          break ;\n      }\n    }\n    return obj;\n  }\n\n})();\n","/*\n * - QMLEngine(element, options) -- Returns new qml engine object, for which:\n *   - loadFile(file) -- Load file to the engine (.qml or .qml.js atm)\n *   - start() -- start the engine/application\n *   - stop() -- stop the engine/application. Restarting is experimental.\n *   element is HTMLCanvasElement and options are for debugging.\n *   For further reference, see testpad and qml viewer applications.\n */\n\n// There can only be one running QMLEngine. This variable points to the currently running engine.\nvar engine = null;\n\n// QML engine. EXPORTED.\nQMLEngine = function (element, options) {\n//----------Public Members----------\n    this.fps = 60;\n    this.$interval = Math.floor(1000 / this.fps); // Math.floor, causes bugs to timing?\n    this.running = false;\n\n    // Mouse Handling\n    this.mouseAreas = [];\n    this.oldMousePos = {x:0, y:0};\n\n    // List of available Components\n    this.components = {};\n\n    this.rootElement = element;\n\n    // List of Component.completed signals\n    this.completedSignals = [];\n\n    // Current operation state of the engine (Idle, init, etc.)\n    this.operationState = 1;\n\n    // List of properties whose values are bindings. For internal use only.\n    this.bindedProperties = [];\n\n    // Root object of the engine\n    this.rootObject = null;\n\n    // Base path of qml engine (used for resource loading)\n    this.$basePath = \"\";\n\n\n//----------Public Methods----------\n    // Start the engine\n    this.start = function()\n    {\n        engine = this;\n        var i;\n        if (this.operationState !== QMLOperationState.Running) {\n            this.operationState = QMLOperationState.Running;\n            tickerId = setInterval(tick, this.$interval);\n            for (i = 0; i < whenStart.length; i++) {\n                whenStart[i]();\n            }\n        }\n    }\n\n    // Stop the engine\n    this.stop = function()\n    {\n        var i;\n        if (this.operationState == QMLOperationState.Running) {\n            element.removeEventListener(\"touchstart\", touchHandler);\n            element.removeEventListener(\"mousemove\", mousemoveHandler);\n            clearInterval(tickerId);\n            this.operationState = QMLOperationState.Idle;\n            for (i = 0; i < whenStop.length; i++) {\n                whenStop[i]();\n            }\n        }\n    }\n\n\n    this.ensureFileIsLoadedInQrc = function(file) {\n      if (!qrc.includesFile(file)) {\n        var src = getUrlContents(file);\n\n        if (src) {\n            console.log('Loading file [', file, ']');\n            qrc[file] = qmlparse(src);\n        } else {\n            console.log('Can not load file [', file, ']');\n        }\n      }\n    }\n\n    this.extractBasePath = function( file ) {\n       var basePath = file.split(/[\\/\\\\]/); // work both in url (\"/\") and windows (\"\\\", from file://d:\\test\\) notation\n       basePath[basePath.length - 1] = \"\";\n       basePath = basePath.join(\"/\");\n       return basePath;\n    }\n    // Load file, parse and construct (.qml or .qml.js)\n    this.loadFile = function(file) {\n        var tree;\n\n        this.$basePath = this.extractBasePath(file);\n        this.ensureFileIsLoadedInQrc(file);\n        tree = convertToEngine(qrc[file]);\n        this.loadQMLTree(tree);\n    }\n\n    // parse and construct qml\n    this.loadQML = function(src) {\n        this.loadQMLTree(parseQML(src));\n    }\n\n    this.loadQMLTree = function(tree, file) {\n        engine = this;\n        if (options.debugTree) {\n            options.debugTree(tree);\n        }\n\n        // Create and initialize objects\n        var component = new QMLComponent({ object: tree, parent: null });\n\n        this.loadImports( tree.$imports );\n        component.$basePath = engine.$basePath;\n        component.$imports = tree.$imports; // for later use\n        component.$file = file; // just for debugging\n\n        this.rootObject = component.createObject(null);\n        component.finalizeImports(this.rootContext());\n        this.$initializePropertyBindings();\n\n        this.start();\n\n        // Call completed signals\n        for (var i in this.completedSignals) {\n            this.completedSignals[i]();\n        }\n    }\n\n    /** from http://docs.closure-library.googlecode.com/git/local_closure_goog_uri_uri.js.source.html\n     *\n     * Removes dot segments in given path component, as described in\n     * RFC 3986, section 5.2.4.\n     *\n     * @param {string} path A non-empty path component.\n     * @return {string} Path component with removed dot segments.\n     */\n    this.removeDotSegments = function(path) {\n        var leadingSlash = (path && path[0] == \"/\");   // path.startsWith('/'); -- startsWith seems to be undefined in some browsers\n        var segments = path.split('/');\n        var out = [];\n\n        for (var pos = 0; pos < segments.length; ) {\n            var segment = segments[pos++];\n\n            if (segment == '.') {\n                if (leadingSlash && pos == segments.length) {\n                    out.push('');\n                }\n            } else if (segment == '..') {\n                if (out.length > 1 || out.length == 1 && out[0] != '') {\n                    out.pop();\n                }\n                if (leadingSlash && pos == segments.length) {\n                    out.push('');\n                }\n            } else {\n                out.push(segment);\n                leadingSlash = true;\n            }\n        }\n\n        return out.join('/');\n    };\n\n    /*\n      engine.loadImports( imports, currentDir ) : performs loading of qmldir files from given qml import records.\n\n      Input:\n      * parameter `importsArray` - import statements. It is in parser notation, e.g. [import1, import2, ...] where each importN is also array: [\"qmlimport\",\"name\",version,as,isQualifiedName]\n      * parameter `currentFileDir` - base dir for imports lookup. It will be used together with importPathList()\n\n      Implicit input:\n      * engine object function `importPathList()` - list of urls bases used for qmldir files lookup\n\n      Additional implicit input/output:\n      * engine object variable `qmldirsContents` - used for caching, e.g. memory for previously loaded qmldir files\n\n      Output: \n      * engine object variable `qmldirs` - new records will be added there\n\n      Return value: \n      * nothing\n\n      Details:\n\n      For each of given import statements, loadImports \n      1. computes qmldir file location according to http://doc.qt.io/qt-5/qtqml-syntax-imports.html\n      2. calls `readQmlDir` for actual reading and parsing of qmldir file content\n      3. gets `external` declarations of that qmldir file and pushes them to `engine.qmldirs` hash.\n\n      `engine.qmldirs` is a hash of form: { componentName => componentFileUrl }\n      This hash then used by `qml.js::construct` method for computing component urls.\n\n      Notes:\n      1. This method is not suited for loading js imports. This may be done probably after answering to Q1 (below).\n      2. Please look for additional notes at readQmlDir function.\n\n      QNA\n      Q1: How and where in engine component names might be prefixed? E.g. names with dot inside: SomeModule.Component1\n      A1: Seems it doesn't matter. Seems we may just save name with dot-inside right to qmldirs, and it may be used by construct() seamlessly. Check it..\n\n      Q2: How we may access component object from here, to store qmldirs info in components logical scope, and not at engine scope?\n      A2: Probably, answer is in Component.js and in global.loadImports\n\n      TODO \n      * We have to keep output in component scope, not in engine scope.\n      * We have to add module \"as\"-names to component's names (which is possible after keeping imports in component scope).\n      * Determine how this stuff is related to `global.loadImports`\n      * Check A1\n      * Make a complete picture of what going in with imports, including Component.js own imports loading\n      * Note importJs method in import.js \n    */\n\n    this.loadImports = function(importsArray, currentFileDir) {\n        if (!this.qmldirsContents) this.qmldirsContents = { \"QtQuick\":{}, \"QtQuick.Controls\":{} }; // cache\n        // putting initial keys in qmldirsContents - is a hack. We should find a way to explain to qmlweb, is this built-in module or qmldir-style module.\n\n        if (!this.qmldirs) this.qmldirs = {};                 // resulting components lookup table\n\n        if (!importsArray || importsArray.length == 0) return;\n        if (!currentFileDir) currentFileDir = this.$basePath;     // use this.$basePath by default\n\n        for (var i=0; i<importsArray.length; i++) {\n            var entry = importsArray[i];\n\n            var name = entry[1];\n\n            var nameIsUrl = name.indexOf(\"//\") == 0 || name.indexOf(\"://\") >= 0;  // is it url to remote resource\n            var nameIsQualifiedModuleName = entry[4]; // e.g. QtQuick, QtQuick.Controls, etc\n            var nameIsDir = !nameIsQualifiedModuleName && !nameIsUrl; // local [relative] dir\n\n            if (nameIsDir) {\n                // resolve name from relative to full dir path\n                // we hope all dirs are relative\n                name = this.removeDotSegments( currentFileDir + name );\n                if (name[ name.length-1 ] == \"/\")\n                    name = name.substr( 0, name.length-1 ); // remove trailing slash as it required for `readQmlDir`\n            }\n            // TODO if nameIsDir, we have also to add `name` to importPathList() for current component...\n\n            // check if we have already loaded that qmldir file\n            if (this.qmldirsContents[ name ]) continue;\n\n            var content = false;\n            if (nameIsQualifiedModuleName && this.userAddedModulePaths && this.userAddedModulePaths[ name ]) {\n                // 1. we have qualified module and user had configured path for that module with this.addModulePath\n                content = readQmlDir( this.userAddedModulePaths[ name ] );\n            }\n            else if (nameIsUrl || nameIsDir)\n            {\n                // 2. direct load\n                // nameIsUrl => url do not need dirs\n                // nameIsDir => already computed full path above\n                content = readQmlDir( name );\n            }\n            else\n            {\n                // 3. qt-style lookup for qualified module\n                var probableDirs = [currentFileDir].concat( this.importPathList() )\n                var diredName = name.replace( /\\./g,\"/\" );\n\n                for (var k=0; k<probableDirs.length; k++) {\n                    var file = probableDirs[k] + diredName;\n                    content = readQmlDir( file );\n                    if (content) break;\n                }\n            }\n\n            if (!content) {\n                console.log(\"qmlengine::loadImports: cannot load qmldir file for import name=\",name );\n                // save blank info, meaning that we failed to load import\n                // this prevents repeated lookups\n                this.qmldirsContents[ name ] = {};\n\n               // NEW\n               // add that dir to import path list\n               // that means, lookup qml files in that failed dir by trying to load them directly\n               // this is not the same behavior as in Qt for \"url\" schemes,\n               // but it is same as for ordirnal disk files. \n               // So, we do it for experimental purposes.\n               if (nameIsDir) \n                 this.addImportPath( name + \"/\" );\n\n               continue;\n            }\n\n            // copy founded externals to global var\n            // TODO actually we have to copy it to current component\n            for (var attrname in content.externals) { this.qmldirs[attrname] = content.externals[attrname]; }\n\n            // keep already loaded qmldir files\n            this.qmldirsContents[ name ] = content;\n        }\n\n    }\n\n    this.rootContext = function() {\n      return this.rootObject.$context;\n    }\n\n    this.focusedElement = (function() {\n      return this.rootContext().activeFocus;\n    }).bind(this);\n\n    // KEYBOARD MANAGEMENT\n    var keyboardSignals = {};\n    keyboardSignals[Qt.Key_Asterisk]   = 'asteriskPressed';\n    keyboardSignals[Qt.Key_Back]       = 'backPressed';\n    keyboardSignals[Qt.Key_Backtab]    = 'backtabPressed';\n    keyboardSignals[Qt.Key_Call]       = 'callPressed';\n    keyboardSignals[Qt.Key_Cancel]     = 'cancelPressed';\n    keyboardSignals[Qt.Key_Delete]     = 'deletePressed';\n    keyboardSignals[Qt.Key_0]          = 'digit0Pressed';\n    keyboardSignals[Qt.Key_1]          = 'digit1Pressed';\n    keyboardSignals[Qt.Key_2]          = 'digit2Pressed';\n    keyboardSignals[Qt.Key_3]          = 'digit3Pressed';\n    keyboardSignals[Qt.Key_4]          = 'digit4Pressed';\n    keyboardSignals[Qt.Key_5]          = 'digit5Pressed';\n    keyboardSignals[Qt.Key_6]          = 'digit6Pressed';\n    keyboardSignals[Qt.Key_7]          = 'digit7Pressed';\n    keyboardSignals[Qt.Key_8]          = 'digit8Pressed';\n    keyboardSignals[Qt.Key_9]          = 'digit9Pressed';\n    keyboardSignals[Qt.Key_Escape]     = 'escapePressed';\n    keyboardSignals[Qt.Key_Flip]       = 'flipPressed';\n    keyboardSignals[Qt.Key_Hangup]     = 'hangupPressed';\n    keyboardSignals[Qt.Key_Menu]       = 'menuPressed';\n    keyboardSignals[Qt.Key_No]         = 'noPressed';\n    keyboardSignals[Qt.Key_Return]     = 'returnPressed';\n    keyboardSignals[Qt.Key_Select]     = 'selectPressed';\n    keyboardSignals[Qt.Key_Space]      = 'spacePressed';\n    keyboardSignals[Qt.Key_Tab]        = 'tabPressed';\n    keyboardSignals[Qt.Key_VolumeDown] = 'volumeDownPressed';\n    keyboardSignals[Qt.Key_VolumeUp]   = 'volumeUpPressed';\n    keyboardSignals[Qt.Key_Yes]        = 'yesPressed';\n    keyboardSignals[Qt.Key_Up]         = 'upPressed';\n    keyboardSignals[Qt.Key_Right]      = 'rightPressed';\n    keyboardSignals[Qt.Key_Down]       = 'downPressed';\n    keyboardSignals[Qt.Key_Left]       = 'leftPressed';\n\n    function keyCodeToQt(e) {\n      if (e.keyCode >= 96 && e.keyCode <= 111) {\n        e.keypad = true;\n      }\n      if (e.keyCode == Qt.Key_Tab && e.shiftKey == true)\n        return Qt.Key_Backtab;\n      else if (e.keyCode >= 97 && e.keyCode <= 122)\n        return e.keyCode - (97 - Qt.Key_A);\n      return e.keyCode;\n    }\n\n    function eventToKeyboard(e) {\n        return {\n            accepted: false,\n            count: 1,\n            isAutoRepeat: false,\n            key: keyCodeToQt(e),\n            modifiers: (e.ctrlKey * Qt.CtrlModifier)\n                    | (e.altKey   * Qt.AltModifier)\n                    | (e.shiftKey * Qt.ShiftModifier)\n                    | (e.metaKey  * Qt.MetaModifier)\n                    | (e.keypad   * Qt.KeypadModifier),\n            text: String.fromCharCode(e.charCode)\n        };\n    }\n\n    document.onkeypress = (function(e) {\n      var focusedElement = this.focusedElement();\n      var event          = eventToKeyboard(e || window.event);\n      var eventName      = keyboardSignals[event.key];\n\n      while (event.accepted != true && focusedElement != null) {\n        var backup       = focusedElement.$context.event;\n\n        focusedElement.$context.event = event;\n        focusedElement.Keys.pressed(event);\n        if (eventName != null)\n          focusedElement.Keys[eventName](event);\n        focusedElement.$context.event = backup;\n        if (event.accepted == true)\n          e.preventDefault();\n        else\n          focusedElement = focusedElement.$parent;\n      }\n    }).bind(this);\n\n    document.onkeyup = (function(e) {\n      var focusedElement = this.focusedElement();\n      var event          = eventToKeyboard(e || window.event);\n\n      while (event.accepted != true && focusedElement != null) {\n        var backup       = focusedElement.$context.event;\n\n        focusedElement.$context.event = event;\n        focusedElement.Keys.released(event);\n        focusedElement.$context.event = backup;\n        if (event.accepted == true)\n          e.preventDefault();\n        else\n          focusedElement = focusedElement.$parent;\n      }\n    }).bind(this);\n    // END KEYBOARD MANAGEMENT\n\n    this.registerProperty = function(obj, propName)\n    {\n        var dependantProperties = [];\n        var value = obj[propName];\n\n        function getter() {\n            if (evaluatingProperty && dependantProperties.indexOf(evaluatingProperty) == -1)\n                dependantProperties.push(evaluatingProperty);\n\n            return value;\n        }\n\n        function setter(newVal) {\n            value = newVal;\n\n            for (i in dependantProperties)\n                dependantProperties[i].update();\n        }\n\n        setupGetterSetter(obj, propName, getter, setter);\n    }\n\n    // next 3 methods used in Qt.createComponent for qml files lookup\n    // please open qt site for documentation\n    // http://doc.qt.io/qt-5/qqmlengine.html#addImportPath\n\n    this.addImportPath = function( dirpath ) {\n        if (!this.userAddedImportPaths) this.userAddedImportPaths = [];\n        this.userAddedImportPaths.push( dirpath );\n    }\n\n    this.setImportPathList = function( arrayOfDirs )\n    {\n        this.userAddedImportPaths = arrayOfDirs;\n    }\n\n    this.importPathList = function() {\n        return (this.userAddedImportPaths || []);\n    }\n\n    // `addModulePath` defines conrete path for module lookup\n    // e.g. addModulePath( \"QtQuick.Controls\",\"http://someserver.com/controls\" )\n    // will force system to `import QtQuick.Controls` module from `http://someserver.com/controls/qmldir`\n\n    this.addModulePath = function( moduleName, dirPath ) {\n\n        // remove trailing slash as it required for `readQmlDir`\n        if (dirPath[ dirPath.length-1 ] == \"/\")\n            dirPath = dirPath.substr( 0, dirPath.length-1 );\n\n        // keep the mapping. It will be used in loadImports() function .\n        if (!this.userAddedModulePaths) this.userAddedModulePaths = {};\n        this.userAddedModulePaths[ moduleName ] = dirPath;\n    }\n\n//Intern\n\n    // Load file, parse and construct as Component (.qml)\n    this.loadComponent = function(name)\n    {\n        if (name in this.components)\n            return this.components[name];\n\n        var file = qmlEngine.$basePath + name + \".qml\";\n\n        this.ensureFileIsLoadedInQrc(file);\n        tree = convertToEngine(qrc[file]);\n        this.components[name] = tree;\n        return tree;\n    }\n\n    this.$initializePropertyBindings = function() {\n        // Initialize property bindings\n        for (var i = 0; i < this.bindedProperties.length; i++) {\n            var property = this.bindedProperties[i];\n            property.binding.compile();\n            property.update();\n        }\n        this.bindedProperties = [];\n    }\n\n    this.$getTextMetrics = function(text, fontCss)\n    {\n        canvas.save();\n        canvas.font = fontCss;\n        var metrics = canvas.measureText(text);\n        canvas.restore();\n        return metrics;\n    }\n\n    // Return a path to load the file\n    this.$resolvePath = function(file)\n    {\n        // probably, replace :// with :/ ?\n        if (file == \"\" || file.indexOf(\"://\") != -1 || file.indexOf(\"/\") == 0 || file.indexOf(\"data:\") == 0 || file.indexOf(\"blob:\") == 0) {\n            return file;\n        }\n        return this.$basePath + file;\n    }\n\n    this.$registerStart = function(f)\n    {\n        whenStart.push(f);\n    }\n\n    this.$registerStop = function(f)\n    {\n        whenStop.push(f);\n    }\n\n    this.$addTicker = function(t)\n    {\n        tickers.push(t);\n    }\n\n    this.$removeTicker = function(t)\n    {\n        var index = tickers.indexOf(t);\n        if (index != -1) {\n            tickers.splice(index, 1);\n        }\n    }\n\n    this.size = function()\n    {\n        return { width: this.rootObject.getWidth(), height: this.rootObject.getHeight() };\n    }\n\n    // Performance measurements\n    this.$perfDraw = function(canvas)\n    {\n        this.rootObject.$draw(canvas);\n    }\n\n//----------Private Methods----------\n    // In JS we cannot easily access public members from\n    // private members so self acts as a bridge\n    var self = this;\n\n    // Listen also to touchstart events on supporting devices\n    // Makes clicks more responsive (do not wait for click event anymore)\n    function touchHandler(e)\n    {\n        // preventDefault also disables pinching and scrolling while touching\n        // on qml application\n        e.preventDefault();\n        var at = {\n            layerX: e.touches[0].pageX - element.offsetLeft,\n            layerY: e.touches[0].pageY - element.offsetTop,\n            button: 1\n        }\n        element.onclick(at);\n\n    }\n\n    function mousemoveHandler(e)\n    {\n        var i;\n        for (i in self.mouseAreas) {\n            var l = self.mouseAreas[i];\n            if (l && l.hoverEnabled\n                  && (self.oldMousePos.x >= l.left\n                      && self.oldMousePos.x <= l.right\n                      && self.oldMousePos.y >= l.top\n                      && self.oldMousePos.y <= l.bottom)\n                  && !(e.pageX - element.offsetLeft >= l.left\n                       && e.pageX - element.offsetLeft <= l.right\n                       && e.pageY - element.offsetTop >= l.top\n                       && e.pageY - element.offsetTop <= l.bottom) )\n                l.exited();\n        }\n        for (i in self.mouseAreas) {\n            var l = self.mouseAreas[i];\n            if (l && l.hoverEnabled\n                  && (e.pageX - element.offsetLeft >= l.left\n                      && e.pageX - element.offsetLeft <= l.right\n                      && e.pageY - element.offsetTop >= l.top\n                      && e.pageY - element.offsetTop <= l.bottom)\n                  && !(self.oldMousePos.x >= l.left\n                       && self.oldMousePos.x <= l.right\n                       && self.oldMousePos.y >= l.top\n                       && self.oldMousePos.y <= l.bottom))\n                l.entered();\n        }\n        self.oldMousePos = { x: e.pageX - element.offsetLeft,\n                            y: e.pageY - element.offsetTop };\n    }\n\n    function tick()\n    {\n        var i,\n            now = (new Date).getTime(),\n            elapsed = now - lastTick;\n        lastTick = now;\n        for (i = 0; i < tickers.length; i++) {\n            tickers[i](now, elapsed);\n        }\n    }\n\n\n//----------Private Members----------\n    // Target canvas\n    var // Callbacks for stopping or starting the engine\n        whenStop = [],\n        whenStart = [],\n        // Ticker resource id and ticker callbacks\n        tickerId,\n        tickers = [],\n        lastTick = new Date().getTime(),\n        i;\n\n\n//----------Construct----------\n\n    options = options || {};\n\n    if (options.debugConsole) {\n        // Replace QML-side console.log\n        console = {};\n        console.log = function() {\n            var args = Array.prototype.slice.call(arguments);\n            options.debugConsole.apply(undefined, args);\n        };\n    }\n}\n\n","QMLOperationState = {\n    Idle: 1,\n    Init: 2,\n    Running: 3\n};\n","registerQmlType({\n  module:   'QmlWeb',\n  name:     'RestModel',\n  versions: /.*/,\n  constructor: function QMLRestModel(meta) {\n    QMLItem.call(this, meta);\n    var self = this;\n    var attributes = this.getAttributes();\n\n    createSimpleProperty(\"string\", this, \"url\");\n    createSimpleProperty(\"bool\",   this, \"isLoading\");\n    createSimpleProperty(\"string\", this, \"mimeType\");\n    createSimpleProperty(\"string\", this, \"queryMimeType\");\n\n    this.mimeType      = \"application/json\";\n    this.queryMimeType = \"application/x-www-urlencoded\";\n    this.isLoading     = false;\n    this.attributes    = attributes;\n\n    this.fetched = Signal();\n    this.saved   = Signal();\n\n    this.runningRequests = 0;\n\n    this.fetch = function() {\n      ajax({\n        method:   'GET',\n        mimeType: self.mimetype,\n        success: function(xhr) {\n          xhrReadResponse(xhr);\n          self.fetched();\n        }\n      });\n    };\n\n    this.create = function() {\n      sendToServer('POST');\n    };\n\n    this.save = function() {\n      sendToServer('PUT');\n    };\n\n    function sendToServer(method) {\n      var body = generateBodyForPostQuery();\n\n      ajax({\n        method:   method,\n        mimeType: self.queryMimeType,\n        body:     body,\n        success:  function(xhr) {\n          xhrReadResponse(xhr);\n          self.saved();\n        }\n      });\n    }\n\n    this.remove = function() {\n      ajax({\n        method: 'DELETE',\n        success: function(xhr) {\n          self.destroy();\n        }\n      });\n    };\n\n    function generateBodyForPostQuery() {\n      var object     = {};\n      var body;\n\n      for (var i = 0 ; i < self.attributes.length ; ++i)\n        object[self.attributes[i]] = self.$properties[self.attributes[i]].get();\n      console.log(object);\n      if (self.queryMimeType == 'application/json' || self.queryMimeType == 'text/json')\n        body = JSON.stringify(object);\n      else if (self.queryMimeType == 'application/x-www-urlencoded')\n        body = objectToUrlEncoded(object);\n      return body;\n    }\n\n    function myEncodeURIComponent(str) {\n      return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return '%' + c.charCodeAt(0).toString(16);\n      });\n    }\n\n    function objectToUrlEncoded(object, prefix) {\n      var str = '';\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          var value = object[key];\n          if (str != '')\n            str += '&';\n          if (typeof prefix != 'undefined')\n            key  = prefix + '[' + key + ']';\n          if (typeof value == 'object')\n            str += objectToUrlEncoded(value, key);\n          else\n            str += myEncodeURIComponent(key) + '=' + myEncodeURIComponent(value);\n        }\n      }\n      return str;\n    }\n\n    function ajax(options) {\n      var xhr = new XMLHttpRequest();\n\n      xhr.overrideMimeType(self.mimeType);\n      xhr.onreadystatechange = function() {\n        if (xhr.readyState == XMLHttpRequest.DONE) {\n          if (xhr.status == 200)\n            options.success(xhr);\n          else\n            options.failure(xhr);\n          self.runningRequests -= 1;\n          if (self.runningRequests <= 0)\n            self.isLoading = false;\n        }\n      }\n      xhr.open(options.method, self.url, true);\n      if (typeof options.body != 'undefined') {\n        xhr.setRequestHeader('Content-Type', self.queryMimeType);\n        xhr.send(options.body);\n      }\n      else\n        xhr.send(null);\n      self.runningRequests += 1;\n      self.isLoading = true;\n    }\n\n    function xhrReadResponse(xhr) {\n      var responseObject;\n\n      if (self.mimeType == 'application/json' || self.mimeType == 'text/json') {\n        responseObject = JSON.parse(xhr.responseText);\n      }\n      updatePropertiesFromResponseObject(responseObject);\n    }\n\n    function updatePropertiesFromResponseObject(responseObject) {\n      for (var key in responseObject) {\n        if (responseObject.hasOwnProperty(key) && self.$hasProperty(key)) {\n          self.$properties[key].set(responseObject[key]);\n        }\n      }\n    }\n\n    this.$hasProperty = function(name) {\n      return (typeof self.$properties[name] != 'undefined');\n    }\n  }\n});\n","registerQmlType({\n  module: 'QtQuick',\n  name:   'Settings',\n  versions: /.*/,\n  constructor: function QMLSettings(meta) {\n    QMLItem.call(this, meta);\n\n    createSimpleProperty(\"string\", this, \"category\");\n\n    if (typeof window.localStorage == 'undefined')\n      return ;\n\n    var attributes;\n\n    var getKey = (function(attrName) {\n      return this.category + '/' + attrName;\n    }).bind(this);\n\n    var loadProperties = (function() {\n      for (var i = 0 ; i < attributes.length ; ++i) {\n        this[attributes[i]] = localStorage.getItem(getKey(attributes[i]));\n      }\n    }).bind(this);\n\n    var initializeProperties = (function() {\n      for (var i = 0 ; i < attributes.length ; ++i) {\n        var attrName   = attributes[i];\n        var signalName = attrName + 'Changed';\n        var emitter    = this;\n\n        if (this.$properties[attrName].type == 'alias') {\n          emitter    = this.$context[this.$properties[attrName].val.objectName];\n          signalName = this.$properties[attrName].val.propertyName + 'Changed';\n        }\n        emitter[signalName].connect(this, (function() {\n          localStorage.setItem(getKey(this.attrName), this.self[this.attrName]);\n        }).bind({ self: this, attrName: attrName }));\n      }\n    }).bind(this);\n\n    this.Component.completed.connect(this, (function() {\n      attributes = this.getAttributes();\n      loadProperties();\n      initializeProperties();\n    }).bind(this));\n  }\n});\n","})(typeof global != 'undefined' ? global : window);\n"],"sourceRoot":"/source/"}